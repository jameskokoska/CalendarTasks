{"version":3,"sources":["components/ColorPicker.js","components/Header1.js","App.js","assets/cog-solid.svg","components/WelcomeMessage.js","components/EventInfoMessage.js","components/Settings.js","functions/DataFunctions.js","components/Pomo.js","assets/ding.m4a","components/DayView.js","components/TimeOutError.js","components/Marks.js","components/HomePage.js","assets/Step1.png","assets/Step2.png","assets/Step3.png","assets/Step4.png","components/LoginGuideMessage.js","reportWebVitals.js","index.js","assets/check-solid.svg","components/TaskList.js","assets/sync-alt-solid.svg","components/Refresh.js","functions/DateFunctions.js","components/ButtonStyle.js","assets/thumbtack-solid.svg","assets/info-circle-solid.svg"],"names":["ColorPicker","props","handleColorChange","color","setState","colorValue","hex","setColor","state","displayColorPicker","AsyncStorage","setItem","this","courseStorageID","console","log","onChange","React","Component","global","version","changeLog","App","className","href","Date","prototype","addDays","days","date","valueOf","setDate","getDate","SettingsContainerColor","Group","style","Label","settingColour","course","currentValue","keyName","SettingsContainer","form","key","checked","target","value","setting","type","title","Control","handleChange","placeholder","placeHolder","defaultValue","Text","description","keyName1","placeHolder1","currentValue1","width","display","marginLeft","marginRight","subtitle1","keyName2","placeHolder2","currentValue2","subtitle2","Check","label","defaultChecked","getSettingsValue","settingsList","settings","undefined","x","length","settingsColour","settingsOptionsColour","courses","settingsOptionColour","currentColour","push","settingsOptions","determineTaskName","summary","name","substring","test","getStorage","a","getItem","stored","syncData","data","loadedData","JSON","parse","i","replace","pluralString","condition","string","WeekListHeader","weekHeaders","dateDisplayStart","getMonth","getYear","backgroundColor","fontSize","marginBottom","getDisplayDayFull","getDisplayMonth","DayList","dayListEntries","DayListEntry","toggleEventInfoOpen","calendarObjects","dayOffset","courseColors","errorTimeoutOpen","updateDone","updatePin","darkMode","DayEntry","handleItemClick","bind","done","event","calendarIDCurrent","ApiCalendar","setCalendar","pin","sign","updateEvent","id","then","catch","error","weekTimeLabelMargin","pinDisplay","descriptionDisplay","courseDisplay","iconBoxWeekRight","iconBoxWeekBottom","dayStyle","pinClass","courseColor","weekEntryClass","weekEntryOpacity","onClick","e","clickActionCheck","checkColor","textStyle","timeStart","displayTimeEnd","alt","src","pinIcon","placement","overlay","dangerouslySetInnerHTML","__html","task","infoIcon","staggerDurationBy","easing","duration","staggerDelayBy","leaveAnimation","enterAnimation","map","timeEnd","important","hide","eventToday","start","dateTime","end","calendarID","MarksCourse","handleGoalChange","handleDataChange","prevProps","currentCourseEntries","goal","examMark","index1","index2","tempData","stringify","pop","currentWeight","currentMark","examPercentage","totalCurrentMark","totalPercentageSubmitted","required","finalMark","fail","parseFloat","Math","round","Number","EPSILON","extraCourseButton","coursesExtra","includes","variant","handleRemoveCourse","paddingTop","entry","index","MarksRow","toString","height","addEntry","removeEntry","maxWidth","marginTop","flexDirection","preserveValue","redraw","alignItems","maxLength","handleExamMarkChange","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","TaskTable","sortCalendarObjects","checkIcon","typeName","weekLimitHide","hoursBefore","nextWeekShow","dateObjEnd","TaskEntry","checkClass","checkMarkBG","courseClass","dateColor","dateFontWeight","marginNameFix","now","OverlayTrigger","Tooltip","fontWeight","today","getDay","weekDay","month","ButtonStyle"],"mappings":"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","file":"static/js/main.e8008f41.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { SliderPicker } from \"react-color\";\r\nimport { AsyncStorage } from 'AsyncStorage';\r\nimport '../App.css';\r\n\r\nclass ColorPicker extends React.Component{\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      displayColorPicker: false,\r\n      colorValue: this.props.color\r\n    };\r\n  }\r\n  setColor(color){\r\n    AsyncStorage.setItem(this.props.courseStorageID, color);\r\n    console.log(color);\r\n  }\r\n  handleColorChange = color => {\r\n    this.setState({\r\n      colorValue: color.hex\r\n    });\r\n    this.setColor(color.hex)\r\n  };\r\n  render(){\r\n    return(\r\n      <SliderPicker\r\n        color={this.state.colorValue}\r\n        onChange={this.handleColorChange}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nexport default ColorPicker;","import React from 'react';\r\nimport '../App.css';\r\n\r\nexport default function Header1(props){\r\n  return(\r\n    <div className=\"header1\">\r\n      {props.content}\r\n    </div>\r\n  )\r\n}","import React, {ReactNode, SyntheticEvent} from 'react';\r\nimport { AsyncStorage } from 'AsyncStorage';\r\nimport ApiCalendar from 'react-google-calendar-api';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Tabs from 'react-bootstrap/Tabs'\r\nimport Tab from 'react-bootstrap/Tabs'\r\nimport './App.css';\r\n// import { makeStyles } from '@material-ui/core/styles';\r\n// import TextField from '@material-ui/core/TextField';\r\n// import { createMuiTheme } from '@material-ui/core/styles';\r\n// import { ThemeProvider } from '@material-ui/styles';\r\nimport Toast from 'react-bootstrap/Toast'\r\n\r\nimport WelcomeMessage from \"./components/WelcomeMessage\"\r\nimport EventInfoMessage from \"./components/EventInfoMessage\"\r\nimport Settings, {getSettingsValue, settingsOptions, settingsOptionsColour} from \"./components/Settings\"\r\nimport TaskList from \"./components/TaskList\"\r\nimport {getDisplayDayFull, getDisplayDay, getDisplayMonth, getDisplayMonthFull, displayDate, displayTime} from \"./functions/DateFunctions\"\r\nimport Pomo from \"./components/Pomo\"\r\nimport WeekList from \"./components/DayView\"\r\nimport Header1 from \"./components/Header1\"\r\nimport Refresh from \"./components/Refresh\"\r\nimport TimeOutError from \"./components/TimeOutError\"\r\nimport {getStorage, listEvents, sortPin, sortName, sortCourse, sortDate, sortCheck, determineTaskName, determineTaskCourse, appendLastSort} from \"./functions/DataFunctions\"\r\nimport Marks from \"./components/Marks\"\r\nimport HomePage from \"./components/HomePage\"\r\nimport LoginGuideMessage from \"./components/LoginGuideMessage\"\r\n\r\nglobal.version = \"4.1.0\";\r\nglobal.changeLog = [\r\n  \"4.1.0: Changed Google API backend and added login instructions\",\r\n  \"4.0.0: Fixed course identification\",\r\n  \"4.0.0: Renamed to calendar tasks\",\r\n  \"3.9.6: Arrow keys can be used to change weeks on day view\",\r\n  \"3.9.5: Added the ability to sync settings and data across platforms (see settings). Copy and paste the settings to sync them... auto syncing coming in the future?? I need to learn Firebase\",\r\n  \"3.9.5: More feedback messages when loading/resetting settings\",\r\n  \"3.9.0: Added custom fonts - in settings\",\r\n  \"3.9.0: Added popup when the info button is clicked for an event to see description in more detail\",\r\n  \"3.9.0: Added cool colours to day view - can be disabled in settings\",\r\n  \"3.8.0: Fixed pomodoro settings not loading properly\",\r\n  \"3.7.8: Added calendar event colours and calendar colours\",\r\n  \"3.7.8: Changelog now highlights in bold for current version\",\r\n  \"3.7.5: Day View is not limited to 'Number of days to view' setting\",\r\n  \"3.7.5: Can now scroll through Day View with days instead of weeks\",\r\n  \"3.7.0: Can now scroll through week view of tasks\",\r\n  \"3.7.0: Added animation setting\",\r\n  \"3.6.1: Now remembers your last tab\",\r\n  \"3.5.5: Keep track of your marks for each course!\",\r\n  \"3.5.0: Courses are automatically added, each one can have a custom colour\",\r\n  \"3.5.0: Performance improvements for loading data\",\r\n];\r\n\r\n//Eventually:\r\n//Fix vibration feedback\r\n//Add events\r\n\r\n//TODO:\r\n//bug: 12 am is displayed as 0 am\r\n//bug: more than 1 day events are only displayed on one day\r\n//bug 12 pm is displayed as 12 am\r\n\r\n//reset button to reset all settings (clear async)\r\n//export async storage (copy to clipboard)\r\n//import async storage\r\n//sync with firebase?? :o\r\n\r\n//improve performance - when click i don't set state of main app .js\r\n\r\n//fade animations broken (hover) (make more like day-view ones)\r\n//the course gets highlighted even though there is no course\r\n\r\n//full on colour wheel popup\r\n//make it to the left (like how the sync button is located)\r\n//https://github.com/omgovich/react-colorful\r\n//https://gist.github.com/lou/571b7c0e7797860d6c555a9fdc0496f9\r\n\r\n//finding all courses broken??\r\n\r\n//sort by calendar ID (coloured dot? only show up if more than one calendar loaded)\r\n//add filter both ways (sort by least/most)\r\n//count how many successful pomodoros\r\n\r\n//calendar colour codes - print list of objects see if possible?\r\n//verify on google - rename name - https://medium.com/cafe24-ph-blog/tips-on-verifying-google-application-that-uses-sensitive-scopes-3b75dfb590ae\r\n//tabs with different course names - based on what was entered (and separate by tests, homework, etc)\r\n\r\n//search bar for task name/course/date\r\n\r\n//Date object documentation https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/getDay\r\nexport default class App extends React.Component {\r\n  render () {\r\n    return(\r\n      <div className=\"screen\">\r\n        <div className=\"header1\">Googly Calendar is now at: </div>\r\n        <div className=\"header1\"><a href=\"https://googlycalendar.web.app\">https://googlycalendar.web.app/</a></div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n// export default class App extends React.Component {\r\n//   constructor(props) {\r\n//     super(props);\r\n//     this.handleItemClick = this.handleItemClick.bind(this);\r\n//     this.refreshWholeList = this.refreshWholeList.bind(this);\r\n//     this.resetCalendarObjects = this.resetCalendarObjects.bind(this);\r\n//     this.signUpdate = this.signUpdate.bind(this);\r\n//     this.loadSyncData = this.loadSyncData.bind(this);\r\n//     this.sortCalendarObjects = this.sortCalendarObjects.bind(this);\r\n//     this.updateDone = this.updateDone.bind(this);\r\n//     this.updatePin = this.updatePin.bind(this);\r\n//     this.errorTimeoutOpen = this.errorTimeoutOpen.bind(this);\r\n//     this.getEventObjects = this.getEventObjects.bind(this);\r\n//     this.darkModeFunction = this.darkModeFunction.bind(this);\r\n//     this.toggleEventInfoOpen = this.toggleEventInfoOpen.bind(this);\r\n//     this.showToast = this.showToast.bind(this);\r\n//     this.state ={homePage:false,calendarIDs:\"\",show:false,eventInfoOpen:false,lastTab:\"1\", calendarObjects: [], signStatus:\"\", errorTimeoutOpen: false, autoDark:\"true\"};\r\n//     ApiCalendar.onLoad(() => {\r\n//         this.loadSyncData();\r\n//         this.refreshWholeList();\r\n//         ApiCalendar.listenSign(this.signUpdate);\r\n//     });\r\n//     this.resetDisable = false;\r\n//     //this.courseColorsLight = [\"#ef5350\",\"#ab47bc\",\"#5c6bc0\",\"#29b6f6\",\"#26a69a\",\"#9ccc65\",\"#ffee58\",\"#ffa726\",\"#8d6e63\",\"#78909c\"];\r\n//     //this.courseColorsDark = [\"#b61827\",\"#790e8b\",\"#26418f\",\"#0086c3\",\"#00766c\",\"#6b9b37\",\"#c9bc1f\",\"#c77800\",\"#5f4339\",\"#4b636e\"];\r\n//     this.courseColorsLight = [\"#ffcdd2\",\"#e1bee7\",\"#c5cae9\",\"#b3e5fc\",\"#b2dfdb\",\"#dcedc8\",\"#fff9c4\",\"#ffe0b2\",\"#d7ccc8\",\"#cfd8dc\"];\r\n//     this.courseColorsDark = [\"#cb9ca1\",\"#af8eb5\",\"#9499b7\",\"#82b3c9\",\"#82ada9\",\"#aabb97\",\"#cbc693\",\"#cbae82\",\"#a69b97\",\"#9ea7aa\"];\r\n//     this.googleCalendarColors = [\"#039be5\",\"#7986cb\",\"#33b679\",\"#8e24aa\",\"#e67c73\",\"#f6c026\",\"#f5511d\",\"#039be5\",\"#616161\",\"#3f51b5\",\"#0b8043\",\"#d60000\"]\r\n//   }\r\n\r\n//   darkModeFunction(){\r\n//     //Dark mode colors\r\n//     var currentHours = new Date().getHours();\r\n//     if((getSettingsValue(\"autoDark\") && (currentHours > 19 || currentHours < 7)) || (!getSettingsValue(\"autoDark\") && getSettingsValue(\"darkMode\"))){\r\n//       document.documentElement.style.setProperty('--background', \"#121212\");\r\n//       document.documentElement.style.setProperty('--background-settings', \"#141414\");\r\n//       document.documentElement.style.setProperty('--font-color', \"#eeeeee\");\r\n//       document.documentElement.style.setProperty('--highlight', \"#9e9e9e25\");\r\n//       document.documentElement.style.setProperty('--highlight2', \"#66666623\");\r\n//       document.documentElement.style.setProperty('--highlight-tabs', \"#c9c9c925\");\r\n//       document.documentElement.style.setProperty('--accent', \"#2889f7c9\");\r\n//       document.documentElement.style.setProperty('--brightnessIcon', \"1\");\r\n//       this.courseColors = this.courseColorsDark;\r\n//       this.darkMode = true;\r\n//     } else {\r\n//       this.darkMode = false;\r\n//       document.documentElement.style.setProperty('--background', \"#fafafa\");\r\n//       document.documentElement.style.setProperty('--background-settings', \"white\");\r\n//       document.documentElement.style.setProperty('--font-color', \"#111111\");\r\n//       document.documentElement.style.setProperty('--highlight', \"#42424248\");\r\n//       document.documentElement.style.setProperty('--highlight2', \"#8b8b8b1a\");\r\n//       document.documentElement.style.setProperty('--highlight-tabs', \"#3838381f\");\r\n//       document.documentElement.style.setProperty('--accent', \"#64b5f6\");\r\n//       document.documentElement.style.setProperty('--brightnessIcon', \"0\");\r\n//       this.courseColors = this.courseColorsLight;\r\n//     }\r\n//   }\r\n  \r\n//   async loadSettings(){\r\n//     global.settings = settingsOptions;\r\n//     for(var i = 0; i<settingsOptions.length; i++){\r\n//       if(global.settings[i][\"type\"]===\"textDouble\"){\r\n//         global.settings[i][\"currentValue1\"] = await getStorage(settingsOptions[i][\"keyName1\"],settingsOptions[i][\"defaultValue1\"]);\r\n//         global.settings[i][\"currentValue2\"] = await getStorage(settingsOptions[i][\"keyName2\"],settingsOptions[i][\"defaultValue2\"]);\r\n//       } else {\r\n//         global.settings[i][\"currentValue\"] = await getStorage(settingsOptions[i][\"keyName\"],settingsOptions[i][\"defaultValue\"]);\r\n//       }\r\n//     }\r\n//   }\r\n\r\n//   async loadSyncData(){\r\n//     await this.loadSettings();\r\n\r\n//     var lastSort = await getStorage(\"lastSort\",\"sortName,sortCourse,sortCheck,sortDate\");\r\n//     var lastSignIn = await getStorage(\"lastSignIn\",\"0\");\r\n//     var lastTab= await getStorage(\"lastTab\",\"1\");\r\n//     this.setState({ \r\n//       signStatus: ApiCalendar.sign,\r\n//       lastSignIn:lastSignIn,\r\n//       lastSort:lastSort,\r\n//       calendarIDs: [getSettingsValue(\"calendarID\"),getSettingsValue(\"calendarID2\"),getSettingsValue(\"calendarID3\")],\r\n//       lastTab:lastTab,\r\n//     });\r\n//   }\r\n//   signUpdate() {\r\n//     this.setState({ signStatus: ApiCalendar.sign, currentlyLoggingIn:false});\r\n//     this.refreshWholeList();\r\n//   }\r\n\r\n//   componentDidMount() {\r\n//     this.loadSyncData();  \r\n//   }\r\n\r\n//   sortCalendarObjects(type, calendarObjects){\r\n//     if(this.state.signStatus){\r\n//       if(type===\"sortName\"){\r\n//         AsyncStorage.setItem(\"lastSort\", appendLastSort(\"sortName\",this.state.lastSort));\r\n//         this.setState({\r\n//           lastSort: appendLastSort(\"sortName\",this.state.lastSort)\r\n//         })\r\n//         return sortPin(sortName(calendarObjects));\r\n//       } else if(type===\"sortDate\") {\r\n//         AsyncStorage.setItem(\"lastSort\", appendLastSort(\"sortDate\",this.state.lastSort));\r\n//         this.setState({\r\n//           lastSort: appendLastSort(\"sortDate\",this.state.lastSort)\r\n//         })\r\n//         return sortPin(sortDate(calendarObjects));\r\n//       } else if(type===\"sortCourse\") {\r\n//         AsyncStorage.setItem(\"lastSort\", appendLastSort(\"sortCourse\",this.state.lastSort));\r\n//         this.setState({\r\n//           lastSort: appendLastSort(\"sortCourse\",this.state.lastSort)\r\n//         })\r\n//         return sortPin(sortCourse(calendarObjects));\r\n//       } else if(type===\"sortCheck\") {\r\n//         AsyncStorage.setItem(\"lastSort\", appendLastSort(\"sortCheck\",this.state.lastSort));\r\n//         this.setState({\r\n//           lastSort: appendLastSort(\"sortCheck\",this.state.lastSort)\r\n//         })\r\n//         return sortPin(sortCheck(calendarObjects));\r\n//       }\r\n//     }\r\n//   }\r\n\r\n//   googleLogin = (signIn)=>{\r\n//     if (signIn) {\r\n//       ApiCalendar.handleAuthClick();\r\n//       this.setState({currentlyLoggingIn:true})\r\n//     } else {\r\n//       ApiCalendar.handleSignoutClick();\r\n//     }\r\n//   }\r\n      \r\n//   handleItemClick(event: SyntheticEvent<any>, name: string, calendarObjects: string): void {\r\n//     if (name === 'signIn') {\r\n//       this.googleLogin(true);\r\n//     } else if (name === 'signOut') {\r\n//       this.googleLogin(false);\r\n//     } else if (name==='log'){\r\n//       if (ApiCalendar.sign)\r\n//       listEvents(10,getSettingsValue(\"hoursBefore\"))\r\n//         .then(({result}: any) => {\r\n//           console.log(result.items);\r\n//       });\r\n//     } else if (name==='logStored'){\r\n//       console.log(this.state.calendarObjects)\r\n//     } else if (name===\"changeName\") {\r\n//       if (ApiCalendar.sign) \r\n//         listEvents(1,getSettingsValue(\"hoursBefore\"))\r\n//         .then(({result}: any) => {\r\n//           const event = {\r\n//             summary: \"✔️\" + result.items[0].summary\r\n//           };\r\n//           ApiCalendar.updateEvent(event, result.items[0].id)\r\n//             .then(console.log);\r\n//       });\r\n//     } else if (name==='populate'){\r\n//       if (ApiCalendar.sign)\r\n//         listEvents(getSettingsValue(\"numEvents\"),getSettingsValue(\"hoursBefore\"))\r\n//           .then(({result}: any) => {\r\n//             var calendarObjects= result.items\r\n//             this.setState({\r\n//               calendarObjects: calendarObjects,\r\n//           })\r\n//         });\r\n//     } else if (name==='sortName'){\r\n//       this.setState({calendarObjects: this.sortCalendarObjects('sortName', calendarObjects)})\r\n//     } else if (name==='sortCourse'){\r\n//       this.setState({calendarObjects: this.sortCalendarObjects('sortCourse', calendarObjects)})\r\n//     } else if (name==='sortDate'){\r\n//       this.setState({calendarObjects: this.sortCalendarObjects('sortDate', calendarObjects)})\r\n//     } else if (name==='sortPin'){\r\n//       this.setState({calendarObjects: sortPin(calendarObjects)});\r\n//     } else if (name==='errorTimeoutOpen'){\r\n//       this.errorTimeoutOpen(\"Error Code\")\r\n//     } else if (name==='addEvent'){\r\n//       const event = {\r\n//         summary: \"addTest\",\r\n//         start:{dateTime: \"2020-09-13T08:00:00-02:00\"},\r\n//         end:{dateTime: \"2020-09-13T08:00:00-04:00\"},\r\n//         status: \"confirmed\"\r\n//       }\r\n//       if (ApiCalendar.sign){\r\n//         if(this.state.calendarID!=null){\r\n//           ApiCalendar.createEvent(event,this.state.calendarID)\r\n//         } else {\r\n//           ApiCalendar.createEvent(event).then((result: object) => {\r\n//             console.log(result);\r\n//           })\r\n//           .catch((error: any) => {\r\n//             console.log(error);\r\n//           });\r\n//         }\r\n//       }\r\n//     }\r\n//   }\r\n  \r\n//   updateDone(id){\r\n//     for (var i = 0; i < this.state.calendarObjects.length; i++) {\r\n//       if(this.state.calendarObjects[i].id === id){\r\n//         if(this.state.calendarObjects[i].done===true){\r\n//           this.state.calendarObjects[i].done=false;\r\n//           this.setState({\r\n//             calendarObjects: this.state.calendarObjects\r\n//           })\r\n//         } else {\r\n//           this.state.calendarObjects[i].done=true;\r\n//           this.setState({\r\n//             calendarObjects: this.state.calendarObjects\r\n//           })\r\n//         }\r\n//         return;\r\n//       } else {\r\n//         continue;\r\n//       }\r\n//     }\r\n//   }\r\n\r\n//   updatePin(id){\r\n//     for (var i = 0; i < this.state.calendarObjects.length; i++) {\r\n//       if(this.state.calendarObjects[i].id === id){\r\n//         if(this.state.calendarObjects[i].pin===true){\r\n//           this.state.calendarObjects[i].pin=false;\r\n//           this.setState({\r\n//             calendarObjects: sortPin(this.state.calendarObjects)\r\n//           })\r\n//         } else {\r\n//           this.state.calendarObjects[i].pin=true;\r\n//           this.setState({\r\n//             calendarObjects: sortPin(this.state.calendarObjects)\r\n//           })\r\n//         }\r\n//         return;\r\n//       } else {\r\n//         continue;\r\n//       }\r\n//     }\r\n//   }\r\n  \r\n//   errorTimeoutOpen(error){\r\n//     this.setState({\r\n//       errorCode: error,\r\n//       errorTimeoutOpen: true,\r\n//     })\r\n//   }\r\n\r\n//   async getEventObjects(calendarIDsPassed){\r\n//     global.courses = [];\r\n//     this.setState({invalidID: false});\r\n//     var calendarObjectsTotal = [];\r\n//     if(calendarIDsPassed===undefined||calendarIDsPassed===\"\"){\r\n//       return;\r\n//     }\r\n//     for(var z = 0; z < calendarIDsPassed.length; z++){\r\n//       var calendarIDPassed = \"\";\r\n//       if(z!==0 && (calendarIDsPassed[z]===\"\" || calendarIDsPassed[z]===undefined)){\r\n//         continue;\r\n//       } else if (z===0 && (calendarIDPassed[0]===\"\" || calendarIDPassed[0]===undefined)){\r\n//         calendarIDPassed = \"primary\";\r\n//       } else {\r\n//         calendarIDPassed = calendarIDsPassed[z];\r\n//       }\r\n//       await ApiCalendar.setCalendar(calendarIDPassed);\r\n//       await listEvents(getSettingsValue(\"numEvents\"),getSettingsValue(\"hoursBefore\")).then(async ({result}: any) => {\r\n//         var calendarObjectsReduced = [];\r\n//         var calendarObjects = result.items;\r\n//         for (var i = 0; i < calendarObjects.length; i++) {\r\n//           //Determine if within the week days range specified in settings\r\n//           var dateObj;\r\n//           if (displayDate(new Date(calendarObjects[i].start.dateTime))===\"All day\"){\r\n//             dateObj = new Date(calendarObjects[i].start.date);\r\n//           } else {\r\n//             dateObj = new Date(calendarObjects[i].start.dateTime);\r\n//           }\r\n//           //Fix for all day and hours past\r\n//           var allDayPastTest=false;\r\n//           if(displayDate(new Date(calendarObjects[i].start.dateTime))===\"All day\"){\r\n//             if(new Date(calendarObjects[i].end.date)>new Date().addDays(-1*(getSettingsValue(\"hoursBefore\")+24)/24)){\r\n//               allDayPastTest=true;\r\n//             }\r\n//           } else {\r\n//             allDayPastTest=true;\r\n//           }\r\n//           if(allDayPastTest){\r\n//             //Set up attributes of each object\r\n//             if(dateObj < new Date().addDays(parseInt(getSettingsValue(\"nextWeekShow\")))){\r\n//               calendarObjects[i].weekLimitHide=false;\r\n//             } else {\r\n//               calendarObjects[i].weekLimitHide=true;\r\n//             }\r\n//             if(calendarObjects[i].summary !== undefined && calendarObjects[i].summary.length>=2 && calendarObjects[i].summary.substring(0,2)===\"✔️\"){\r\n//               calendarObjects[i].done=true;\r\n//             } else {\r\n//               calendarObjects[i].done=false;\r\n//             }\r\n//             if(calendarObjects[i].summary !== undefined && calendarObjects[i].summary.length>=2 && calendarObjects[i].summary.substring(0,2)===\"📌\"){\r\n//               calendarObjects[i].pin=true;\r\n//             } else {\r\n//               calendarObjects[i].pin=false;\r\n//             }\r\n//             if(calendarObjects[i].summary !== undefined && calendarObjects[i].summary.length>=2 && (calendarObjects[i].summary.substring(0,2)===\"✔️\" || calendarObjects[i].summary.substring(0,2)===\"📌\")){\r\n//               calendarObjects[i].name=calendarObjects[i].summary.substring(2);\r\n//             } else {\r\n//               calendarObjects[i].name=calendarObjects[i].summary;\r\n//             }\r\n//             calendarObjects[i].date = displayDate(new Date(calendarObjects[i].start.dateTime));\r\n//             if (calendarObjects[i].date===\"All day\"){\r\n//               calendarObjects[i].date = displayDate(new Date(calendarObjects[i].end.date));\r\n//               calendarObjects[i].dateObjEnd = new Date(calendarObjects[i].end.date);\r\n//             } else {\r\n//               calendarObjects[i].dateObjEnd = new Date(calendarObjects[i].end.dateTime);\r\n//             }\r\n//             calendarObjects[i].timeStart = displayTime(new Date(calendarObjects[i].start.dateTime));\r\n//             calendarObjects[i].timeEnd = displayTime(new Date(calendarObjects[i].end.dateTime));\r\n\r\n//             var courseRandomCode;\r\n//             var currentCourse = determineTaskCourse(calendarObjects[i].summary);\r\n//             if (getSettingsValue(\"useEventColours\")===true && calendarObjects[i].colorId!==undefined){\r\n//               calendarObjects[i].courseColor = this.googleCalendarColors[calendarObjects[i].colorId];\r\n//               calendarObjects[i].courseRandomCode = -1;\r\n//               if(currentCourse !== \"\"){\r\n//                 calendarObjects[i].course=currentCourse;\r\n//               } else {\r\n//                 calendarObjects[i].course=\"\";\r\n//               }\r\n//             } else if(currentCourse !==\"\"){\r\n//               calendarObjects[i].course=currentCourse;\r\n//               if(!global.courses.includes(calendarObjects[i].course)){\r\n//                 global.courses.push(calendarObjects[i].course)\r\n//               }\r\n//               var selectedColor = await getStorage(\"courseColor\"+calendarObjects[i].course,\"\")\r\n//               if(selectedColor!==\"\"){\r\n//                 calendarObjects[i].courseColor=selectedColor;\r\n//               } else {\r\n//                 if(calendarObjects[i].course.length>6){\r\n//                   courseRandomCode=calendarObjects[i].course.charCodeAt(0)+calendarObjects[i].course.charCodeAt(1)+calendarObjects[i].course.charCodeAt(2)+calendarObjects[i].course.charCodeAt(3)+calendarObjects[i].course.charCodeAt(4)+calendarObjects[i].course.charCodeAt(5)+calendarObjects[i].course.charCodeAt(6);\r\n//                 } else {\r\n//                   courseRandomCode=calendarObjects[i].course.charCodeAt(0)+calendarObjects[i].course.charCodeAt(1)+calendarObjects[i].course.charCodeAt(2)+calendarObjects[i].course.charCodeAt(3)+calendarObjects[i].course.charCodeAt(4)+calendarObjects[i].course.charCodeAt(5);\r\n//                 }\r\n//                 calendarObjects[i].courseColor=this.courseColors[courseRandomCode%this.courseColors.length];\r\n//               }\r\n//             } else if(getSettingsValue(\"calendarIDColor\"+(z+1).toString())!==undefined) {\r\n//               calendarObjects[i].courseColor=getSettingsValue(\"calendarIDColor\"+(z+1).toString());\r\n//               calendarObjects[i].course = \"\";\r\n//               calendarObjects[i].courseRandomCode = -1;\r\n//             } else {\r\n//               calendarObjects[i].course = \"\";\r\n//               calendarObjects[i].courseRandomCode = -1;\r\n//               calendarObjects[i].courseColor=\"\";\r\n//             }\r\n//             if(getSettingsValue(\"importantEvents\")!==\"\"&&getSettingsValue(\"importantEvents\").split(\",\").length>0){\r\n//               try{\r\n//                 calendarObjects[i].important = false;\r\n//                 if(calendarObjects[i].name===undefined){\r\n//                   calendarObjects[i].name=\"(No title)\"\r\n//                 }\r\n//                 for(var x=0; x<getSettingsValue(\"importantEvents\").split(\",\").length;x++){\r\n//                   if (calendarObjects[i].name.toLowerCase().includes(getSettingsValue(\"importantEvents\").split(\",\")[x].toLowerCase())||calendarObjects[i].course.toLowerCase().includes(getSettingsValue(\"importantEvents\").split(\",\")[x].toLowerCase())){\r\n//                     calendarObjects[i].important = true;\r\n//                   }\r\n//                 }\r\n//               }catch(e){\r\n//                 this.showToast(e);\r\n//               }\r\n//             } else {\r\n//               calendarObjects[i].important = false;\r\n//             }\r\n//             if(getSettingsValue(\"hideEvents\")!==\"\"&&getSettingsValue(\"hideEvents\").split(\",\").length>0){\r\n//               try{\r\n//                 calendarObjects[i].hide = false;\r\n//                 for(var y=0; y<getSettingsValue(\"hideEvents\").split(\",\").length;y++){\r\n//                   if (calendarObjects[i].name.includes(getSettingsValue(\"hideEvents\").split(\",\")[y])||calendarObjects[i].course.includes(getSettingsValue(\"hideEvents\").split(\",\")[y])){\r\n//                     calendarObjects[i].hide = true;\r\n//                   }\r\n//                 }\r\n//               }catch(e){\r\n//                 this.showToast(e);\r\n//               }\r\n//             } else {\r\n//               calendarObjects[i].hide = false;\r\n//             }\r\n            \r\n//             //else if(this.state.course2.toLowerCase()===calendarObjects[i].course.toLowerCase()){\r\n//             //   calendarObjects[i].courseColor=this.state.courseColor2;\r\n//             // } else if(this.state.course3.toLowerCase()===calendarObjects[i].course.toLowerCase()){\r\n//             //   calendarObjects[i].courseColor=this.state.courseColor3;\r\n//             // } else if(this.state.course4.toLowerCase()===calendarObjects[i].course.toLowerCase()){\r\n//             //   calendarObjects[i].courseColor=this.state.courseColor4;\r\n//             // } else if(this.state.course5.toLowerCase()===calendarObjects[i].course.toLowerCase()){\r\n//             //   calendarObjects[i].courseColor=this.state.courseColor5;\r\n//             // } else if(this.state.course6.toLowerCase()===calendarObjects[i].course.toLowerCase()){\r\n//             //   calendarObjects[i].courseColor=this.state.courseColor6;\r\n//             // } else if(this.state.course7.toLowerCase()===calendarObjects[i].course.toLowerCase()){\r\n//             //   calendarObjects[i].courseColor=this.state.courseColor7;\r\n//             // }\r\n            \r\n//             // calendarObjects[i].done = \"\";\r\n//             // calendarObjects[i].pin = \"\";\r\n//             // calendarObjects[i].name = \"\";\r\n//             // calendarObjects[i].course = \"\";\r\n//             // calendarObjects[i].date = \"\";\r\n//             // calendarObjects[i].timeStart = \"\";\r\n//             // calendarObjects[i].timeEnd = \"\";\r\n//             // calendarObjects[i].courseColor = \"\";\r\n//             // calendarObjects[i].dateObjEnd = \"\";\r\n//             // calendarObjects[i].important = \"\";\r\n//             // calendarObjects[i].hide = \"\";\r\n//             calendarObjects[i].calendarID=calendarIDPassed;\r\n//             calendarObjectsReduced.push(calendarObjects[i]);\r\n//           }\r\n//         }\r\n//         Array.prototype.push.apply(calendarObjectsTotal,calendarObjectsReduced); \r\n//         var lastSortList = this.state.lastSort.split(\",\");\r\n//         lastSortList.map(function(sortElement){\r\n//           calendarObjectsTotal = this.sortCalendarObjects(sortElement, calendarObjectsTotal);\r\n//         }, this)\r\n//       }).catch(error => {\r\n//         this.setState({\r\n//           invalidID:true,\r\n//         });\r\n//       });\r\n//     }\r\n//     this.setState({\r\n//       calendarObjects: calendarObjectsTotal,\r\n//     });\r\n\r\n//     global.settingsColour = settingsOptionsColour();\r\n//     for(var i = 0; i<settingsOptionsColour().length; i++){\r\n//       global.settingsColour[i][\"currentValue\"] = await getStorage(settingsOptionsColour()[i][\"keyName\"],\"\");\r\n//     }\r\n//   }\r\n\r\n//   async resetCalendarObjects(){\r\n//     if(this.resetDisable===false){\r\n//       this.resetDisable=true;\r\n//       await this.setState({calendarObjects:[]});\r\n//       await this.refreshWholeList();\r\n//       setTimeout(function () {\r\n//           this.resetDisable=false;\r\n//       }.bind(this), 1000);\r\n//     }\r\n//   }\r\n\r\n//   async refreshWholeList() {\r\n//     await this.loadSyncData();\r\n//     await this.darkModeFunction();\r\n//     if (ApiCalendar.sign){\r\n//       this.getEventObjects(this.state.calendarIDs);\r\n//     }\r\n//   }\r\n\r\n//   toggleEventInfoOpen(open, eventInfoSelected){\r\n//     this.setState({\r\n//       eventInfoOpen:open,\r\n//       eventInfoSelected:eventInfoSelected\r\n//     })\r\n//   }\r\n\r\n//   showToast(showMessage){\r\n//     this.setState({showMessage:showMessage, show:true});\r\n//   }\r\n  \r\n//   render(): ReactNode {\r\n//     var signStatusDisplay=\"none\";\r\n//     var calendarObjectsLengthDisplay=\"none\";\r\n//     var invalidCalendarDisplay=\"none\";\r\n//     if(this.state.signStatus){\r\n//       signStatusDisplay=\"none\";\r\n//     } else {\r\n//       signStatusDisplay=\"\";\r\n//     }\r\n//     if(this.state.calendarObjects.length<=0 && this.state.signStatus){\r\n//       calendarObjectsLengthDisplay=\"\";\r\n//     } else if (this.state.invalidID===true && this.state.signStatus){\r\n//       invalidCalendarDisplay=\"\";\r\n//     }\r\n//     var today=new Date();\r\n//     var currentDisplayDate;\r\n//     if(window.innerWidth>767){\r\n//       currentDisplayDate=getDisplayDayFull(today)+\" \"+getDisplayMonthFull(today)+\" \"+today.getDate()\r\n//     } else {\r\n//       currentDisplayDate=getDisplayDay(today)+\" \"+getDisplayMonth(today)+\" \"+today.getDate()\r\n//     }\r\n//     var welcomeOpen=false;\r\n//     if(this.state.lastSignIn!==global.version){\r\n//       welcomeOpen=true;\r\n//     }\r\n//     if(this.state.homePage){\r\n//       return(<HomePage/>)\r\n//     } else {\r\n//       return (\r\n//         <div className=\"screen\">\r\n//           {/* <Button variant=\"secondary\" onClick={(e) => this.handleItemClick(e, \"addEvent\")}>\r\n//             Add\r\n//           </Button>\r\n//           <Button variant=\"secondary\" onClick={(e) => this.handleItemClick(e, \"log\")}>\r\n//             Log\r\n//           </Button>\r\n//           <Button variant=\"secondary\" onClick={(e) => this.handleItemClick(e, \"logStored\")}>\r\n//             logStored\r\n//           </Button>\r\n//           <Button variant=\"secondary\" onClick={(e) => this.handleItemClick(e, \"sortName\")}>\r\n//             sortName\r\n//           </Button>\r\n//           <Button variant=\"secondary\" onClick={(e) => this.handleItemClick(e, \"sortCourse\")}>\r\n//             sortCourse\r\n//           </Button>\r\n//           <Button variant=\"secondary\" onClick={(e) => this.handleItemClick(e, \"sortDate\")}>\r\n//             sortDate\r\n//           </Button>\r\n//           <Button variant=\"secondary\" onClick={(e) => this.handleItemClick(e, \"errorTimeoutOpen\")}>\r\n//             errorTimeoutOpen\r\n//           </Button>\r\n//           <Button variant=\"secondary\" onClick={(e) => this.handleItemClick(e, \"sortPin\")}>\r\n//             sortPin\r\n//           </Button> */}\r\n//           <Header1 content={currentDisplayDate}/>\r\n//           <Tabs onSelect={(key)=>{AsyncStorage.setItem(\"lastTab\",key.toString()); this.setState({lastTab:key})}} style={{\"marginTop\":\"1.9%\",\"marginBottom\":\"3px\"}} className=\"tabsLabel\" activeKey={this.state.lastTab}>\r\n//               <Tab eventKey=\"1\" title=\"Task List\">\r\n//                 <TaskList toggleEventInfoOpen={this.toggleEventInfoOpen} calendarObjects={this.state.calendarObjects} courseColors={this.courseColors} hoursBefore={getSettingsValue(\"hoursBefore\")} nextWeekShow={getSettingsValue(\"nextWeekShow\")} sortCalendarObjects={this.sortCalendarObjects} updateDone={this.updateDone} errorTimeoutOpen={this.errorTimeoutOpen} updatePin={this.updatePin} darkMode={this.darkMode}/>\r\n//               </Tab>\r\n//               <Tab eventKey=\"2\" title=\"Week View\">\r\n//                 <WeekList currentTab={this.state.lastTab} toggleEventInfoOpen={this.toggleEventInfoOpen} calendarObjects={this.state.calendarObjects} nextWeekShow={getSettingsValue(\"nextWeekShow\")} courseColors={this.courseColors} updateDone={this.updateDone} errorTimeoutOpen={this.errorTimeoutOpen} updatePin={this.updatePin} darkMode={this.darkMode}/>\r\n//               </Tab>\r\n//               <Tab eventKey=\"3\" title=\"Pomodoro\">\r\n//                 <Pomo calendarObjects={this.state.calendarObjects} loadSettings={this.loadSettings}/>\r\n//               </Tab>\r\n//               <Tab eventKey=\"4\" title=\"Marks\">\r\n//                 <Marks/>\r\n//               </Tab>\r\n//           </Tabs>\r\n//           <Settings \r\n//             resetCalendarObjects={this.resetCalendarObjects} \r\n//             signStatus={this.state.signStatus} \r\n//             showToast={this.showToast}\r\n//             googleLogin={this.googleLogin}\r\n//           />\r\n//           <Refresh signStatus={this.state.signStatus} resetCalendarObjects={this.resetCalendarObjects}/>\r\n//           <Toast onClose={() => this.setState({show: false})} show={this.state.show} delay={1500} autohide style={{\"position\":\"fixed\",\"bottom\":\"0%\",\"left\":\"1%\"}}>\r\n//             <Toast.Header>\r\n//               <strong className=\"mr-auto\">{this.state.showMessage}</strong>\r\n//             </Toast.Header>\r\n//           </Toast>\r\n//           <div className=\"alert alert-danger fadeIn\" role=\"alert\" onClick={(e) => this.handleItemClick(e, 'signIn')} style={{\"display\":signStatusDisplay, \"animationDelay\":\"600ms\", \"position\":\"fixed\",\"bottom\":\"1%\", \"cursor\":\"pointer\", \"marginRight\":\"2.5%\"}}>\r\n//             You are not logged-in. Login <u>here</u> or in the settings.\r\n//           </div>\r\n//           <div className=\"alert alert-warning fadeIn\" role=\"alert\" style={{\"display\":calendarObjectsLengthDisplay, \"animationDelay\":\"2600ms\", \"position\":\"fixed\",\"bottom\":\"1%\", \"marginRight\":\"2.5%\"}}>\r\n//             There are no events for this calendar. Add some and refresh to view.\r\n//           </div>\r\n//           <div className=\"alert alert-warning fadeIn\" role=\"alert\" style={{\"display\":invalidCalendarDisplay, \"animationDelay\":\"600ms\", \"position\":\"fixed\",\"bottom\":\"1%\", \"marginRight\":\"2.5%\"}}>\r\n//             It seems you are using an invalid calendar ID. Open settings and double check.\r\n//           </div>\r\n//           <TimeOutError errorTimeoutOpen={this.state.errorTimeoutOpen} errorCode={this.state.errorCode}/>\r\n//           <WelcomeMessage welcomeOpen={welcomeOpen} errorCode={this.state.errorCode} signStatus={this.state.signStatus} googleLogin={this.googleLogin}/>\r\n//           <LoginGuideMessage show={this.state.currentlyLoggingIn} onClose={()=>this.setState({currentlyLoggingIn:false})}/>\r\n//           <EventInfoMessage eventInfoSelected={this.state.eventInfoSelected} toggleEventInfoOpen={this.toggleEventInfoOpen} eventInfoOpen={this.state.eventInfoOpen}/>\r\n//           {/* <AddEvent resetCalendarObjects={this.resetCalendarObjects}/> */}\r\n//         </div>\r\n//       );\r\n//     }\r\n    \r\n//   }\r\n// }\r\n\r\n// const theme = createMuiTheme({\r\n//   palette: {\r\n//     type: 'dark',\r\n//     primary: {\r\n//       main: '#64b5f6',\r\n//     },\r\n//   },\r\n// });\r\n\r\n// class AddEvent extends React.Component{\r\n//   constructor(props) {\r\n//     super(props);\r\n//     this.state ={show: false};\r\n//   }\r\n//   handleItemClick(event: SyntheticEvent<any>, name: string): void {\r\n//     if (name==='openAdd') {\r\n//       this.setState({show: true})\r\n//     } else if (name==='close'){\r\n//       this.setState({show: false})\r\n//     } else if (name==='add'){\r\n//       this.props.resetCalendarObjects();\r\n//       this.setState({show: false})\r\n//     }\r\n//   }\r\n//   handleChange(event,props) {\r\n//     if(event.target.name===\"calendarID\"){\r\n//       AsyncStorage.setItem('calendarIDKey', event.target.value);\r\n//       this.props.setCalendarID(event.target.value)\r\n//     }\r\n//   }\r\n//   render(){\r\n//     return(\r\n//       <div>\r\n//         <div className=\"addButton\" onClick={(e) => this.handleItemClick(e, \"openAdd\")}><div className=\"addButtonOffset\">+</div></div>\r\n//         <Modal className=\"settingsModal\" backdrop=\"static\" show={this.state.show} size=\"lg\">\r\n//           <Modal.Header>\r\n//             <div className=\"header1\" style={{\"marginBottom\":\"0px\"}}>Add Task</div>\r\n//           </Modal.Header>\r\n//           <Modal.Body>\r\n//             <ThemeProvider theme={theme}>\r\n//               <TextField placeholder=\"Task\" color=\"primary\" fullWidth size=\"medium\" label=\"\" inputProps={{style: {fontSize: 40}}} InputLabelProps={{style: {fontSize: 10}}} style={{width:\"50%\"}}/>\r\n//             </ThemeProvider>  \r\n//           </Modal.Body>\r\n//           <Modal.Footer>\r\n//           <Button variant=\"secondary\" onClick={(e) => this.handleItemClick(e, \"close\")} style={{\"position\":\"absolute\", \"left\":\"10px\"}}>\r\n//             Close\r\n//           </Button>\r\n//           <Button variant=\"primary\" onClick={(e) => this.handleItemClick(e, \"add\")}>\r\n//             Add\r\n//           </Button>\r\n//           </Modal.Footer>\r\n//         </Modal>\r\n//       </div>\r\n//     )\r\n//   }\r\n// }\r\n\r\n\r\n\r\n\r\n// class AddTask extends React.Component {\r\n\r\n//   render() {\r\n//     return(\r\n//       <div className=\"tasks\">\r\n//         <Header2 content=\"Add Task\"/>\r\n//       </div>\r\n//     )\r\n//   }\r\n// }\r\n\r\n\r\n\r\n// function Header2(props){\r\n//   return(\r\n//     <div className=\"header2\">\r\n//       {props.content}\r\n//     </div>\r\n//   )\r\n// }\r\n\r\n\r\nconst Input = ({ id, type, label, value, onChange }) => {\r\n  const classes = value.length ? 'Input Input--has-value' : 'Input'\r\n  return (\r\n    <div className={classes}>\r\n      <input id={id}  type={type} value={value} onChange={onChange} />\r\n      <label htmlFor={id} className=\"Input__label\">{label}</label>\r\n    </div>\r\n  )\r\n}\r\n\r\nDate.prototype.addDays = function(days) {\r\n    var date = new Date(this.valueOf());\r\n    date.setDate(date.getDate() + days);\r\n    return date;\r\n}","export default __webpack_public_path__ + \"static/media/cog-solid.540ab5dc.svg\";","import React from 'react';\r\nimport { AsyncStorage } from 'AsyncStorage';\r\nimport Button from 'react-bootstrap/Button'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport ApiCalendar from 'react-google-calendar-api';\r\nimport '../App.css';\r\n\r\nexport default class WelcomeMessage extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state={welcomeOpenState: true}\r\n\r\n  }\r\n  handleItemClick(event: SyntheticEvent<any>, name: string): void {\r\n    if (name==='closeWelcome') {\r\n      AsyncStorage.setItem('lastSignIn', global.version);\r\n      this.setState({welcomeOpenState: false})\r\n    }\r\n  }\r\n  determineButton(){\r\n    if(this.props.signStatus){\r\n      return (\r\n        <Button variant=\"primary\" onClick={(e) => this.handleItemClick(e, \"closeWelcome\")}>\r\n          Continue\r\n        </Button>\r\n    )\r\n    } else {\r\n      return (\r\n        <div>\r\n          <Button variant=\"outline-secondary\" onClick={(e) => this.handleItemClick(e, \"closeWelcome\")} style={{'marginRight':\"15px\"}}>\r\n            Continue without login\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={() => this.props.googleLogin(true)}>\r\n            Login\r\n          </Button>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n  render(){\r\n    var welcomeOpenTogether=false;\r\n    if(this.props.welcomeOpen===true&&this.state.welcomeOpenState===true){\r\n      welcomeOpenTogether=true;\r\n    }\r\n    var welcomeMessage=\"Hello! Please login by clicking the button below.\"\r\n    var welcomeMessage2='The aim of this application is to turn your Google Calendar into a task list. It was written in React and the source code can be found here: <a href=\"https://github.com/jameskokoska/GooglyCalendar\">https://github.com/jameskokoska/GooglyCalendar</a>'\r\n    if(this.props.signStatus===true){\r\n      welcomeMessage=\"A new update was released: version \"+global.version;\r\n      welcomeMessage2=\"\";\r\n    }\r\n    return(\r\n      <Modal className=\"settingsModal\" backdrop=\"static\" show={welcomeOpenTogether} onHide={(e) => this.handleItemClick(e, \"closeWelcome\")} size=\"lg\">\r\n        <Modal.Header>\r\n          <div className=\"header1\" style={{\"marginBottom\":\"0px\"}}>Welcome!</div>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <p style={{marginTop:\"10px\"}}>{welcomeMessage}</p>\r\n          <p dangerouslySetInnerHTML={{ __html: welcomeMessage2 }}></p>\r\n          <div className=\"header3\">{\"What's New? v\"+ global.version}</div>\r\n          {global.changeLog.map(function(changeLogElement){\r\n            if(changeLogElement.includes(global.version)){\r\n              return <b key={changeLogElement}><li>{changeLogElement}</li></b>\r\n            } else {\r\n              return <li key={changeLogElement}>{changeLogElement}</li>\r\n            }\r\n          })}\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          {this.determineButton()}\r\n        </Modal.Footer>\r\n      </Modal>\r\n    )\r\n  }\r\n}","import React from 'react';\r\nimport Button from 'react-bootstrap/Button'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport '../App.css';\r\n\r\nexport default class EventInfoMessage extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state={eventOpenState: this.props.eventInfoOpen}\r\n    this.title = \"\";\r\n    this.date = \"\";\r\n    this.time = \"\";\r\n    this.description = \"\";\r\n  }\r\n  componentDidUpdate(oldProps){\r\n    if(oldProps!==this.props){\r\n      this.setState({eventOpenState: this.props.eventInfoOpen});\r\n    }\r\n  }\r\n  handleItemClick(event: SyntheticEvent<any>, name: string): void {\r\n    if (name==='close') {\r\n      this.setState({eventOpenState: false});\r\n      this.props.toggleEventInfoOpen(false);\r\n    }\r\n  }\r\n  render(){\r\n    if(this.props.eventInfoSelected!==undefined){\r\n      this.title = this.props.eventInfoSelected.summary;\r\n      this.date = this.props.eventInfoSelected.date;\r\n      this.time = this.props.eventInfoSelected.timeStart + \" - \" + this.props.eventInfoSelected.timeEnd;\r\n      this.description = this.props.eventInfoSelected.description;\r\n    }\r\n    return(\r\n      <Modal className=\"settingsModal\" show={this.state.eventOpenState} onHide={(e) => this.handleItemClick(e, \"close\")} size=\"lg\">\r\n        <Modal.Header>\r\n          <div className=\"header1\" style={{\"marginBottom\":\"0px\"}}>{this.title}</div>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div className=\"header2\">{this.date}</div>\r\n          <div className=\"header3\">{this.time}</div>\r\n          <br/>\r\n          <p className=\"descriptionParagraph\" dangerouslySetInnerHTML={{ __html: this.description }}></p>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={(e) => this.handleItemClick(e, \"close\")} style={{'marginRight':\"15px\"}}>\r\n            Close\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    )\r\n  }\r\n}","import React from 'react';\r\nimport ApiCalendar from 'react-google-calendar-api';\r\nimport { AsyncStorage } from 'AsyncStorage';\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Form from 'react-bootstrap/Form'\r\nimport settingsIcon from \"../assets/cog-solid.svg\"\r\nimport Button from 'react-bootstrap/Button'\r\nimport Accordion from 'react-bootstrap/Accordion'\r\nimport Card from 'react-bootstrap/Card'\r\nimport ColorPicker from \"./ColorPicker\"\r\nimport ButtonStyle from \"./ButtonStyle\"\r\nimport {getStorage,syncData} from \"../functions/DataFunctions\"\r\n\r\nimport '../App.css';\r\n\r\nexport default class Settings extends React.Component{\r\n  constructor(props) {\r\n    super(props);\r\n    this.state ={\r\n      settingsOpen: false, \r\n      signStatus: this.props.signStatus,\r\n      currentFontAccent: \"\",\r\n      currentFontParagraph: \"\",\r\n    };\r\n    this.loadSavedFonts = this.loadSavedFonts.bind(this);\r\n    this.importedData = \"\";\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.loadSavedFonts();\r\n  }\r\n\r\n  async loadSavedFonts(){\r\n    var currentFontAccent = await getStorage(\"currentFontAccent\",\"Pier Sans\");\r\n    this.changeFont(currentFontAccent, \"accent\");\r\n    var currentFontParagraph = await getStorage(\"currentFontParagraph\",\"Calibri\");\r\n    this.changeFont(currentFontParagraph, \"paragraph\");\r\n\r\n    this.setState({\r\n      currentFontAccent:currentFontAccent,\r\n      currentFontParagraph:currentFontParagraph,\r\n    })\r\n  }\r\n\r\n  handleItemClick(event: SyntheticEvent<any>, name: string): void {\r\n    if (name === 'openSettings') {\r\n      this.setState({\r\n        settingsOpen: true,\r\n      })\r\n    } else if (name==='closeSettings') {\r\n      //Reload events on exit of settings\r\n      this.props.resetCalendarObjects();\r\n      this.setState({\r\n        settingsOpen: false,\r\n      })\r\n    } else if (name === 'signInOut') {\r\n      if(this.props.signStatus){\r\n        this.props.googleLogin(false);\r\n      } else {\r\n        this.props.googleLogin(true);\r\n      }\r\n    }\r\n  }\r\n\r\n  handleChange(event,props) {\r\n    if(event.target.name===\"resetPomoStats\"){\r\n      AsyncStorage.setItem('pomoTotalSec', 0);\r\n      this.setState({\r\n        settingsOpen: false,\r\n      })\r\n    }\r\n  }\r\n\r\n  changeFont(value, type){\r\n    if(type===\"accent\"){\r\n      AsyncStorage.setItem('currentFontAccent', value);\r\n      if(value===\"Pier Sans\"){\r\n        document.documentElement.style.setProperty('--font-normal', \"PierSans\");\r\n        document.documentElement.style.setProperty('--font-bold', \"PierSansBold\");\r\n      } else if (value===\"Open Sans\"){\r\n        document.documentElement.style.setProperty('--font-normal', \"OpenSans\");\r\n        document.documentElement.style.setProperty('--font-bold', \"OpenSansBold\");\r\n      } else if (value===\"Roboto\"){\r\n        document.documentElement.style.setProperty('--font-normal', \"Roboto\");\r\n        document.documentElement.style.setProperty('--font-bold', \"RobotoBold\");\r\n      } else if (value===\"Nunito\"){\r\n        document.documentElement.style.setProperty('--font-normal', \"NunitoSans\");\r\n        document.documentElement.style.setProperty('--font-bold', \"NunitoSansBold\");\r\n      } else if (value===\"Fredoka One\"){\r\n        document.documentElement.style.setProperty('--font-normal', \"FredokaOne\");\r\n        document.documentElement.style.setProperty('--font-bold', \"FredokaOne\");\r\n      } else if (value===\"Carter One\"){\r\n        document.documentElement.style.setProperty('--font-normal', \"CarterOne\");\r\n        document.documentElement.style.setProperty('--font-bold', \"CarterOne\");\r\n      } else if (value===\"Calibri\"){\r\n        document.documentElement.style.setProperty('--font-normal', \"Calibri\");\r\n        document.documentElement.style.setProperty('--font-bold', \"CalibriBold\");\r\n      }\r\n    } else {\r\n      AsyncStorage.setItem('currentFontParagraph', value);\r\n      if(value===\"Pier Sans\"){\r\n        document.documentElement.style.setProperty('--font-paragraph', \"PierSans\");\r\n      } else if (value===\"Open Sans\"){\r\n        document.documentElement.style.setProperty('--font-paragraph', \"OpenSans\");\r\n      } else if (value===\"Roboto\"){\r\n        document.documentElement.style.setProperty('--font-paragraph', \"Roboto\");\r\n      } else if (value===\"Nunito\"){\r\n        document.documentElement.style.setProperty('--font-paragraph', \"NunitoSans\");\r\n      } else if (value===\"Fredoka One\"){\r\n        document.documentElement.style.setProperty('--font-paragraph', \"FredokaOne\");\r\n      } else if (value===\"Carter One\"){\r\n        document.documentElement.style.setProperty('--font-paragraph', \"CarterOne\");\r\n      } else if (value===\"Calibri\"){\r\n        document.documentElement.style.setProperty('--font-paragraph', \"Calibri\");\r\n      }\r\n    }\r\n  }\r\n\r\n  render(){\r\n    var signInOutLabel;\r\n    if(this.props.signStatus){\r\n      signInOutLabel = \"Logout\"\r\n    } else {\r\n      signInOutLabel = \"Login\"\r\n    }\r\n\r\n    if(global.settings===undefined){\r\n      global.settings=settingsOptions;\r\n    }\r\n    if(global.settingsColour===undefined){\r\n      global.settingsColour=settingsOptionsColour();\r\n    }\r\n    var allData = JSON.stringify(Object.entries(localStorage));\r\n    return(\r\n      <div>\r\n        <img alt=\"open settings\" onClick={(e) => this.handleItemClick(e, \"openSettings\")} src={settingsIcon} className=\"settingsIcon\"/>\r\n        <Modal show={this.state.settingsOpen} onHide={(e) => this.handleItemClick(e, \"closeSettings\")} size=\"lg\">\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Settings</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <Form>\r\n              {global.settings.map( (setting, index)=>\r\n                {return <SettingsContainer key={index} setting={setting}/>}\r\n              )}\r\n              <Form.Group>\r\n                <Button name=\"resetPomoStats\" variant=\"outline-secondary\" onClick={(e) => {this.handleChange(e, this.props); this.props.showToast(\"Reset pomodoro stats\")}}>\r\n                  Reset Pomodoro Stats\r\n                </Button>\r\n              </Form.Group>\r\n\r\n              <Form.Group>\r\n                <Form.Label>Custom accent font</Form.Label>\r\n                <Form.Control as=\"select\" onChange={(event)=>{this.changeFont(event.target.value, \"accent\")}}>\r\n                  <option>Select font...</option>\r\n                  <option className=\"pierSans\">Pier Sans</option>\r\n                  <option className=\"openSans\">Open Sans</option>\r\n                  <option className=\"roboto\">Roboto</option>\r\n                  <option className=\"nunito\">Nunito</option>\r\n                  <option className=\"fredokaOne\">Fredoka One</option>\r\n                  <option className=\"carterOne\">Carter One</option>\r\n                  <option className=\"calibri\">Calibri</option>\r\n                </Form.Control>\r\n              </Form.Group>\r\n\r\n              <Form.Group>\r\n                <Form.Label>Custom paragraph font</Form.Label>\r\n                <Form.Control as=\"select\" onChange={(event)=>{this.changeFont(event.target.value, \"paragraph\")}}>\r\n                  <option>Select font...</option>\r\n                  <option className=\"pierSans\">Pier Sans</option>\r\n                  <option className=\"openSans\">Open Sans</option>\r\n                  <option className=\"roboto\">Roboto</option>\r\n                  <option className=\"nunito\">Nunito</option>\r\n                  <option className=\"fredokaOne\">Fredoka One</option>\r\n                  <option className=\"carterOne\">Carter One</option>\r\n                  <option className=\"calibri\">Calibri</option>\r\n                </Form.Control>\r\n              </Form.Group>\r\n\r\n              <Form.Group>\r\n                <Accordion defaultActiveKey=\"10\">\r\n                  <Card>\r\n                    <Card.Header style={{\"padding\":\"4px\"}}>\r\n                      <Accordion.Toggle as={Button} variant=\"outline-primary\" eventKey=\"0\">\r\n                        ▼ Set custom course colours... \r\n                      </Accordion.Toggle>\r\n                    </Card.Header>\r\n                    <Accordion.Collapse eventKey=\"0\">\r\n                      <div>\r\n                        {global.settingsColour.length===0 ? <div style={{margin:10}}>There are no courses found. Please follow the course formatting below.</div> : global.settingsColour.map( (settingColour, index)=>\r\n                          {return <SettingsContainerColor key={settingColour.keyName+index.toString()} settingColour={settingColour}/>}\r\n                        )}\r\n                      </div>\r\n                    </Accordion.Collapse>\r\n                  </Card>\r\n                </Accordion>\r\n              </Form.Group>\r\n\r\n              <Form.Group>\r\n                <Form.Label>Saved data and settings</Form.Label>\r\n                <Form.Control value={allData} onFocus={(event) => event.target.select()}/>\r\n                <Form.Text className=\"text-muted\">\r\n                  Above is all the saved data and settings\r\n                </Form.Text>\r\n              </Form.Group>\r\n              <Form.Group>\r\n                <Form.Label>Import saved data and settings</Form.Label>\r\n                <div style={{display:\"flex\",flexDirection: \"row\"}}>\r\n                  <Form.Control onChange={(form)=>{this.importedData = form.target.value}} placeholder={\"[[\\\"@AsyncStorage:lastSignIn\\\",\\\"3.9.0\\\"],[\\\"@AsyncStorage:workMinutes\\\",...\"}/>\r\n                  <Button class=\"pull-left\" onClick={async ()=>{var success = await syncData(this.importedData); this.handleItemClick(\"e\", \"closeSettings\"); success===0 ? this.props.showToast(\"Failed to sync settings and data\") : this.props.showToast(\"Synced \" + success + \" settings/data entries\")}}>Sync</Button>\r\n                </div>\r\n                <Form.Text className=\"text-muted\">\r\n                  Paste settings here and hit the 'Sync' button\r\n                </Form.Text>\r\n              </Form.Group>\r\n            </Form>\r\n            <p><b>Course codes</b> have the following format; at the beginning of an event name: \"XXX999\" or \"XXXY999\". <br/>3 letters or 4 letters followed by 3 numbers.</p>\r\n            <p>You can <b>sort</b> each category by clicking each category header.</p>\r\n            <p>Closing settings will reload the calendar.</p>\r\n            <p>\r\n              This project is open source, feel free to check out the code here: <a href=\"https://github.com/jameskokoska/GooglyCalendar\">https://github.com/jameskokoska/GooglyCalendar</a> \r\n              <Form.Text style={{\"float\":\"right\"}} className=\"text-muted\">\r\n                {\"v\"+global.version}\r\n              </Form.Text>\r\n            </p>\r\n           \r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <div onClick={(e) => this.handleItemClick(e, \"signInOut\")} style={{\"left\":\"5px\",\"position\":\"absolute\"}}>\r\n              <ButtonStyle label={signInOutLabel}/>\r\n            </div>\r\n            <Button variant=\"secondary\" onClick={(e) => this.handleItemClick(e, \"closeSettings\")}>\r\n              Close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nclass SettingsContainerColor extends React.Component{\r\n  render(){\r\n    return(\r\n      <Form.Group style={{\"paddingTop\":\"5px\",\"paddingBottom\":\"3px\", \"paddingLeft\":\"10px\",\"paddingRight\":\"10px\"}}>\r\n        <Form.Label>{this.props.settingColour.course + \" course color\"}</Form.Label>\r\n        <ColorPicker color={this.props.settingColour.currentValue} courseStorageID={this.props.settingColour.keyName}/>\r\n      </Form.Group>\r\n    )\r\n  }\r\n}\r\n\r\nclass SettingsContainer extends React.Component{\r\n  handleChange(form, key, checked) {\r\n    if(checked===true)\r\n      AsyncStorage.setItem(key, form.target.checked);\r\n    else \r\n      AsyncStorage.setItem(key, form.target.value);\r\n  }\r\n  render(){\r\n    if(this.props.setting.type===\"text\"){\r\n      return(\r\n        <Form.Group>\r\n          <Form.Label>{this.props.setting.title}</Form.Label>\r\n          <Form.Control onChange={(form) => {this.handleChange(form,this.props.setting.keyName)}} placeholder={this.props.setting.placeHolder} defaultValue={this.props.setting.currentValue}/>\r\n          <Form.Text className=\"text-muted\">\r\n            {this.props.setting.description}\r\n          </Form.Text>\r\n        </Form.Group>\r\n      )\r\n    } else if(this.props.setting.type===\"textDouble\"){\r\n      return(\r\n        <Form.Group>\r\n          <Form.Label>{this.props.setting.title}</Form.Label>\r\n          <div>\r\n            <Form.Control onChange={(form) => {this.handleChange(form,this.props.setting.keyName1)}} placeholder={this.props.setting.placeHolder1} defaultValue={this.props.setting.currentValue1} style={{width:\"70px\", display:\"inline-block\", marginLeft:\"0px\", marginRight:\"5px\"}}/>\r\n            {this.props.setting.subtitle1}\r\n            <Form.Control onChange={(form) => {this.handleChange(form,this.props.setting.keyName2)}} placeholder={this.props.setting.placeHolder2} defaultValue={this.props.setting.currentValue2} style={{width:\"70px\", display:\"inline-block\", marginLeft:\"20px\", marginRight:\"5px\"}}/>\r\n            {this.props.setting.subtitle2}\r\n          </div>\r\n          <Form.Text className=\"text-muted\">\r\n            {this.props.setting.description}\r\n          </Form.Text>\r\n        </Form.Group>\r\n      )\r\n    } else if(this.props.setting.type===\"check\"){\r\n      return(\r\n        <Form.Group>\r\n          <Form.Check type=\"checkbox\" label={this.props.setting.title} onChange={(form) => {this.handleChange(form,this.props.setting.keyName, true)}} defaultChecked={this.props.setting.currentValue===\"true\"}/>\r\n          <Form.Text className=\"text-muted\">\r\n            {this.props.setting.description}\r\n          </Form.Text>\r\n        </Form.Group>\r\n      )\r\n    } else if(this.props.setting.type===\"color\"){\r\n      return(\r\n        <Form.Group>\r\n          <Form.Label>{this.props.setting.title}</Form.Label>\r\n          <ColorPicker color={this.props.setting.currentValue} courseStorageID={this.props.setting.keyName}/>\r\n        </Form.Group>\r\n      )\r\n    } else {\r\n      return <div/>\r\n    }\r\n  }\r\n}\r\n\r\nexport function getSettingsValue(keyName){\r\n  var settingsList = global.settings;\r\n  if(settingsList===undefined)\r\n    return 0;\r\n  for(var x = 0; x<settingsList.length;x++){\r\n    if(settingsList[x].keyName===keyName){\r\n      if(settingsList[x].currentValue===\"true\"||settingsList[x].currentValue===\"false\"){\r\n        return settingsList[x].currentValue===\"true\"\r\n      }\r\n      return settingsList[x].currentValue;\r\n    } else if (settingsList[x].keyName1 !== undefined && settingsList[x].keyName1===keyName) {\r\n      if(settingsList[x].currentValue1===\"true\"||settingsList[x].currentValue1===\"false\"){\r\n        return settingsList[x].currentValue1===\"true\"\r\n      }\r\n      return settingsList[x].currentValue1;\r\n    } else if (settingsList[x].keyName2 !== undefined && settingsList[x].keyName2===keyName) {\r\n      if(settingsList[x].currentValue2===\"true\"||settingsList[x].currentValue2===\"false\"){\r\n        return settingsList[x].currentValue2===\"true\"\r\n      }\r\n      return settingsList[x].currentValue2;\r\n    }\r\n  }\r\n\r\n  settingsList = global.settingsColour;\r\n  if(settingsList===undefined)\r\n    return 0;\r\n  for(x = 0; x<settingsList.length;x++){\r\n    if(settingsList[x].keyName===keyName){\r\n      return settingsList[x].currentValue;\r\n    }\r\n  }\r\n  return 0;\r\n}\r\n\r\n\r\nexport const settingsOptionsColour = () => {\r\n  if(global.courses===undefined||global.courses===[]){\r\n    return [];\r\n  }\r\n  var courses = global.courses;\r\n  var settingsOptionColour = [];\r\n  \r\n  for(var x = 0; x<courses.length;x++){\r\n    var currentColour = {};\r\n    currentColour.keyName = \"courseColor\"+courses[x];\r\n    currentColour.currentValue = \"\";\r\n    currentColour.course = courses[x]\r\n    settingsOptionColour.push(currentColour)\r\n  }\r\n  return settingsOptionColour\r\n}\r\n\r\n//getSettingsValue(\"keyName\")\r\nexport const settingsOptions = [\r\n  {\r\n    \"keyName\" : \"calendarID\",\r\n    \"defaultValue\" : \"primary\",\r\n    \"currentValue\" : \"\",\r\n    \"title\" : \"Calendar ID\",\r\n    \"placeHolder\" : \"example@group.calendar.google.com\",\r\n    \"description\" : \"By keeping this blank, it will be the default calendar.\",\r\n    \"type\" : \"text\" //type is either text, textDouble, check, color, break\r\n  },\r\n  {\r\n    \"keyName\" : \"calendarIDColor1\",\r\n    \"defaultValue\" : \"#64b5f6\",\r\n    \"currentValue\" : \"\",\r\n    \"title\" : \"Calendar ID Color\",\r\n    \"type\" : \"color\"\r\n  },\r\n  {\r\n    \"keyName\" : \"calendarID2\",\r\n    \"defaultValue\" : \"\",\r\n    \"currentValue\" : \"\",\r\n    \"title\" : \"Calendar ID 2\",\r\n    \"placeHolder\" : \"example@group.calendar.google.com\",\r\n    \"description\" : \"By keeping this blank, it will not attempt to load a second calendar.\",\r\n    \"type\" : \"text\"\r\n  },\r\n  {\r\n    \"keyName\" : \"calendarIDColor2\",\r\n    \"defaultValue\" : \"#64b5f6\",\r\n    \"currentValue\" : \"\",\r\n    \"title\" : \"Calendar ID 2 Color\",\r\n    \"type\" : \"color\"\r\n  },\r\n  {\r\n    \"keyName\" : \"calendarID3\",\r\n    \"defaultValue\" : \"\",\r\n    \"currentValue\" : \"\",\r\n    \"title\" : \"Calendar ID 3\",\r\n    \"placeHolder\" : \"example@group.calendar.google.com\",\r\n    \"description\" : \"By keeping this blank, it will not attempt to load a third calendar.\",\r\n    \"type\" : \"text\" \r\n  },\r\n  {\r\n    \"keyName\" : \"calendarIDColor3\",\r\n    \"defaultValue\" : \"#64b5f6\",\r\n    \"currentValue\" : \"\",\r\n    \"title\" : \"Calendar ID 3 Color\",\r\n    \"type\" : \"color\"\r\n  },\r\n  {\r\n    \"keyName\" : \"numEvents\",\r\n    \"defaultValue\" : \"500\",\r\n    \"currentValue\" : \"\",\r\n    \"title\" : \"Number of events to load\",\r\n    \"placeHolder\" : \"\",\r\n    \"description\" : \"The number of events to load from your calendar.\",\r\n    \"type\" : \"text\" \r\n  },\r\n  {\r\n    \"keyName\" : \"hoursBefore\",\r\n    \"defaultValue\" : \"24\",\r\n    \"currentValue\" : \"\",\r\n    \"title\" : \"Number of hours before to load\",\r\n    \"placeHolder\" : \"24\",\r\n    \"description\" : \"The number of hours before the current time to load events from.\",\r\n    \"type\" : \"text\" \r\n  },\r\n  {\r\n    \"keyName\" : \"nextWeekShow\",\r\n    \"defaultValue\" : \"7\",\r\n    \"currentValue\" : \"\",\r\n    \"title\" : \"Number of days to view\",\r\n    \"placeHolder\" : \"7\",\r\n    \"description\" : \"The number of days of events to display in the Task List.\",\r\n    \"type\" : \"text\" \r\n  },\r\n  {\r\n    \"keyName\" : \"skipWeeks\",\r\n    \"defaultValue\" : \"true\",\r\n    \"currentValue\" : \"\",\r\n    \"title\" : \"Day View: scroll through weeks\",\r\n    \"description\" : \"Day View arrows skip through weeks instead of single days\",\r\n    \"type\" : \"check\"\r\n  },\r\n  {\r\n    \"keyName\" : \"useEventColours\",\r\n    \"defaultValue\" : \"true\",\r\n    \"currentValue\" : \"\",\r\n    \"title\" : \"Use event colours\",\r\n    \"description\" : \"Use the colours set for the event. If no colour is set it will default to blue. This overwrites course colours.\",\r\n    \"type\" : \"check\" \r\n  },\r\n  {\r\n    \"keyName\" : \"autoDark\",\r\n    \"defaultValue\" : \"true\",\r\n    \"currentValue\" : \"\",\r\n    \"title\" : \"Auto dark mode\",\r\n    \"description\" : \"Changes the colour theme automatically based on the time of day.\",\r\n    \"type\" : \"check\" \r\n  },\r\n  {\r\n    \"keyName\" : \"darkMode\",\r\n    \"defaultValue\" : \"false\",\r\n    \"currentValue\" : \"\",\r\n    \"title\" : \"Dark mode\",\r\n    \"description\" : \"Toggles between light and dark modes. Ensure 'auto Dark Mode' is off.\",\r\n    \"type\" : \"check\" \r\n  },\r\n  {\r\n    \"keyName\" : \"enableAnimations\",\r\n    \"defaultValue\" : \"true\",\r\n    \"currentValue\" : \"\",\r\n    \"title\" : \"Enable animations\",\r\n    \"description\" : \"Enables animations of the lists when they are loaded\",\r\n    \"type\" : \"check\" \r\n  },\r\n  {\r\n    \"keyName\" : \"importantEvents\",\r\n    \"defaultValue\" : \"\",\r\n    \"currentValue\" : \"\",\r\n    \"title\" : \"Important events\",\r\n    \"placeHolder\" : \"Test,Exam,Quiz\",\r\n    \"description\" : \"Events to highlight in the list, separate with comma.\",\r\n    \"type\" : \"text\" \r\n  },\r\n  {\r\n    \"keyName\" : \"hideEvents\",\r\n    \"defaultValue\" : \"\",\r\n    \"currentValue\" : \"\",\r\n    \"title\" : \"Hide events\",\r\n    \"placeHolder\" : \"LEC,boring,not important,noshow\",\r\n    \"description\" : \"Events to hide from the task list, separate with comma (CaSe sEnSiTIvE). If the event name contains any part of this, it will be hidden.\",\r\n    \"type\" : \"text\" \r\n  },\r\n  {\r\n    \"keyName1\" : \"workMinutes\",\r\n    \"keyName2\" : \"workSeconds\",\r\n    \"defaultValue1\" : \"25\",\r\n    \"defaultValue2\" : \"0\",\r\n    \"currentValue1\" : \"\",\r\n    \"currentValue2\" : \"\",\r\n    \"title\" : \"Pomodoro timer work session\",\r\n    \"subtitle1\" : \"minutes\",\r\n    \"subtitle2\" : \"seconds\",\r\n    \"placeHolder1\" : \"5\",\r\n    \"placeHolder2\" : \"0\",\r\n    \"description\" : \"Set the time for work sessions for the pomodoro timer.\",\r\n    \"type\" : \"textDouble\" \r\n  },\r\n  {\r\n    \"keyName1\" : \"breakMinutes\",\r\n    \"keyName2\" : \"breakSeconds\",\r\n    \"defaultValue1\" : \"5\",\r\n    \"defaultValue2\" : \"0\",\r\n    \"currentValue1\" : \"\",\r\n    \"currentValue2\" : \"\",\r\n    \"title\" : \"Pomodoro timer break session\",\r\n    \"subtitle1\" : \"minutes\",\r\n    \"subtitle2\" : \"seconds\",\r\n    \"placeHolder1\" : \"5\",\r\n    \"placeHolder2\" : \"0\",\r\n    \"description\" : \"Set the time for break sessions for the pomodoro timer.\",\r\n    \"type\" : \"textDouble\" \r\n  },\r\n  {\r\n    \"keyName\" : \"pomoSound\",\r\n    \"defaultValue\" : \"true\",\r\n    \"currentValue\" : \"\",\r\n    \"title\" : \"Pomodoro sound\",\r\n    \"description\" : \"Play a sound when a break or work session ends.\",\r\n    \"type\" : \"check\" \r\n  },\r\n]\r\n","import ApiCalendar from 'react-google-calendar-api';\r\nimport { AsyncStorage } from 'AsyncStorage';\r\n\r\n// import {listEvents, sortPin, sortName, sortName, sortCourse, sortDate, sortCheck, determineRawSecondsTime, determineTaskName, determineTaskCourse, appendLastSort} from \"./DataFunctions\"\r\nexport function listEvents(maxResults, hoursPast=0, calendarId=ApiCalendar.calendar) { \r\n  var datePast = new Date();\r\n  datePast.setHours(datePast.getHours()-hoursPast);\r\n  if (ApiCalendar.gapi) {\r\n    return ApiCalendar.gapi.client.calendar.events.list({\r\n            'calendarId': calendarId,\r\n            'timeMin': (datePast).toISOString(),\r\n            'showDeleted': false,\r\n            'singleEvents': true,\r\n            'maxResults': maxResults,\r\n            'orderBy': 'startTime'\r\n    });\r\n  }\r\n  else {\r\n    console.log(\"Error: this.gapi not loaded\");\r\n    return false;\r\n  }\r\n}\r\n\r\nexport function sortPin(calendarObjects){\r\n  var sortedCalendarObjects = calendarObjects;\r\n  var nameA;\r\n  var nameB;\r\n  sortedCalendarObjects.sort(function(a, b) {\r\n    if(a.pin === true){\r\n      nameA=\"0000pin\";\r\n    } else {\r\n      nameA=\"zzzzpin\";\r\n    }\r\n    if(b.pin === true){\r\n      nameB=\"0000pin\";\r\n    } else {\r\n      nameB=\"zzzzpin\";\r\n    }\r\n    return (nameA < nameB) ? -1 : (nameA > nameB) ? 1 : 0;\r\n  });\r\n  return sortedCalendarObjects;\r\n}\r\n\r\nexport function sortName(calendarObjects){\r\n  var sortedCalendarObjects = calendarObjects;\r\n  sortedCalendarObjects.sort(function(a, b) {\r\n    var textA;\r\n    var textB;\r\n    if(determineTaskName(a.summary)===undefined){\r\n      textA = \"undefined\"\r\n    } else {\r\n      textA = determineTaskName(a.summary).toUpperCase();\r\n    }\r\n    if(determineTaskName(b.summary)===undefined){\r\n      textB = \"undefined\"\r\n    } else {\r\n      textB = determineTaskName(b.summary).toUpperCase();\r\n    }\r\n    return (textA < textB) ? -1 : (textA > textB) ? 1 : 0;\r\n  });\r\n  return sortedCalendarObjects;\r\n}\r\n\r\nexport function sortCourse(calendarObjects){\r\n  var sortedCalendarObjects = calendarObjects;\r\n  sortedCalendarObjects.sort(function(a, b) {\r\n    var textA = determineTaskCourse(a.summary).toUpperCase();\r\n    var textB = determineTaskCourse(b.summary).toUpperCase();\r\n    return (textA < textB) ? -1 : (textA > textB) ? 1 : 0;\r\n  });\r\n  return sortedCalendarObjects;\r\n}\r\n\r\nexport function sortDate(calendarObjects){\r\n  var sortedCalendarObjects = calendarObjects;\r\n  sortedCalendarObjects.sort(function(a, b) {\r\n    var textA = determineRawSecondsTime(a.start);\r\n    var textB = determineRawSecondsTime(b.start);\r\n    return (textA < textB) ? -1 : (textA > textB) ? 1 : 0;\r\n  });\r\n  return sortedCalendarObjects;\r\n}\r\n\r\nexport function sortCheck(calendarObjects){\r\n  var sortedCalendarObjects = calendarObjects;\r\n  var nameA;\r\n  var nameB;\r\n  sortedCalendarObjects.sort(function(a, b) {\r\n    if(a.done === true){\r\n      nameA=\"zdone\";\r\n    } else {\r\n      nameA=\"notDone\";\r\n    }\r\n    if(b.done === true){\r\n      nameB=\"zdone\";\r\n    } else {\r\n      nameB=\"notDone\";\r\n    }\r\n    return (nameA < nameB) ? -1 : (nameA > nameB) ? 1 : 0;\r\n  });\r\n  return sortedCalendarObjects;\r\n}\r\n\r\nexport function determineRawSecondsTime(start){\r\n  if(start.dateTime!==undefined){\r\n    return new Date(start.dateTime).valueOf();\r\n  } else if(start.date!==undefined){\r\n    return new Date(start.date).valueOf();\r\n  } else {\r\n    return 0;\r\n  }\r\n}\r\n\r\n//this will determine the task name without the check-mark and course\r\nexport function determineTaskName(summary){\r\n  var name;\r\n  if(summary !== undefined && summary.length>=2 && (summary.substring(0,2)===\"✔️\"||summary.substring(0,2)===\"📌\")){\r\n    name=summary.substring(2);\r\n  } else {\r\n    name=summary;\r\n  }\r\n  if(summary!==undefined&&name.length>7&&/^\\d+$/.test(name.substring(4,7))&&!/\\d/.test(name.substring(0,4))){\r\n    if(name.substring(7,8)!==\" \"){\r\n      name=name.substring(7);\r\n    } else {\r\n      name=name.substring(8);\r\n    }\r\n  } else if(summary!==undefined&&name.length>=8&&/^\\d+$/.test(name.substring(3,6))&&!/\\d/.test(name.substring(0,3))&&name.substring(6,8)===\"H1\"){\r\n    if(name.substring(8,9)!==\" \"){\r\n      name=name.substring(8);\r\n    } else {\r\n      name=name.substring(9);\r\n    }\r\n  } else if(summary!==undefined&&name.length>6&&/^\\d+$/.test(name.substring(3,6))&&!/\\d/.test(name.substring(0,3))){\r\n    if(name.substring(6,7)!==\" \"){\r\n      name=name.substring(6);\r\n    } else {\r\n      name=name.substring(7);\r\n    }\r\n  } \r\n  return name;\r\n}\r\n\r\nexport function determineTaskCourse(summary){\r\n  var course;\r\n  var name;\r\n  if(summary !== undefined && summary.length>=2 && (summary.substring(0,2)===\"✔️\"||summary.substring(0,2)===\"📌\")){\r\n    name=summary.substring(2);\r\n  } else {\r\n    name=summary;\r\n  }\r\n\r\n  if(summary!==undefined&&name.length>7&&/^\\d+$/.test(name.substring(4,7))&&!/\\d/.test(name.substring(0,4))){\r\n    course=name.substring(0,7);\r\n  } else if(summary!==undefined&&name.length>6&&/^\\d+$/.test(name.substring(3,6))&&!/\\d/.test(name.substring(0,3))){\r\n    course=name.substring(0,6);\r\n  }  else {\r\n    course=\"\";\r\n  }\r\n  return course;\r\n}\r\n\r\n\r\n\r\nexport function appendLastSort(newSort, lastSort){\r\n  var lastSortList = [];\r\n  lastSortList = lastSort.split(\",\");\r\n  lastSortList = lastSortList.filter(x=>x !== newSort);\r\n  lastSortList = [...lastSortList, newSort];\r\n  var lastSortListStr=\"\";\r\n  lastSortList.map(function(sortElement,i){\r\n    if(i!==lastSortList.length-1){\r\n      lastSortListStr=lastSortListStr+sortElement+\",\";\r\n    } else {\r\n      lastSortListStr=lastSortListStr+sortElement;\r\n    }\r\n  })\r\n  return lastSortListStr;\r\n}\r\n\r\nexport async function getStorage(key, defaultValue){\r\n  var stored = await AsyncStorage.getItem(key);\r\n  if(stored === undefined){\r\n    stored = defaultValue;\r\n  }\r\n  return stored\r\n}\r\n\r\nexport function allStorage() {\r\n  var values = [],\r\n      keys = Object.keys(localStorage),\r\n      i = keys.length;\r\n  while ( i-- ) {\r\n      values.push( localStorage.getItem(keys[i]) );\r\n  }\r\n  return values;\r\n}\r\n\r\nexport async function syncData(data){\r\n  if(data.length>5){\r\n    var loadedData;\r\n    try{\r\n      loadedData = JSON.parse(data);\r\n    } catch {\r\n      return 0;\r\n    }\r\n    var key = \"\";\r\n    var value = \"\";\r\n    for(var i = 0; i < loadedData.length; i++){\r\n      key = loadedData[i][0];\r\n      key = key.replace(\"@AsyncStorage:\",\"\")\r\n      value = loadedData[i][1];\r\n      await AsyncStorage.setItem(key, value);\r\n      console.log(key + value);\r\n    }\r\n    return loadedData.length;\r\n  } else {\r\n    return 0;\r\n  }\r\n}","import React from 'react';\r\nimport { AsyncStorage } from 'AsyncStorage';\r\nimport ButtonStyle from \"./ButtonStyle\"\r\nimport Button from 'react-bootstrap/Button'\r\nimport CountUp from 'react-countup';\r\nimport {getSettingsValue} from \"./Settings\"\r\nimport {getStorage} from \"../functions/DataFunctions\"\r\n\r\n\r\nexport default class Pomo extends React.Component{\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {currentSeconds: 0, paused: true, work: true};\r\n    this.workMessages = [\"Go get some work done!\", \"You got this!\", \"Keep going at it!\", \"Hard work pays off.\",\":)\",\"You can do it!\",\"Work smart, get things done.\",\"Work now, party later.\",\"Don't be distracted.\", \"Be productive.\",\"Don't waste time.\",\"Focus.\",\"Keep going!\",\"Keep pushing.\"];\r\n    this.chosenWorkMessage = this.workMessages[Math.floor(Math.random() * this.workMessages.length)];\r\n    this.audio = new Audio(require(\"../assets/ding.m4a\"));\r\n    this.addPomoTotalSec=0;\r\n  }\r\n  playSound(){\r\n    if(this.state.pomoSound===true && this.state.currentSeconds === 0){\r\n      this.audio.play();\r\n    }\r\n  }\r\n  addTotalTime(){\r\n    if(this.state.work===true){\r\n      this.addPomoTotalSec=parseInt(this.addPomoTotalSec)+parseInt(this.state.workSeconds)+parseInt(this.state.workMinutes*60);\r\n      AsyncStorage.setItem('pomoTotalSec', this.addPomoTotalSec);\r\n    }\r\n  }\r\n  async componentDidMount(){\r\n    this.getAsyncStorage();\r\n  }\r\n  async getAsyncStorage(){\r\n    await this.props.loadSettings();\r\n    this.addPomoTotalSec = await getStorage(\"pomoTotalSec\",0);\r\n    if(this.addPomoTotalSec===undefined){\r\n      this.addPomoTotalSec = 0;\r\n    }\r\n    this.setState({ \r\n      workSeconds:getSettingsValue(\"workSeconds\"),\r\n      breakSeconds:getSettingsValue(\"breakSeconds\"),\r\n      workMinutes:getSettingsValue(\"workMinutes\"),\r\n      breakMinutes:getSettingsValue(\"breakMinutes\"),\r\n      pomoSound:getSettingsValue(\"pomoSound\"),\r\n      currentSeconds:parseInt(getSettingsValue(\"workSeconds\"))+parseInt(getSettingsValue(\"workMinutes\")*60),\r\n      paused: true,\r\n    });\r\n  }\r\n  componentWillUnmount() {\r\n    clearInterval(this.interval);\r\n  }\r\n  startTimer(){\r\n    this.interval = setInterval(() => {\r\n      this.setState({currentSeconds: this.state.currentSeconds-1});\r\n      this.playSound();\r\n    }, 1000);\r\n  }\r\n  handleItemClick(event: SyntheticEvent<any>, name: string): void {\r\n    if (name===\"resetTimer\") {\r\n      this.getAsyncStorage();\r\n      this.setState({paused: true, work: true});\r\n      clearInterval(this.interval);\r\n      this.setState({currentSeconds: parseInt(this.state.workSeconds)+parseInt(this.state.workMinutes*60)});\r\n      if(this.state.currentSeconds<0){\r\n        this.addTotalTime();\r\n      }\r\n    } else if (name===\"pauseTimer\"&&this.state.currentSeconds>0) {\r\n      if(!this.state.paused){\r\n        clearInterval(this.interval);\r\n      } else {\r\n        this.startTimer();\r\n      }\r\n      this.setState({paused: !this.state.paused});\r\n    } else if (name===\"pauseTimer\"&&this.state.currentSeconds<=0){\r\n      return;\r\n    } else if (name===\"startBreak\") {\r\n      this.setState({currentSeconds: parseInt(this.state.breakSeconds)+parseInt(this.state.breakMinutes*60), work:false});\r\n      this.startTimer();\r\n      this.addTotalTime();\r\n    } else if (name===\"startWork\"){\r\n      this.setState({currentSeconds: parseInt(this.state.workSeconds)+parseInt(this.state.workMinutes*60), work:true});\r\n      this.chosenWorkMessage = this.workMessages[Math.floor(Math.random() * this.workMessages.length)];\r\n      this.startTimer();\r\n    }\r\n  }\r\n  render(){\r\n    var totalWidth=92;\r\n    var percent;\r\n    if(this.state.work){\r\n      percent = (this.state.currentSeconds/(parseInt(this.state.workSeconds)+parseInt(this.state.workMinutes*60)))*totalWidth; \r\n    } else {\r\n      percent = (this.state.currentSeconds/(parseInt(this.state.breakSeconds)+parseInt(this.state.breakMinutes*60)))*totalWidth; \r\n    }\r\n    var pauseButtonLabel;\r\n    if(!this.state.paused){\r\n      pauseButtonLabel=\"Pause\";\r\n    } else {\r\n      pauseButtonLabel=\"Start\";\r\n    }\r\n\r\n    var minutes = pluralString(Math.floor(this.state.currentSeconds/60)===1,\"minute\");\r\n    var seconds = pluralString(this.state.currentSeconds%60===1,\"second\");\r\n\r\n    var timerMessage;\r\n    if(this.state.currentSeconds<0){\r\n      timerMessage = \" \";\r\n    }else if(Math.floor(this.state.currentSeconds/60)===0){\r\n      timerMessage = (this.state.currentSeconds%60).toString() + \" \" + seconds;\r\n    } else {\r\n      timerMessage = (Math.floor(this.state.currentSeconds/60)).toString() + \" \" + minutes + \" \" + (this.state.currentSeconds%60).toString() + \" \" + seconds;\r\n    } \r\n    if(isNaN(this.state.currentSeconds)){\r\n      timerMessage=\"Make sure the timer is set up properly in settings\";\r\n    }\r\n\r\n    \r\n    var textMessage;\r\n    if(this.state.work===false){\r\n      textMessage = \"Go enjoy your break!\"\r\n    } else {\r\n      textMessage = this.chosenWorkMessage;\r\n    }\r\n\r\n    var displayBreakButton = \"none\";\r\n    var displayWorkButton = \"none\";\r\n    //set timer between break and work modes\r\n    if (this.state.currentSeconds < 0 && this.state.work===true){\r\n      displayBreakButton = \"unset\";\r\n      clearInterval(this.interval);\r\n    } else if (this.state.currentSeconds < 0 && this.state.work===false){\r\n      displayWorkButton = \"unset\";\r\n      clearInterval(this.interval);\r\n    }\r\n    return <div className=\"pomoTimerContainer\">\r\n      <div className=\"header1\" style={{marginTop: \"12vh\", textAlign: \"center\"}}>{textMessage}</div>\r\n      <div className=\"pomoTimer\" style={{width:percent+\"%\"}}>\r\n      </div>\r\n      <div className=\"fadeIn\" onClick={(e) => this.handleItemClick(e, \"startBreak\")} style={{display:displayBreakButton, marginTop: \"-14px\"}}>\r\n        <ButtonStyle label={\"Start Break\"}/>\r\n      </div>\r\n      <div className=\"fadeIn\" onClick={(e) => this.handleItemClick(e, \"startWork\")} style={{display:displayWorkButton, marginTop: \"-14px\"}}>\r\n        <ButtonStyle label={\"Start Work\"}/>\r\n      </div>\r\n      <div style={{textAlign: \"center\"}}>{timerMessage}</div>\r\n      <div style={{marginTop: \"30px\", marginBottom: \"30px\"}}>\r\n        <Button variant=\"primary\" onClick={(e) => this.handleItemClick(e, \"pauseTimer\")} style={{marginRight: '20px'}}>\r\n          {pauseButtonLabel}\r\n        </Button>\r\n        <Button variant=\"outline-primary\" onClick={(e) => this.handleItemClick(e, \"resetTimer\")}>\r\n          Reset\r\n        </Button>\r\n      </div>\r\n      <p style={{marginBottom:\"30px\"}}>\r\n        You focused for <CountUp start={0} end={Math.floor(this.addPomoTotalSec/60)} duration={10} useEasing preserveValue redraw/> {pluralString(Math.floor(this.addPomoTotalSec/60)===1,\"minute\")}.\r\n      </p>\r\n    </div>\r\n  } \r\n}\r\n\r\nfunction pluralString(condition,string){\r\n  if(condition){\r\n    return string;\r\n  } else {\r\n    return string+\"s\";\r\n  }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/ding.3769ff60.m4a\";","import React from 'react';\r\nimport {getDisplayMonth, eventToday, getDisplayDayFull,} from \"../functions/DateFunctions\"\r\nimport ApiCalendar from 'react-google-calendar-api';\r\nimport pinIcon from \"../assets/thumbtack-solid.svg\";\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\r\nimport Tooltip from 'react-bootstrap/Tooltip'\r\nimport infoIcon from \"../assets/info-circle-solid.svg\"\r\nimport FlipMove from 'react-flip-move';\r\nimport {getSettingsValue} from \"./Settings\"\r\nimport {determineTaskName} from \"../functions/DataFunctions\"\r\n\r\nexport default class WeekList extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.changeStart = this.changeStart.bind(this);\r\n    this.state = {\r\n      dateDisplayStart: this.firstDayOfWeek(new Date(), 0),\r\n    }\r\n  }\r\n\r\n  firstDayOfWeek(dateObject, firstDayOfWeekIndex) {\r\n    const dayOfWeek = dateObject.getDay();\r\n    var firstDayOfWeek = new Date(dateObject);\r\n    var diff = dayOfWeek >= firstDayOfWeekIndex ? dayOfWeek - firstDayOfWeekIndex : 6 - dayOfWeek;\r\n\r\n    firstDayOfWeek.setDate(dateObject.getDate() - diff);\r\n    firstDayOfWeek.setHours(0,0,0,0);\r\n\r\n    return firstDayOfWeek;\r\n  }\r\n\r\n  //-1 decrease week, 1 increase week\r\n  changeStart(difference){\r\n    if(getSettingsValue(\"skipWeeks\")){\r\n      this.setState({dateDisplayStart: this.state.dateDisplayStart.addDays(7*difference)});\r\n    } else {\r\n      this.setState({dateDisplayStart: this.state.dateDisplayStart.addDays(difference)});\r\n    }\r\n  }\r\n\r\n\r\n  componentDidMount(){\r\n    document.addEventListener(\"keydown\", this.handleKeyDown);\r\n  }\r\n  componentWillUnmount() {\r\n    document.removeEventListener(\"keydown\", this.handleKeyDown);\r\n  }\r\n  handleKeyDown = (event) => {\r\n    if(this.props.currentTab===\"2\"){\r\n      if(event.keyCode===37){\r\n        this.changeStart(-1)\r\n      } else if (event.keyCode === 39){\r\n        this.changeStart(1)\r\n      }\r\n    }\r\n  }\r\n  \r\n  render() {\r\n    // var minWidthNum;\r\n    // if(this.props.nextWeekShow<7){\r\n    //   minWidthNum = this.props.nextWeekShow/7*1150;\r\n    // } else {\r\n    //   minWidthNum = 1150;\r\n    // }\r\n    \r\n    \r\n    return(\r\n      <div className=\"week\">\r\n        <div className=\"weekTable\">\r\n        <div className=\"arrowPosition\" style={{left:\"1.5vw\", position:\"absolute\",cursor:\"pointer\"}} onClick={()=>{this.changeStart(-1)}} >\r\n          <div className=\"arrowDay left\" />\r\n        </div>\r\n        <div className=\"arrowPosition\" style={{right: \"1.5vw\", position:\"absolute\",cursor:\"pointer\"}} onClick={()=>{this.changeStart(1)}} >\r\n          <div className=\"arrowDay right\"/>\r\n        </div>\r\n          <table className=\"weekList\">\r\n            <tbody>\r\n              <tr>\r\n                <WeekListHeader dateDisplayStart={this.state.dateDisplayStart}/>\r\n              </tr>\r\n              <tr>\r\n                <DayList toggleEventInfoOpen={this.props.toggleEventInfoOpen} dateDisplayStart={this.state.dateDisplayStart} calendarObjects={this.props.calendarObjects} courseColors={this.props.courseColors} updateDone={this.props.updateDone} errorTimeoutOpen={this.props.errorTimeoutOpen} updatePin={this.props.updatePin} darkMode={this.props.darkMode}/>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nfunction WeekListHeader(props){\r\n  var weekHeaders = [];\r\n  // var numDays;\r\n  // if(props.days>=7){\r\n  //   numDays = 7;\r\n  // } else {\r\n  //   numDays=props.days;\r\n  // }\r\n  var numDays = 7;\r\n  for (var i = 0; i < numDays; i++) {\r\n    if(props.dateDisplayStart.addDays(i).getDate()===(new Date()).getDate() && props.dateDisplayStart.addDays(i).getMonth()===(new Date()).getMonth() && props.dateDisplayStart.addDays(i).getYear()===(new Date()).getYear()){\r\n      weekHeaders.push( <th key={i} className=\"weekday header3 fadeIn\" style={{backgroundColor:\"#5862bd57\"}}>Today</th> )\r\n    } else {\r\n      weekHeaders.push( <th key={i} className=\"weekday header3 fadeIn\">\r\n        <div style={{fontSize: \"17px\", marginBottom: \"-5px\"}}>\r\n          {getDisplayDayFull(props.dateDisplayStart.addDays(i))}\r\n        </div>\r\n        <div style={{fontSize: \"22px\"}}>\r\n          {getDisplayMonth(props.dateDisplayStart.addDays(i)) + \" \" + props.dateDisplayStart.addDays(i).getDate()}\r\n        </div>\r\n      </th> )\r\n    }\r\n    \r\n  }\r\n  return weekHeaders;\r\n}\r\n\r\nfunction DayList(props){\r\n  var dayListEntries = [];\r\n  // var numDays;\r\n  // if(props.days>=7){\r\n  //   numDays = 7;\r\n  // } else {\r\n  //   numDays=props.days;\r\n  // }\r\n  var numDays = 7;\r\n  for (var i = 0; i < numDays; i++) {\r\n    dayListEntries.push( \r\n      <td className=\"fadeIn\" key={i}>\r\n        <DayListEntry toggleEventInfoOpen={props.toggleEventInfoOpen} dateDisplayStart={props.dateDisplayStart} key={i} calendarObjects={props.calendarObjects} dayOffset={i} courseColors={props.courseColors} errorTimeoutOpen={props.errorTimeoutOpen} updateDone={props.updateDone} updatePin={props.updatePin} darkMode={props.darkMode}/>\r\n      </td> \r\n    )\r\n  }\r\n  return dayListEntries;\r\n}\r\n\r\nclass DayEntry extends React.Component{\r\n  //Note this code is from the checkoff update accordingly ---------------------------------------------------------\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleItemClick = this.handleItemClick.bind(this);\r\n    this.state ={checked: this.props.done};\r\n  }\r\n  handleItemClick(event: SyntheticEvent<any>, name: string): void {\r\n    if(this.props.calendarIDCurrent===\"\")\r\n      ApiCalendar.setCalendar(\"primary\")\r\n    else \r\n      ApiCalendar.setCalendar(this.props.calendarIDCurrent)\r\n    if (name===\"checkOff\"&&this.props.pin===false) {\r\n      if (ApiCalendar.sign){\r\n        //navigator.vibrate([30]);\r\n        const event = {\r\n          summary: \"✔️\" + this.props.name\r\n        };\r\n        ApiCalendar.updateEvent(event, this.props.id)\r\n        .then(\r\n          this.props.updateDone(this.props.id),\r\n        )\r\n        .catch((error: any) => {\r\n          this.props.errorTimeoutOpen(\"Error 401/404\")\r\n        });\r\n      }\r\n    } else if (name===\"uncheckOff\") {\r\n      if (ApiCalendar.sign){\r\n        //navigator.vibrate([10]);\r\n        const event = {\r\n          summary: this.props.name\r\n        };\r\n        ApiCalendar.updateEvent(event, this.props.id)\r\n        .then(\r\n          this.props.updateDone(this.props.id),\r\n        )\r\n        .catch((error: any) => {\r\n          this.props.errorTimeoutOpen(\"Error 401/404\")\r\n        });\r\n      }\r\n    }    \r\n    if ((name===\"pin\"||name===\"checkOff\")&&this.props.pin===true) {\r\n      if (ApiCalendar.sign){\r\n        //navigator.vibrate([10]);\r\n        if(name===\"checkOff\"){\r\n          const event = {\r\n            summary: \"✔️\" + this.props.name\r\n          };\r\n          ApiCalendar.updateEvent(event, this.props.id)\r\n          .then(\r\n            this.props.updatePin(this.props.id),\r\n            this.props.updateDone(this.props.id),\r\n          )\r\n          .catch((error: any) => {\r\n            this.props.errorTimeoutOpen(\"Error 401/404\")\r\n          });\r\n        } else {\r\n          const event = {\r\n            summary: this.props.name\r\n          };\r\n          ApiCalendar.updateEvent(event, this.props.id)\r\n          .then(\r\n            this.props.updatePin(this.props.id),\r\n          )\r\n          .catch((error: any) => {\r\n            this.props.errorTimeoutOpen(\"Error 401/404\")\r\n          });\r\n        }\r\n      }\r\n    } else if (name===\"pin\"&&(this.props.pin===false&&this.props.done===false)) {\r\n      if (ApiCalendar.sign){\r\n        //navigator.vibrate([30]);\r\n        const event = {\r\n          summary: \"📌\" + this.props.name\r\n        };\r\n        ApiCalendar.updateEvent(event, this.props.id)\r\n        .then(\r\n          this.props.updatePin(this.props.id),\r\n        )\r\n        .catch((error: any) => {\r\n          this.props.errorTimeoutOpen(\"Error 401/404\")\r\n        });\r\n      } \r\n    }\r\n  }\r\n  \r\n  //--------------------------------------------------------------------------------------\r\n  render(){\r\n    var weekTimeLabelMargin=0;\r\n    if((this.props.pinDisplay!==\"none\" && this.props.descriptionDisplay!==\"none\")&&this.props.courseDisplay===\"none\"){\r\n      weekTimeLabelMargin=47;\r\n    } else if(this.props.courseDisplay===\"none\"){\r\n      weekTimeLabelMargin=15;\r\n    }\r\n    var iconBoxWeekRight=\"0px\";\r\n    var iconBoxWeekBottom=\"0px\";\r\n    if(this.props.courseDisplay===\"none\"){\r\n      iconBoxWeekRight=\"-2px\";\r\n      iconBoxWeekBottom=\"-5px\";\r\n    }\r\n    var pinClass = \"pinIconWeek\"\r\n    if(this.props.pin===true){\r\n      pinClass+=\" pinInWeek\"\r\n    } else {\r\n      pinClass+=\" pinOutWeek\"\r\n    }\r\n    var dayStyle;\r\n    if(getSettingsValue(\"useEventColours\")){\r\n      if(!getSettingsValue(\"darkMode\"))\r\n        dayStyle = {backgroundColor:this.props.courseColor+\"90\"};\r\n      else\r\n        dayStyle = {backgroundColor:this.props.courseColor+\"B0\"};\r\n    }\r\n\r\n    var weekEntryClass=\"weekEntry\";\r\n    var weekEntryOpacity=\"1\";\r\n    if(this.props.done===true){\r\n      weekEntryClass=weekEntryClass+\" weekEntryDone\";\r\n      weekEntryOpacity=\"0.5\";\r\n      if(getSettingsValue(\"useEventColours\")){\r\n        if(!getSettingsValue(\"darkMode\"))\r\n          dayStyle = {backgroundColor:this.props.courseColor+\"50\"};\r\n        else\r\n          dayStyle = {backgroundColor:this.props.courseColor+\"50\"};\r\n      }\r\n    }\r\n\r\n    \r\n\r\n    return(\r\n      <div className={weekEntryClass} style={dayStyle}>\r\n        <div onClick={(e) => this.handleItemClick(e, this.props.clickActionCheck)} className=\"weekEventLabel\" style={{\"opacity\":weekEntryOpacity, \"color\":this.props.checkColor, \"textDecoration\":this.props.textStyle, \"transition\":\"all 0.5s\"}}>{determineTaskName(this.props.name)}</div>\r\n        <div onClick={(e) => this.handleItemClick(e, this.props.clickActionCheck)} className=\"weekTimeLabel\" style={{\"marginRight\":weekTimeLabelMargin+\"px\",\"opacity\":weekEntryOpacity, \"transition\":\"all 0.5s\"}}>{this.props.timeStart+this.props.displayTimeEnd}</div>\r\n        <div className=\"courseBubble\" style={{\"display\":this.props.courseDisplay}}><span style={{\"backgroundColor\":this.props.courseColor}}>{this.props.course}</span></div>\r\n        <div className=\"iconBoxWeek fadeIn\" style={{\"right\":iconBoxWeekRight,\"bottom\":iconBoxWeekBottom}}>\r\n          <img onClick={(e) => this.handleItemClick(e, \"pin\")} alt=\"pin\" className={pinClass} src={pinIcon} style={{\"display\":this.props.pinDisplay}}/>\r\n            <OverlayTrigger placement={\"bottom\"} overlay={<Tooltip><div dangerouslySetInnerHTML={{ __html: this.props.description }}></div></Tooltip>}>\r\n              <img onClick={()=>{this.props.toggleEventInfoOpen(true,this.props.task);}} alt=\"descriptions\" className=\"infoIconWeek\" src={infoIcon} style={{\"display\":this.props.descriptionDisplay, \"opacity\":weekEntryOpacity}}/>\r\n            </OverlayTrigger>\r\n        </div>\r\n      </div> \r\n    )\r\n      \r\n  }\r\n}\r\n\r\nclass DayListEntry extends React.Component{\r\n  \r\n  render(){\r\n    return(\r\n      <FlipMove staggerDurationBy={2} easing={\"ease\"} duration={700} staggerDelayBy={getSettingsValue(\"enableAnimations\")===true?55:0} leaveAnimation=\"none\" enterAnimation={getSettingsValue(\"enableAnimations\")===true?\"elevator\":\"fade\"}>\r\n        {this.props.calendarObjects.map(function(task){\r\n          var displayTimeEnd;\r\n          if(task.timeEnd===\"All day\"){\r\n            displayTimeEnd=\"\";\r\n          } else {\r\n            displayTimeEnd=\" - \"+task.timeEnd;\r\n          }\r\n          var courseDisplay=\"none\";\r\n          if(task.course!==\"\"){\r\n            courseDisplay=\"\";\r\n          }\r\n          \r\n          var descriptionDisplay=\"none\";\r\n          if(task.description!==undefined&&task.description!==null){\r\n            descriptionDisplay=\"\";\r\n          }\r\n          var pinDisplay=\"none\";\r\n          if(task.done===false){\r\n            pinDisplay=\"\";\r\n          }\r\n          var textStyle=\"none\";\r\n          var clickActionCheck=\"checkOff\";\r\n          var checkColor=\"\";\r\n          if(task.done===true){\r\n            textStyle = \"line-through\";\r\n            clickActionCheck=\"uncheckOff\";\r\n            // checkColor=\"#777777\";\r\n          }\r\n          if(task.important===true&&this.props.darkMode===true&&task.done===false){\r\n            checkColor=\"#ff8b8b\"\r\n          } else if (task.important===true&&this.props.darkMode===false&&task.done===false){\r\n            checkColor=\"#C85000\"\r\n          }\r\n          if(task.hide===false&&(eventToday(new Date(task.start.dateTime),this.props.dateDisplayStart.addDays(this.props.dayOffset))||eventToday(new Date(task.end.date),this.props.dateDisplayStart.addDays(this.props.dayOffset)))){\r\n            return(\r\n              <DayEntry\r\n                key={task.id}\r\n                toggleEventInfoOpen={this.props.toggleEventInfoOpen}\r\n                task={task}\r\n                checkColor={checkColor}\r\n                textStyle={textStyle}\r\n                name={task.name}\r\n                timeStart={task.timeStart}\r\n                displayTimeEnd={displayTimeEnd}\r\n                courseDisplay={courseDisplay}\r\n                courseColor={task.courseColor}\r\n                course={task.course}\r\n                descriptionDisplay={descriptionDisplay}\r\n                description={task.description}\r\n                id={task.id}\r\n                updateDone={this.props.updateDone}\r\n                calendarIDCurrent={task.calendarID}\r\n                done={task.done}\r\n                clickActionCheck={clickActionCheck}\r\n                pin={task.pin}\r\n                updatePin={this.props.updatePin}\r\n                pinDisplay={pinDisplay}\r\n                important={task.important}\r\n                darkMode={this.props.darkMode}\r\n              />\r\n            )\r\n          }\r\n        }, this)}\r\n      </FlipMove>\r\n    )\r\n  }\r\n}\r\n","import React from 'react';\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nexport default class TimeOutError extends React.Component{\r\n  handleItemClick(event: SyntheticEvent<any>, name: string): void {\r\n    if (name==='refreshPage') {\r\n      window.location.reload();\r\n    } \r\n  }\r\n  render(){\r\n    return(\r\n      <Modal className=\"settingsModal\" show={this.props.errorTimeoutOpen} onHide={(e) => this.handleItemClick(e, \"refreshPage\")} size=\"lg\">\r\n        <Modal.Header>\r\n          <Modal.Title>Connection has timed out</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          {this.props.errorCode}<p>Please <b>reload the page</b>, otherwise changes will not be saved!</p>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"outline-primary\" onClick={(e) => this.handleItemClick(e, \"refreshPage\")}>\r\n            Refresh\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    )\r\n  }\r\n}\r\n","import React from 'react';\r\nimport Form from 'react-bootstrap/Form'\r\nimport '../App.css';\r\nimport { AsyncStorage } from 'AsyncStorage';\r\nimport {getStorage} from \"../functions/DataFunctions\";\r\nimport Button from 'react-bootstrap/Button'\r\nimport CountUp from 'react-countup';\r\n\r\nexport default class Marks extends React.Component{\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleAddCourseInput = this.handleAddCourseInput.bind(this);\r\n    this.handleAddCourse = this.handleAddCourse.bind(this);\r\n    this.handleRemoveCourse = this.handleRemoveCourse.bind(this);\r\n  }\r\n  async componentDidMount() {\r\n    // await AsyncStorage.setItem(\"coursesExtra\",\"[]\")\r\n    this.setState({\r\n      coursesExtra: JSON.parse(await getStorage(\"coursesExtra\",\"[]\")),\r\n    })\r\n  }\r\n  handleAddCourseInput(value){\r\n    this.setState({\r\n      addCourseName: value,\r\n    })\r\n  }\r\n  handleAddCourse() {\r\n    var tempData = this.state.coursesExtra;\r\n    if(global.courses.includes(this.state.addCourseName) || tempData.includes(this.state.addCourseName)){\r\n      return; //course already added automatically\r\n    } else {\r\n      tempData.push(this.state.addCourseName);\r\n      AsyncStorage.setItem(\"coursesExtra\", JSON.stringify(tempData));\r\n      this.setState({\r\n        coursesExtra: tempData,\r\n      })\r\n      //update again\r\n      setTimeout(()=>{\r\n        this.setState({\r\n          coursesExtra: tempData,\r\n        })\r\n      }, 100);\r\n    }\r\n  }\r\n  handleRemoveCourse(course=\"\") {\r\n    var tempData = this.state.coursesExtra;\r\n    if(course===\"\")\r\n      tempData = tempData.filter(e => e !== this.state.addCourseName);\r\n    else\r\n      tempData = tempData.filter(e => e !== course);\r\n    this.setState({\r\n      coursesExtra: tempData\r\n    })\r\n    AsyncStorage.setItem(\"coursesExtra\", JSON.stringify(tempData));\r\n  }\r\n  render(){\r\n    if(this.state===undefined || this.state===null){\r\n      return(<div/>)\r\n    }\r\n    var coursesTotal;\r\n    if(global.courses===undefined){\r\n      global.courses=[];\r\n      coursesTotal=[];\r\n    } else {\r\n      coursesTotal = global.courses.slice(0);\r\n      Array.prototype.push.apply(coursesTotal,this.state.coursesExtra); \r\n      coursesTotal = [...new Set(coursesTotal)] //remove any duplicates that may come up if it was added before\r\n      coursesTotal.sort();\r\n    }\r\n    return(\r\n      <div className=\"marks-content\" style={{paddingBottom:\"100px\"}}>\r\n        <div style={{marginTop: \"10px\", flexDirection:\"row\",display: \"flex\"}}>\r\n          <Form.Control maxLength={50} onChange={(form) => {this.handleAddCourseInput(form.target.value)}} placeholder={\"Course name\"} defaultValue={\"\"} style={{maxWidth:\"490px\", width: \"60%\"}}/>\r\n          <Button variant=\"outline-info\" onClick={()=>{this.handleAddCourse()}}>\r\n            Add course\r\n          </Button>\r\n        </div>\r\n        {coursesTotal.map( (course, index)=>\r\n          {return <MarksCourse \r\n            key={course.name+index.toString()}\r\n            course={course} \r\n            coursesExtra={this.state.coursesExtra} \r\n            handleRemoveCourse={this.handleRemoveCourse}\r\n          />}\r\n        )}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nclass MarksCourse extends React.Component{\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleGoalChange = this.handleGoalChange.bind(this);\r\n    this.handleDataChange = this.handleDataChange.bind(this);\r\n  }\r\n  async componentDidUpdate(prevProps) {\r\n    if(prevProps!==this.props)\r\n      this.setState({\r\n        currentCourseEntries: JSON.parse(await getStorage(\"courseMarks\"+this.props.course,'[[\"\",\"\",\"\"]]')),\r\n        goal: await getStorage(\"courseGoal\"+this.props.course,\"70\"),\r\n        examMark: await getStorage(\"courseExamMark\"+this.props.course,\"70\"),\r\n      })\r\n  }\r\n  handleGoalChange(form, key,) {\r\n    AsyncStorage.setItem(key, form.target.value);\r\n    this.setState({\r\n      goal:form.target.value,\r\n    })\r\n  }\r\n  handleExamMarkChange(form, key,) {\r\n    AsyncStorage.setItem(key, form.target.value);\r\n    this.setState({\r\n      examMark:form.target.value,\r\n    })\r\n  }\r\n  handleDataChange(index1,index2,value) {\r\n    var tempData = this.state.currentCourseEntries;\r\n    tempData[index1][index2]=value;\r\n    this.setState({\r\n      currentCourseEntries: tempData\r\n    })\r\n    AsyncStorage.setItem(\"courseMarks\"+this.props.course, JSON.stringify(tempData));\r\n  }\r\n  addEntry(){\r\n    var tempData = this.state.currentCourseEntries;\r\n    tempData.push([\"\",\"\",\"\"]);\r\n    this.setState({\r\n      currentCourseEntries: tempData\r\n    })\r\n  }\r\n  removeEntry(){\r\n    var tempData = this.state.currentCourseEntries;\r\n    tempData.pop();\r\n    this.setState({\r\n      currentCourseEntries: tempData\r\n    })\r\n  }\r\n  render(){\r\n    if(this.state===undefined || this.state===null){\r\n      return(<div/>)\r\n    }\r\n\r\n    var examPercentage = 100;\r\n    var totalCurrentMark = 0;\r\n    var totalPercentageSubmitted = 0;\r\n    var required = 0;\r\n    var finalMark = 0;\r\n    var currentWeight;\r\n    var currentMark;\r\n\r\n    var fail = false;\r\n    for(var x = 0; x<this.state.currentCourseEntries.length; x++){\r\n      currentWeight = this.state.currentCourseEntries[x][1];\r\n      currentMark = this.state.currentCourseEntries[x][2];\r\n      fail = true;\r\n      if((/^\\d+$/.test(currentWeight) || currentWeight === \"\" )&& (/^\\d+$/.test(currentMark ) || currentMark === \"\")){\r\n        fail = false;\r\n      } else {\r\n        break;\r\n      }\r\n    }\r\n    if(!fail){\r\n      for(var i = 0; i<this.state.currentCourseEntries.length; i++){\r\n        currentWeight = this.state.currentCourseEntries[i][1];\r\n        currentMark = this.state.currentCourseEntries[i][2];\r\n        if(currentWeight!==\"\"){\r\n          examPercentage = examPercentage - parseFloat(this.state.currentCourseEntries[i][1]);\r\n        }\r\n        if(currentWeight!==\"\" && currentMark!==\"\"){\r\n          totalPercentageSubmitted = totalPercentageSubmitted + parseFloat(this.state.currentCourseEntries[i][1]);\r\n          totalCurrentMark = currentWeight/100 * currentMark + totalCurrentMark;\r\n        }\r\n      }\r\n      if(totalPercentageSubmitted!==0){\r\n        totalCurrentMark = totalCurrentMark*100 / totalPercentageSubmitted;\r\n      }\r\n\r\n      var goal = this.state.goal;\r\n      if(this.state.goal===\"\"){\r\n        goal = 70;\r\n      }\r\n      if(Math.round(examPercentage)===0){\r\n        required = 0;\r\n      } else {\r\n        required = ((parseFloat(goal) - totalCurrentMark * (1 - examPercentage/100)) / (examPercentage/100));\r\n        required = Math.round((required + Number.EPSILON) * 100) / 100\r\n      }\r\n      \r\n      finalMark = totalCurrentMark*(totalPercentageSubmitted/100) + this.state.examMark*(examPercentage/100)\r\n      \r\n      finalMark = Math.round((finalMark + Number.EPSILON) * 100) / 100\r\n      totalCurrentMark = Math.round((totalCurrentMark + Number.EPSILON) * 100) / 100\r\n      examPercentage = Math.round((examPercentage + Number.EPSILON) * 100) / 100\r\n    }\r\n    \r\n    var extraCourseButton = <div/>\r\n    if(this.props.coursesExtra.includes(this.props.course)){\r\n      extraCourseButton = <Button variant=\"outline-danger\" onClick={()=>{this.props.handleRemoveCourse(this.props.course);}}>\r\n        Remove course\r\n      </Button>\r\n    }\r\n    return(\r\n      <Form style={{paddingTop: \"30px\"}}>\r\n        <Form.Group>\r\n          <div className=\"courseLabel\">{this.props.course}</div>\r\n          {this.state.currentCourseEntries.map( (entry, index)=>\r\n            {return <MarksRow key={entry[0]+index.toString()} entry={entry} index={index} handleDataChange={this.handleDataChange}/>}\r\n          )}\r\n          <div style={{height:\"5px\"}}/>\r\n          <Button style={{marginRight:\"5px\"}} variant=\"outline-info\" onClick={()=>{this.addEntry()}}>\r\n            Add assessment\r\n          </Button>\r\n          <Button style={{marginRight:\"5px\"}} variant=\"outline-secondary\" onClick={()=>{this.removeEntry()}}>\r\n            Remove assessment\r\n          </Button>\r\n          {extraCourseButton}\r\n          <table style={{maxWidth:\"550px\",width:\"100%\",}}>\r\n          <tr>\r\n            <th>\r\n              <div style={{marginTop: \"10px\", flexDirection:\"row\",display: \"flex\"}}>\r\n                <div className=\"markLabel\">{\"Exam:\"}</div>\r\n                <CountUp className=\"markLabelBold\" start={0} end={examPercentage} duration={1} preserveValue redraw/>\r\n                <div className=\"markLabelBold\">%</div>\r\n              </div>\r\n            </th>\r\n            <th>\r\n              <div style={{marginTop: \"10px\", flexDirection:\"row\",display: \"flex\"}}>\r\n                <div className=\"markLabel\">{\"Current:\"}</div>\r\n                <CountUp className=\"markLabelBold\" start={0} end={totalCurrentMark} duration={1} preserveValue redraw/>\r\n                <div className=\"markLabelBold\">%</div>\r\n              </div>\r\n            </th>\r\n          </tr>\r\n          <tr>\r\n            <th>\r\n              <div style={{marginTop: \"10px\", flexDirection:\"row\",display: \"flex\", alignItems:\"center\"}}>\r\n                <div className=\"markLabel\">{\"Goal:\"}</div>\r\n                <Form.Control maxLength={5} onChange={(form) => {this.handleGoalChange(form,\"courseGoal\"+this.props.course)}} placeholder={\"70\"} value={this.state.goal} style={{width:\"55px\", marginLeft:\"5px\",}}/>\r\n                <div className=\"markLabel\">{\"%\"}</div>\r\n              </div>\r\n            </th>\r\n            <th>\r\n              <div style={{marginTop: \"10px\", flexDirection:\"row\",display: \"flex\"}}>\r\n                <div className=\"markLabel\">{\"Exam required:\"}</div>\r\n                <CountUp className=\"markLabelBold\" start={0} end={required} duration={1} preserveValue redraw/>\r\n                <div className=\"markLabelBold\">%</div>\r\n              </div>\r\n            </th>\r\n          </tr>\r\n          <tr>\r\n            <th>\r\n              <div style={{marginTop: \"10px\", flexDirection:\"row\",display: \"flex\", alignItems:\"center\"}}>\r\n                <div className=\"markLabel\">{\"Exam mark:\"}</div>\r\n                <Form.Control maxLength={5} onChange={(form) => {this.handleExamMarkChange(form,\"courseExamMark\"+this.props.course)}} placeholder={\"70\"} value={this.state.examMark} style={{width:\"55px\", marginLeft:\"5px\",}}/>\r\n                <div className=\"markLabel\">{\"%\"}</div>\r\n              </div>\r\n            </th>\r\n            <th>\r\n              <div style={{marginTop: \"10px\", flexDirection:\"row\",display: \"flex\"}}>\r\n                <div className=\"markLabel\">{\"Final mark:\"}</div>\r\n                <CountUp className=\"markLabelBold\" start={0} end={finalMark} duration={1} preserveValue redraw/>\r\n                <div className=\"markLabelBold\">%</div>\r\n              </div>\r\n            </th>\r\n          </tr>\r\n          </table>\r\n        </Form.Group>\r\n      </Form>\r\n    )\r\n  }\r\n}\r\n\r\nclass MarksRow extends React.Component{\r\n  render(){\r\n    return(\r\n      <>\r\n        <div style={{flexDirection:\"row\",display: \"flex\"}}>\r\n          <Form.Control onChange={(form) => {this.props.handleDataChange(this.props.index,0,form.target.value)}} placeholder={\"Assessment name\"} value={this.props.entry[0]} style={{maxWidth: \"400px\", width:\"60%\",}}/>\r\n          <Form.Control maxLength={5} onChange={(form) => {this.props.handleDataChange(this.props.index,1,form.target.value)}} placeholder={\"Worth (%)\"} value={this.props.entry[1]} style={{maxWidth: \"100px\", width:\"20%\",}}/>\r\n          <Form.Control maxLength={5} onChange={(form) => {this.props.handleDataChange(this.props.index,2,form.target.value)}} placeholder={\"Mark (%)\"} value={this.props.entry[2]} style={{maxWidth: \"100px\", width:\"20%\",}}/>\r\n        </div>\r\n        <div style={{height:\"5px\"}}/>\r\n      </>\r\n    )\r\n  }\r\n}","import React from 'react';\r\nimport { AsyncStorage } from 'AsyncStorage';\r\nimport Button from 'react-bootstrap/Button'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport ApiCalendar from 'react-google-calendar-api';\r\nimport '../App.css';\r\nimport Header1 from './Header1.js'\r\nimport ButtonStyle from './ButtonStyle'\r\n\r\nexport default class HomePage extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state={welcomeOpenState: true}\r\n  }\r\n  render(){\r\n    return(\r\n      <div className=\"homeScreen\">\r\n      <div style={{height: \"20vh\"}}/>\r\n      <div className=\"homeHeader1\">\r\n        Welcome to Calendar Tasks\r\n      </div>\r\n      <ButtonStyle label={\"Get Started\"}/>\r\n      </div>\r\n    )\r\n  }\r\n}","export default __webpack_public_path__ + \"static/media/Step1.85b82071.png\";","export default __webpack_public_path__ + \"static/media/Step2.1e042968.png\";","export default __webpack_public_path__ + \"static/media/Step3.4218b806.png\";","export default __webpack_public_path__ + \"static/media/Step4.45b21577.png\";","import React from 'react';\r\nimport { AsyncStorage } from 'AsyncStorage';\r\nimport Button from 'react-bootstrap/Button'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport ApiCalendar from 'react-google-calendar-api';\r\nimport '../App.css';\r\nimport step1 from '../assets/Step1.png';\r\nimport step2 from '../assets/Step2.png';\r\nimport step3 from '../assets/Step3.png';\r\nimport step4 from '../assets/Step4.png';\r\n\r\nexport default class LoginMessageGuide extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n  }\r\n  render(){\r\n    return(\r\n      <Modal className=\"settingsModal\" show={this.props.show} onHide={(e) => this.props.onClose()} size=\"lg\">\r\n        <Modal.Header closeButton>\r\n          <div className=\"header1\" style={{\"marginBottom\":\"0px\"}}>Login Information</div>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <p style={{marginTop:\"10px\"}}>Hello! Please follow the instructions to login. This application is not yet verified by Google and will remain this way in open testing. Note: There is a limit of 100 total users for the lifetime of this project. If you want to learn how to host a local copy/view the source code visit <a href=\"https://github.com/jameskokoska/GooglyCalendar\">https://github.com/jameskokoska/GooglyCalendar</a>. You may continue without logging in, however you will lose the majority of functionality.</p>\r\n          \r\n          <div className=\"fadeIn\" style={{justifyContent:\"center\",display:\"flex\",flexDirection:\"row\",flexWrap:\"wrap\",marginHorizontal: \"10px\"}}>\r\n            <div style={{margin: \"6px\"}}>\r\n              <img src={step1} style={{width:\"370px\", borderRadius:\"10px\"}}/>\r\n              <p style={{textAlign:\"center\"}}>Step 1: Click <i>Advanced</i></p>\r\n            </div>\r\n            <div style={{margin: \"6px\"}}>\r\n              <img src={step2} style={{width:\"370px\", borderRadius:\"10px\"}}/>\r\n              <p style={{textAlign:\"center\"}}>Step 2: Click <i>Go to jameskokoska.github.io (unsafe)</i></p>\r\n            </div>\r\n            <div style={{margin: \"6px\"}}>\r\n              <img src={step3} style={{width:\"370px\", borderRadius:\"10px\"}}/>\r\n              <p style={{textAlign:\"center\"}}>Step 3: Click <i>Allow</i> on the popup</p>\r\n            </div>\r\n            <div style={{margin: \"6px\"}}>\r\n              <img src={step4} style={{width:\"370px\", borderRadius:\"10px\"}}/>\r\n              <p style={{textAlign:\"center\"}}>Step 4: Click <i>Allow</i></p>\r\n            </div>\r\n          </div>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={() => this.props.onClose()} style={{'marginRight':\"15px\"}}>\r\n            Continue without login\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    )\r\n  }\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export default __webpack_public_path__ + \"static/media/check-solid.5dcf9568.svg\";","import React from 'react';\r\nimport pinIcon from \"../assets/thumbtack-solid.svg\";\r\nimport checkIcon from \"../assets/check-solid.svg\"\r\nimport FlipMove from 'react-flip-move';\r\nimport ApiCalendar from 'react-google-calendar-api';\r\nimport {eventToday,} from \"../functions/DateFunctions\"\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\r\nimport Tooltip from 'react-bootstrap/Tooltip'\r\nimport infoIcon from \"../assets/info-circle-solid.svg\"\r\nimport '../App.css';\r\nimport {getSettingsValue} from \"./Settings\"\r\n\r\nexport default class TaskList extends React.Component {\r\n  render() {\r\n    return(\r\n      <div className=\"tasks\">\r\n        <TaskTable toggleEventInfoOpen={this.props.toggleEventInfoOpen} calendarObjects={this.props.calendarObjects} courseColors={this.props.courseColors} hoursBefore={this.props.hoursBefore} nextWeekShow={this.props.nextWeekShow} sortCalendarObjects={this.props.sortCalendarObjects} updateDone={this.props.updateDone} errorTimeoutOpen={this.props.errorTimeoutOpen} updatePin={this.props.updatePin} darkMode={this.props.darkMode}/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nclass TaskTable extends React.Component{\r\n  render() {\r\n    return(\r\n      <div className=\"taskTable\">\r\n        <table className=\"taskList\">\r\n          <thead>\r\n            <tr className=\"fadeIn\">\r\n              <th className=\"pin header3\"><div className=\"pinHeader\"><img alt=\"pin pinHeader\" src={pinIcon}/></div></th>\r\n              <th className=\"check header3\" onClick={e => this.props.sortCalendarObjects(\"sortCheck\", this.props.calendarObjects)}><div className=\"hoverSort checkHeader\"><img alt=\"check\" src={checkIcon}/></div></th>\r\n              <th className=\"task header3\" onClick={e => this.props.sortCalendarObjects(\"sortName\", this.props.calendarObjects)}><div className=\"hoverSort\">Task</div></th>\r\n              <th className=\"date header3\" onClick={e => this.props.sortCalendarObjects(\"sortDate\", this.props.calendarObjects)}><div className=\"hoverSort\">Date</div></th>\r\n              <th className=\"time header3\" onClick={e => this.props.sortCalendarObjects(\"sortDate\", this.props.calendarObjects)}><div className=\"hoverSort\">Time</div></th>\r\n              <th className=\"course header3\" onClick={e => this.props.sortCalendarObjects(\"sortCourse\", this.props.calendarObjects)}><div className=\"hoverSort\">Course</div></th>\r\n            </tr>\r\n          </thead>\r\n          <FlipMove staggerDurationBy={getSettingsValue(\"enableAnimations\")===true?25:0} className=\"fadeIn\" typeName=\"tbody\" easing={\"ease\"} duration={700} leaveAnimation=\"none\" staggerDelayBy={0} enterAnimation=\"fade\">\r\n            {this.props.calendarObjects.map(function(task){\r\n              if(task.hide===false && task.weekLimitHide===false){\r\n                return(<TaskEntry\r\n                key={task.id}\r\n                toggleEventInfoOpen={this.props.toggleEventInfoOpen}\r\n                task={task}\r\n                name={task.name}\r\n                date={task.date}\r\n                timeStart={task.timeStart}\r\n                timeEnd={task.timeEnd}\r\n                course={task.course}\r\n                courseColor={task.courseColor}\r\n                done={task.done}\r\n                id={task.id}\r\n                hoursBefore={this.props.hoursBefore}\r\n                nextWeekShow={this.props.nextWeekShow}\r\n                updateDone={this.props.updateDone}\r\n                calendarIDCurrent={task.calendarID}\r\n                description={task.description}\r\n                dateObjEnd={task.dateObjEnd}\r\n                errorTimeoutOpen={this.props.errorTimeoutOpen}\r\n                updatePin={this.props.updatePin}\r\n                pin={task.pin}\r\n                important={task.important}\r\n                darkMode={this.props.darkMode}\r\n                />)\r\n              }\r\n            }, this)}\r\n          </FlipMove>\r\n        </table>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nclass TaskEntry extends React.Component{\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleItemClick = this.handleItemClick.bind(this);\r\n    this.state ={checked: this.props.done};\r\n  }\r\n\r\n  handleItemClick(event: SyntheticEvent<any>, name: string): void {\r\n    if(this.props.calendarIDCurrent===\"\")\r\n      ApiCalendar.setCalendar(\"primary\")\r\n    else \r\n      ApiCalendar.setCalendar(this.props.calendarIDCurrent)\r\n    if (name===\"checkOff\"&&this.props.pin===false) {\r\n      if (ApiCalendar.sign){\r\n        //navigator.vibrate([30]);\r\n        const event = {\r\n          summary: \"✔️\" + this.props.name\r\n        };\r\n        ApiCalendar.updateEvent(event, this.props.id)\r\n        .then(\r\n          this.props.updateDone(this.props.id),\r\n        )\r\n        .catch((error: any) => {\r\n          this.props.errorTimeoutOpen(\"Error 401/404\")\r\n        });\r\n      }\r\n    } else if (name===\"uncheckOff\") {\r\n      if (ApiCalendar.sign){\r\n        //navigator.vibrate([10]);\r\n        const event = {\r\n          summary: this.props.name\r\n        };\r\n        ApiCalendar.updateEvent(event, this.props.id)\r\n        .then(\r\n          this.props.updateDone(this.props.id),\r\n        )\r\n        .catch((error: any) => {\r\n          this.props.errorTimeoutOpen(\"Error 401/404\")\r\n        });\r\n      }\r\n    }    \r\n    if ((name===\"pin\"||name===\"checkOff\")&&this.props.pin===true) {\r\n      if (ApiCalendar.sign){\r\n        //navigator.vibrate([10]);\r\n        if(name===\"checkOff\"){\r\n          const event = {\r\n            summary: \"✔️\" + this.props.name\r\n          };\r\n          ApiCalendar.updateEvent(event, this.props.id)\r\n          .then(\r\n            this.props.updatePin(this.props.id),\r\n            this.props.updateDone(this.props.id),\r\n          )\r\n          .catch((error: any) => {\r\n            this.props.errorTimeoutOpen(\"Error 401/404\")\r\n          });\r\n        } else {\r\n          const event = {\r\n            summary: this.props.name\r\n          };\r\n          ApiCalendar.updateEvent(event, this.props.id)\r\n          .then(\r\n            this.props.updatePin(this.props.id),\r\n          )\r\n          .catch((error: any) => {\r\n            this.props.errorTimeoutOpen(\"Error 401/404\")\r\n          });\r\n        }\r\n      }\r\n    } else if (name===\"pin\"&&(this.props.pin===false&&this.props.done===false)) {\r\n      if (ApiCalendar.sign){\r\n        //navigator.vibrate([30]);\r\n        const event = {\r\n          summary: \"📌\" + this.props.name\r\n        };\r\n        ApiCalendar.updateEvent(event, this.props.id)\r\n        .then(\r\n          this.props.updatePin(this.props.id),\r\n        )\r\n        .catch((error: any) => {\r\n          this.props.errorTimeoutOpen(\"Error 401/404\")\r\n        });\r\n      } \r\n    }\r\n  }\r\n  \r\n  render(){\r\n    var textStyle=\"none\";\r\n    var checkClass=\"checkImg\";\r\n    var pinClass=\"pinImg\";\r\n    var checkColor=\"\";\r\n    var clickActionCheck=\"checkOff\";\r\n    var checkMarkBG=\"#64b5f6\";\r\n    var courseClass=\"course\";\r\n    var pinDisplay=\"pin\";\r\n    if(this.props.done===true){\r\n      textStyle = \"line-through\";\r\n      checkClass+=\" checkIn\";\r\n      checkColor=\"#777777\";\r\n      clickActionCheck=\"uncheckOff\";\r\n      pinDisplay+=\" pinNone\";\r\n    } else {\r\n      checkClass+=\" checkOut\";\r\n    }\r\n\r\n    if(this.props.pin===true){\r\n      pinClass+=\" pinIn\"\r\n    } else {\r\n      pinClass+=\" pinOut\"\r\n    }\r\n\r\n    if(this.props.courseColor!==\"\"){\r\n      checkMarkBG=this.props.courseColor;\r\n      courseClass=\"course\";\r\n    } else {\r\n      checkMarkBG=\"#64b5f6\";\r\n    }\r\n\r\n    if(this.props.course===\"\"){\r\n      courseClass+=\" courseNone\";\r\n    }\r\n\r\n    var descriptionDisplay=\"none\";\r\n    var marginNameFix=\"\";\r\n    if(this.props.description!==undefined&&this.props.description!==null){\r\n      descriptionDisplay=\"\";\r\n      marginNameFix=\"marginNameFix\"\r\n    }\r\n    \r\n    var dateColor;\r\n    var dateFontWeight;\r\n    if (this.props.timeEnd===\"All day\" && eventToday(this.props.dateObjEnd)===true){\r\n      dateColor=\"\";\r\n      dateFontWeight=\"unset\";\r\n    } else if(this.props.dateObjEnd < Date.now()){\r\n      dateColor=\"#c53f3f\";\r\n      dateFontWeight=\"bold\";\r\n    } else {\r\n      dateColor=\"\";\r\n      dateFontWeight=\"unset\";\r\n    }\r\n\r\n    var displayTimeEnd;\r\n    if(this.props.timeEnd===\"All day\"){\r\n      displayTimeEnd=\"\";\r\n    } else {\r\n      displayTimeEnd=\" - \"+this.props.timeEnd;\r\n    }\r\n\r\n    if(this.props.important===true&&this.props.darkMode===true&&this.props.done===false){\r\n      checkColor=\"#ff8b8b\"\r\n    } else if (this.props.important===true&&this.props.darkMode===false&&this.props.done===false){\r\n      checkColor=\"#C85000\"\r\n    }\r\n    return(\r\n      <tr className=\"taskEntry\">\r\n        <td className={pinDisplay} onClick={(e) => this.handleItemClick(e, \"pin\")}><div className=\"fadeIn\"><img alt=\"check\" className={pinClass} src={pinIcon}/></div></td>\r\n        <td style={{\"backgroundColor\":checkMarkBG}} className=\"check\" onClick={(e) => this.handleItemClick(e, clickActionCheck)}><div className=\"fadeIn\"><img alt=\"check\" className={checkClass} src={checkIcon}/></div></td>\r\n        <td className=\"task\" style={{\"color\":checkColor, \"transition\":\"all 0.5s\", \"position\":\"relative\"}}>\r\n          <div className={marginNameFix} style={{\"textDecoration\":textStyle}}>{this.props.name}</div>\r\n          <OverlayTrigger placement={\"bottom\"} overlay={<Tooltip><div dangerouslySetInnerHTML={{ __html: this.props.description }}></div></Tooltip>}>\r\n            <img onClick={()=>{this.props.toggleEventInfoOpen(true,this.props.task);}} alt=\"descriptions\" className=\"infoIcon\" src={infoIcon} style={{\"display\":descriptionDisplay}}/>\r\n          </OverlayTrigger>\r\n        </td>\r\n        <td className=\"date\" style={{color:dateColor,fontWeight:dateFontWeight}}>{this.props.date}</td>\r\n        <td className=\"time\">{this.props.timeStart}{displayTimeEnd}</td>\r\n        <td className={courseClass}>{this.props.course}</td>\r\n      </tr>\r\n    )\r\n  }\r\n}","export default __webpack_public_path__ + \"static/media/sync-alt-solid.9f63d4a4.svg\";","import React from 'react';\r\nimport Toast from 'react-bootstrap/Toast'\r\nimport refreshIcon from \"../assets/sync-alt-solid.svg\"\r\n\r\nexport default class Refresh extends React.Component{\r\n  constructor(props) {\r\n    super(props);\r\n    this.state ={show: false, resetDisable:false};\r\n  }\r\n  handleItemClick(event: SyntheticEvent<any>, name: string): void {\r\n    if (name==='refresh') {\r\n      this.props.resetCalendarObjects();\r\n      if(!this.state.resetDisable){\r\n        this.setState({show: true})\r\n      }\r\n      this.setState({resetDisable:true})\r\n      setTimeout(function () {\r\n          this.setState({resetDisable:false})\r\n      }.bind(this), 1000);\r\n    } \r\n  }\r\n  render(){\r\n    var message=\"\";    \r\n    if(!this.props.signStatus){\r\n      message=\"You are not signed in!\"\r\n    } else {\r\n      message=\"Refreshed!\"\r\n    }\r\n    var refreshIconClass=\"refreshIcon\";\r\n    var opacity=1;\r\n    if(this.state.resetDisable){\r\n      refreshIconClass+= \" refreshIconSpin\";\r\n      opacity=0.5;\r\n    }\r\n    return(\r\n      <div>\r\n        <Toast onClose={() => this.setState({show: false})} show={this.state.show} delay={1500} autohide style={{\"position\":\"fixed\",\"bottom\":\"0%\",\"left\":\"1%\"}}>\r\n          <Toast.Header>\r\n            <strong className=\"mr-auto\">{message}</strong>\r\n          </Toast.Header>\r\n        </Toast>\r\n        <img style={{\"opacity\":opacity, \"transition\":\"all 0.5s\"}} alt=\"refresh\" onClick={(e) => this.handleItemClick(e, \"refresh\")} src={refreshIcon} className={refreshIconClass}/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","//import {eventToday, getDisplayDayFull, getDisplayDay, getDisplayMonth, getDisplayMonthFull, displayDate, displayTime} from \"./DateFunctions\"\r\n\r\nexport function eventToday(date,today=new Date()){\r\n  if(date.getDay()===today.getDay() && date.getDate()===today.getDate() && date.getMonth()===today.getMonth() && date.getYear()===today.getYear()){\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n}\r\n\r\nexport function getDisplayDayFull(date){\r\n  var weekDay=\"\";\r\n  if(date.getDay()===0){\r\n    weekDay=\"Sunday\";\r\n  } else if (date.getDay()===1){\r\n    weekDay=\"Monday\";\r\n  } else if (date.getDay()===2){\r\n    weekDay=\"Tuesday\";\r\n  } else if (date.getDay()===3){\r\n    weekDay=\"Wednesday\";\r\n  } else if (date.getDay()===4){\r\n    weekDay=\"Thursday\";\r\n  } else if (date.getDay()===5){\r\n    weekDay=\"Friday\";\r\n  } else if (date.getDay()===6){\r\n    weekDay=\"Saturday\";\r\n  }\r\n  return weekDay;\r\n}\r\n\r\nexport function getDisplayDay(date){\r\n  var weekDay=\"\";\r\n  if(date.getDay()===0){\r\n    weekDay=\"Sun.\";\r\n  } else if (date.getDay()===1){\r\n    weekDay=\"Mon.\";\r\n  } else if (date.getDay()===2){\r\n    weekDay=\"Tues.\";\r\n  } else if (date.getDay()===3){\r\n    weekDay=\"Wed.\";\r\n  } else if (date.getDay()===4){\r\n    weekDay=\"Thurs.\";\r\n  } else if (date.getDay()===5){\r\n    weekDay=\"Fri.\";\r\n  } else if (date.getDay()===6){\r\n    weekDay=\"Sat.\";\r\n  }\r\n  return weekDay;\r\n}\r\n\r\nexport function getDisplayMonth(date){\r\n  var month=\"\";\r\n  if(date.getMonth()===0){\r\n    month=\"Jan.\"\r\n  } else if (date.getMonth()===1){\r\n    month=\"Feb.\"\r\n  } else if (date.getMonth()===2){\r\n    month=\"Mar.\"\r\n  } else if (date.getMonth()===3){\r\n    month=\"Apr.\"\r\n  } else if (date.getMonth()===4){\r\n    month=\"May\"\r\n  } else if (date.getMonth()===5){\r\n    month=\"June\"\r\n  } else if (date.getMonth()===6){\r\n    month=\"July\"\r\n  } else if (date.getMonth()===7){\r\n    month=\"Aug.\"\r\n  } else if (date.getMonth()===8){\r\n    month=\"Sept.\"\r\n  } else if (date.getMonth()===9){\r\n    month=\"Oct.\"\r\n  } else if (date.getMonth()===10){\r\n    month=\"Nov.\"\r\n  } else if (date.getMonth()===11){\r\n    month=\"Dec.\"\r\n  }\r\n  return month;\r\n}\r\n\r\nexport function getDisplayMonthFull(date){\r\n  var month=\"\";\r\n  if(date.getMonth()===0){\r\n    month=\"January\"\r\n  } else if (date.getMonth()===1){\r\n    month=\"February\"\r\n  } else if (date.getMonth()===2){\r\n    month=\"March\"\r\n  } else if (date.getMonth()===3){\r\n    month=\"April\"\r\n  } else if (date.getMonth()===4){\r\n    month=\"May\"\r\n  } else if (date.getMonth()===5){\r\n    month=\"June\"\r\n  } else if (date.getMonth()===6){\r\n    month=\"July\"\r\n  } else if (date.getMonth()===7){\r\n    month=\"August\"\r\n  } else if (date.getMonth()===8){\r\n    month=\"September\"\r\n  } else if (date.getMonth()===9){\r\n    month=\"October\"\r\n  } else if (date.getMonth()===10){\r\n    month=\"November\"\r\n  } else if (date.getMonth()===11){\r\n    month=\"December\"\r\n  }\r\n  return month;\r\n}\r\n\r\nexport function displayDate(date){\r\n  if(isNaN(date.getMonth())&&isNaN(date.getDay())&&isNaN(date.getDate())){\r\n    return \"All day\"\r\n  } else {\r\n    var output=\"\";\r\n    var month=getDisplayMonth(date);\r\n    var weekDay = getDisplayDayFull(date)\r\n    output=weekDay+\" \"+month+\" \" + date.getDate()\r\n    return output;\r\n  }\r\n}\r\n\r\nexport function displayTime(date){\r\n  if(isNaN(date.getHours())&&isNaN(date.getMinutes())){\r\n    return \"All day\"\r\n  } else {\r\n    var output = \"Undefined\";\r\n    var minutes = date.getMinutes();\r\n    if(minutes<=9){\r\n      minutes=\"0\"+minutes;\r\n    }\r\n    var hours = date.getHours();\r\n    var meridian;\r\n    if(hours>12){\r\n      hours=hours-12;\r\n      meridian=\"pm\";\r\n    } else {\r\n      meridian=\"am\"\r\n    }\r\n\r\n    if(minutes===\"00\"){\r\n      output = hours+\" \"+meridian;\r\n    } else {\r\n      output = hours+\":\"+minutes+\" \"+meridian;\r\n    }\r\n    return output;\r\n  } \r\n}","import React from 'react';\r\nimport '../App.css';\r\n\r\nexport default function ButtonStyle(props){\r\n  return(\r\n    <div className=\"button\">\r\n      {props.label}\r\n    </div>\r\n  )\r\n}","export default __webpack_public_path__ + \"static/media/thumbtack-solid.69b06c10.svg\";","export default __webpack_public_path__ + \"static/media/info-circle-solid.92d3ccd5.svg\";"],"sourceRoot":""}
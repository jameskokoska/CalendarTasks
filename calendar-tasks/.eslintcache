[{"F:\\Documents\\Websites\\CalendarTasks\\calendar-tasks\\src\\index.js":"1","F:\\Documents\\Websites\\CalendarTasks\\calendar-tasks\\src\\App.js":"2","F:\\Documents\\Websites\\CalendarTasks\\calendar-tasks\\src\\reportWebVitals.js":"3","F:\\Documents\\Websites\\CalendarTasks\\calendar-tasks\\src\\serviceWorker.js":"4","F:\\Documents\\Websites\\CalendarTasks\\calendar-tasks\\src\\components\\Settings.js":"5","F:\\Documents\\Websites\\CalendarTasks\\calendar-tasks\\src\\components\\WelcomeMessage.js":"6","F:\\Documents\\Websites\\CalendarTasks\\calendar-tasks\\src\\components\\EventInfoMessage.js":"7","F:\\Documents\\Websites\\CalendarTasks\\calendar-tasks\\src\\components\\TaskList.js":"8","F:\\Documents\\Websites\\CalendarTasks\\calendar-tasks\\src\\components\\Pomo.js":"9","F:\\Documents\\Websites\\CalendarTasks\\calendar-tasks\\src\\components\\Refresh.js":"10","F:\\Documents\\Websites\\CalendarTasks\\calendar-tasks\\src\\components\\Header1.js":"11","F:\\Documents\\Websites\\CalendarTasks\\calendar-tasks\\src\\components\\Marks.js":"12","F:\\Documents\\Websites\\CalendarTasks\\calendar-tasks\\src\\functions\\DataFunctions.js":"13","F:\\Documents\\Websites\\CalendarTasks\\calendar-tasks\\src\\components\\DayView.js":"14","F:\\Documents\\Websites\\CalendarTasks\\calendar-tasks\\src\\components\\TimeOutError.js":"15","F:\\Documents\\Websites\\CalendarTasks\\calendar-tasks\\src\\functions\\DateFunctions.js":"16","F:\\Documents\\Websites\\CalendarTasks\\calendar-tasks\\src\\components\\ButtonStyle.js":"17","F:\\Documents\\Websites\\CalendarTasks\\calendar-tasks\\src\\components\\ColorPicker.js":"18"},{"size":520,"mtime":1612310412067,"results":"19","hashOfConfig":"20"},{"size":33227,"mtime":1612311463621,"results":"21","hashOfConfig":"20"},{"size":362,"mtime":499162500000,"results":"22","hashOfConfig":"23"},{"size":5227,"mtime":1612310412069,"results":"24","hashOfConfig":"20"},{"size":20983,"mtime":1612310412044,"results":"25","hashOfConfig":"20"},{"size":2879,"mtime":1612310412045,"results":"26","hashOfConfig":"20"},{"size":1900,"mtime":1612310412042,"results":"27","hashOfConfig":"20"},{"size":12223,"mtime":1612310412045,"results":"28","hashOfConfig":"20"},{"size":6811,"mtime":1612310412043,"results":"29","hashOfConfig":"20"},{"size":1527,"mtime":1612310412044,"results":"30","hashOfConfig":"20"},{"size":176,"mtime":1612310412042,"results":"31","hashOfConfig":"20"},{"size":11464,"mtime":1612310412043,"results":"32","hashOfConfig":"20"},{"size":6667,"mtime":1612310412066,"results":"33","hashOfConfig":"20"},{"size":16072,"mtime":1612310412042,"results":"34","hashOfConfig":"20"},{"size":982,"mtime":1612310412045,"results":"35","hashOfConfig":"20"},{"size":3741,"mtime":1612310412066,"results":"36","hashOfConfig":"20"},{"size":177,"mtime":1612310412041,"results":"37","hashOfConfig":"20"},{"size":757,"mtime":1612310412041,"results":"38","hashOfConfig":"20"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},"1sts2e2",{"filePath":"42","messages":"43","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"41"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1lix35",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"41"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"41"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"41"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\Documents\\Websites\\CalendarTasks\\calendar-tasks\\src\\index.js",[],["80","81"],"F:\\Documents\\Websites\\CalendarTasks\\calendar-tasks\\src\\App.js",["82","83","84","85","86","87","88","89"],"import React, {ReactNode, SyntheticEvent} from 'react';\r\nimport { AsyncStorage } from 'AsyncStorage';\r\nimport ApiCalendar from 'react-google-calendar-api';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Tabs from 'react-bootstrap/Tabs'\r\nimport Tab from 'react-bootstrap/Tabs'\r\nimport './App.css';\r\n// import { makeStyles } from '@material-ui/core/styles';\r\n// import TextField from '@material-ui/core/TextField';\r\n// import { createMuiTheme } from '@material-ui/core/styles';\r\n// import { ThemeProvider } from '@material-ui/styles';\r\nimport Toast from 'react-bootstrap/Toast'\r\n\r\nimport WelcomeMessage from \"./components/WelcomeMessage\"\r\nimport EventInfoMessage from \"./components/EventInfoMessage\"\r\nimport Settings, {getSettingsValue, settingsOptions, settingsOptionsColour} from \"./components/Settings\"\r\nimport TaskList from \"./components/TaskList\"\r\nimport {getDisplayDayFull, getDisplayDay, getDisplayMonth, getDisplayMonthFull, displayDate, displayTime} from \"./functions/DateFunctions\"\r\nimport Pomo from \"./components/Pomo\"\r\nimport WeekList from \"./components/DayView\"\r\nimport Header1 from \"./components/Header1\"\r\nimport Refresh from \"./components/Refresh\"\r\nimport TimeOutError from \"./components/TimeOutError\"\r\nimport {getStorage, listEvents, sortPin, sortName, sortCourse, sortDate, sortCheck, determineTaskName, determineTaskCourse, appendLastSort} from \"./functions/DataFunctions\"\r\nimport Marks from \"./components/Marks\"\r\n\r\nglobal.version = \"3.9.6\";\r\nglobal.changeLog = [\r\n  \"3.9.6: Arrow keys can be used to change weeks on day view\",\r\n  \"3.9.5: Added the ability to sync settings and data across platforms (see settings). Copy and paste the settings to sync them... auto syncing coming in the future?? I need to learn Firebase\",\r\n  \"3.9.5: More feedback messages when loading/resetting settings\",\r\n  \"3.9.0: Added custom fonts - in settings\",\r\n  \"3.9.0: Added popup when the info button is clicked for an event to see description in more detail\",\r\n  \"3.9.0: Added cool colours to day view - can be disabled in settings\",\r\n  \"3.8.0: Fixed pomodoro settings not loading properly\",\r\n  \"3.7.8: Added calendar event colours and calendar colours\",\r\n  \"3.7.8: Changelog now highlights in bold for current version\",\r\n  \"3.7.5: Day View is not limited to 'Number of days to view' setting\",\r\n  \"3.7.5: Can now scroll through Day View with days instead of weeks\",\r\n  \"3.7.0: Can now scroll through week view of tasks\",\r\n  \"3.7.0: Added animation setting\",\r\n  \"3.6.1: Now remembers your last tab\",\r\n  \"3.5.5: Keep track of your marks for each course!\",\r\n  \"3.5.0: Courses are automatically added, each one can have a custom colour\",\r\n  \"3.5.0: Performance improvements for loading data\",\r\n];\r\n\r\n//Eventually:\r\n//Fix vibration feedback\r\n//Add events\r\n\r\n//TODO:\r\n//bug: 12 am is displayed as 0 am\r\n//bug: more than 1 day events are only displayed on one day\r\n//bug 12 pm is displayed as 12 am\r\n\r\n//reset button to reset all settings (clear async)\r\n//export async storage (copy to clipboard)\r\n//import async storage\r\n//sync with firebase?? :o\r\n\r\n//fade animations broken (hover) (make more like day-view ones)\r\n//the course gets highlighted even though there is no course\r\n\r\n//full on colour wheel popup\r\n//make it to the left (like how the sync button is located)\r\n//https://github.com/omgovich/react-colorful\r\n//https://gist.github.com/lou/571b7c0e7797860d6c555a9fdc0496f9\r\n\r\n//finding all courses broken??\r\n\r\n//sort by calendar ID (coloured dot? only show up if more than one calendar loaded)\r\n//add filter both ways (sort by least/most)\r\n//count how many successful pomodoros\r\n\r\n//calendar colour codes - print list of objects see if possible?\r\n//verify on google - rename name - https://medium.com/cafe24-ph-blog/tips-on-verifying-google-application-that-uses-sensitive-scopes-3b75dfb590ae\r\n//tabs with different course names - based on what was entered (and separate by tests, homework, etc)\r\n\r\n//search bar for task name/course/date\r\n\r\n//Date object documentation https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/getDay\r\n\r\nexport default class App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleItemClick = this.handleItemClick.bind(this);\r\n    this.refreshWholeList = this.refreshWholeList.bind(this);\r\n    this.resetCalendarObjects = this.resetCalendarObjects.bind(this);\r\n    this.signUpdate = this.signUpdate.bind(this);\r\n    this.loadSyncData = this.loadSyncData.bind(this);\r\n    this.sortCalendarObjects = this.sortCalendarObjects.bind(this);\r\n    this.updateDone = this.updateDone.bind(this);\r\n    this.updatePin = this.updatePin.bind(this);\r\n    this.errorTimeoutOpen = this.errorTimeoutOpen.bind(this);\r\n    this.getEventObjects = this.getEventObjects.bind(this);\r\n    this.darkModeFunction = this.darkModeFunction.bind(this);\r\n    this.toggleEventInfoOpen = this.toggleEventInfoOpen.bind(this);\r\n    this.showToast = this.showToast.bind(this);\r\n    this.state ={show:false,eventInfoOpen:false,lastTab:\"1\", calendarObjects: [], signStatus:\"\", errorTimeoutOpen: false, autoDark:\"true\"};\r\n    ApiCalendar.onLoad(() => {\r\n        this.loadSyncData();\r\n        this.refreshWholeList();\r\n        ApiCalendar.listenSign(this.signUpdate);\r\n    });\r\n    this.resetDisable = false;\r\n    //this.courseColorsLight = [\"#ef5350\",\"#ab47bc\",\"#5c6bc0\",\"#29b6f6\",\"#26a69a\",\"#9ccc65\",\"#ffee58\",\"#ffa726\",\"#8d6e63\",\"#78909c\"];\r\n    //this.courseColorsDark = [\"#b61827\",\"#790e8b\",\"#26418f\",\"#0086c3\",\"#00766c\",\"#6b9b37\",\"#c9bc1f\",\"#c77800\",\"#5f4339\",\"#4b636e\"];\r\n    this.courseColorsLight = [\"#ffcdd2\",\"#e1bee7\",\"#c5cae9\",\"#b3e5fc\",\"#b2dfdb\",\"#dcedc8\",\"#fff9c4\",\"#ffe0b2\",\"#d7ccc8\",\"#cfd8dc\"];\r\n    this.courseColorsDark = [\"#cb9ca1\",\"#af8eb5\",\"#9499b7\",\"#82b3c9\",\"#82ada9\",\"#aabb97\",\"#cbc693\",\"#cbae82\",\"#a69b97\",\"#9ea7aa\"];\r\n    this.googleCalendarColors = [\"#039be5\",\"#7986cb\",\"#33b679\",\"#8e24aa\",\"#e67c73\",\"#f6c026\",\"#f5511d\",\"#039be5\",\"#616161\",\"#3f51b5\",\"#0b8043\",\"#d60000\"]\r\n  }\r\n\r\n  darkModeFunction(){\r\n    //Dark mode colors\r\n    var currentHours = new Date().getHours();\r\n    if((getSettingsValue(\"autoDark\") && (currentHours > 19 || currentHours < 7)) || (!getSettingsValue(\"autoDark\") && getSettingsValue(\"darkMode\"))){\r\n      document.documentElement.style.setProperty('--background', \"#121212\");\r\n      document.documentElement.style.setProperty('--background-settings', \"#141414\");\r\n      document.documentElement.style.setProperty('--font-color', \"#eeeeee\");\r\n      document.documentElement.style.setProperty('--highlight', \"#9e9e9e25\");\r\n      document.documentElement.style.setProperty('--highlight2', \"#66666623\");\r\n      document.documentElement.style.setProperty('--highlight-tabs', \"#c9c9c925\");\r\n      document.documentElement.style.setProperty('--accent', \"#2889f7c9\");\r\n      document.documentElement.style.setProperty('--brightnessIcon', \"1\");\r\n      this.courseColors = this.courseColorsDark;\r\n      this.darkMode = true;\r\n    } else {\r\n      this.darkMode = false;\r\n      document.documentElement.style.setProperty('--background', \"#fafafa\");\r\n      document.documentElement.style.setProperty('--background-settings', \"white\");\r\n      document.documentElement.style.setProperty('--font-color', \"#111111\");\r\n      document.documentElement.style.setProperty('--highlight', \"#42424248\");\r\n      document.documentElement.style.setProperty('--highlight2', \"#8b8b8b1a\");\r\n      document.documentElement.style.setProperty('--highlight-tabs', \"#3838381f\");\r\n      document.documentElement.style.setProperty('--accent', \"#64b5f6\");\r\n      document.documentElement.style.setProperty('--brightnessIcon', \"0\");\r\n      this.courseColors = this.courseColorsLight;\r\n    }\r\n  }\r\n  \r\n  async loadSettings(){\r\n    global.settings = settingsOptions;\r\n    for(var i = 0; i<settingsOptions.length; i++){\r\n      if(global.settings[i][\"type\"]===\"textDouble\"){\r\n        global.settings[i][\"currentValue1\"] = await getStorage(settingsOptions[i][\"keyName1\"],settingsOptions[i][\"defaultValue1\"]);\r\n        global.settings[i][\"currentValue2\"] = await getStorage(settingsOptions[i][\"keyName2\"],settingsOptions[i][\"defaultValue2\"]);\r\n      } else {\r\n        global.settings[i][\"currentValue\"] = await getStorage(settingsOptions[i][\"keyName\"],settingsOptions[i][\"defaultValue\"]);\r\n      }\r\n    }\r\n  }\r\n\r\n  async loadSyncData(){\r\n    await this.loadSettings();\r\n\r\n    var lastSort = await getStorage(\"lastSort\",\"sortName,sortCourse,sortCheck,sortDate\");\r\n    var lastSignIn = await getStorage(\"lastSignIn\",\"0\");\r\n    var lastTab= await getStorage(\"lastTab\",\"1\");\r\n    this.setState({ \r\n      signStatus: ApiCalendar.sign,\r\n      lastSignIn:lastSignIn,\r\n      lastSort:lastSort,\r\n      calendarIDs: [getSettingsValue(\"calendarID\"),getSettingsValue(\"calendarID2\"),getSettingsValue(\"calendarID3\")],\r\n      lastTab:lastTab,\r\n    });\r\n  }\r\n  signUpdate() {\r\n    this.setState({ signStatus: ApiCalendar.sign});\r\n    this.refreshWholeList();\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.loadSyncData();  \r\n  }\r\n\r\n  sortCalendarObjects(type, calendarObjects){\r\n    if(this.state.signStatus){\r\n      if(type===\"sortName\"){\r\n        AsyncStorage.setItem(\"lastSort\", appendLastSort(\"sortName\",this.state.lastSort));\r\n        this.setState({\r\n          lastSort: appendLastSort(\"sortName\",this.state.lastSort)\r\n        })\r\n        return sortPin(sortName(calendarObjects));\r\n      } else if(type===\"sortDate\") {\r\n        AsyncStorage.setItem(\"lastSort\", appendLastSort(\"sortDate\",this.state.lastSort));\r\n        this.setState({\r\n          lastSort: appendLastSort(\"sortDate\",this.state.lastSort)\r\n        })\r\n        return sortPin(sortDate(calendarObjects));\r\n      } else if(type===\"sortCourse\") {\r\n        AsyncStorage.setItem(\"lastSort\", appendLastSort(\"sortCourse\",this.state.lastSort));\r\n        this.setState({\r\n          lastSort: appendLastSort(\"sortCourse\",this.state.lastSort)\r\n        })\r\n        return sortPin(sortCourse(calendarObjects));\r\n      } else if(type===\"sortCheck\") {\r\n        AsyncStorage.setItem(\"lastSort\", appendLastSort(\"sortCheck\",this.state.lastSort));\r\n        this.setState({\r\n          lastSort: appendLastSort(\"sortCheck\",this.state.lastSort)\r\n        })\r\n        return sortPin(sortCheck(calendarObjects));\r\n      }\r\n    }\r\n  }\r\n      \r\n  handleItemClick(event: SyntheticEvent<any>, name: string, calendarObjects: string): void {\r\n    if (name === 'signIn') {\r\n      ApiCalendar.handleAuthClick();\r\n    } else if (name === 'signOut') {\r\n      ApiCalendar.handleSignoutClick();\r\n    } else if (name==='log'){\r\n      if (ApiCalendar.sign)\r\n      listEvents(10,getSettingsValue(\"hoursBefore\"))\r\n        .then(({result}: any) => {\r\n          console.log(result.items);\r\n      });\r\n    } else if (name==='logStored'){\r\n      console.log(this.state.calendarObjects)\r\n    } else if (name===\"changeName\") {\r\n      if (ApiCalendar.sign) \r\n        listEvents(1,getSettingsValue(\"hoursBefore\"))\r\n        .then(({result}: any) => {\r\n          const event = {\r\n            summary: \"✔️\" + result.items[0].summary\r\n          };\r\n          ApiCalendar.updateEvent(event, result.items[0].id)\r\n            .then(console.log);\r\n      });\r\n    } else if (name==='populate'){\r\n      if (ApiCalendar.sign)\r\n        listEvents(getSettingsValue(\"numEvents\"),getSettingsValue(\"hoursBefore\"))\r\n          .then(({result}: any) => {\r\n            var calendarObjects= result.items\r\n            this.setState({\r\n              calendarObjects: calendarObjects,\r\n          })\r\n        });\r\n    } else if (name==='sortName'){\r\n      this.setState({calendarObjects: this.sortCalendarObjects('sortName', calendarObjects)})\r\n    } else if (name==='sortCourse'){\r\n      this.setState({calendarObjects: this.sortCalendarObjects('sortCourse', calendarObjects)})\r\n    } else if (name==='sortDate'){\r\n      this.setState({calendarObjects: this.sortCalendarObjects('sortDate', calendarObjects)})\r\n    } else if (name==='sortPin'){\r\n      this.setState({calendarObjects: sortPin(calendarObjects)});\r\n    } else if (name==='errorTimeoutOpen'){\r\n      this.errorTimeoutOpen(\"Error Code\")\r\n    } else if (name==='addEvent'){\r\n      const event = {\r\n        summary: \"addTest\",\r\n        start:{dateTime: \"2020-09-13T08:00:00-02:00\"},\r\n        end:{dateTime: \"2020-09-13T08:00:00-04:00\"},\r\n        status: \"confirmed\"\r\n      }\r\n      if (ApiCalendar.sign){\r\n        if(this.state.calendarID!=null){\r\n          ApiCalendar.createEvent(event,this.state.calendarID)\r\n        } else {\r\n          ApiCalendar.createEvent(event).then((result: object) => {\r\n            console.log(result);\r\n          })\r\n          .catch((error: any) => {\r\n            console.log(error);\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  updateDone(id){\r\n    for (var i = 0; i < this.state.calendarObjects.length; i++) {\r\n      if(this.state.calendarObjects[i].id === id){\r\n        if(this.state.calendarObjects[i].done===true){\r\n          this.state.calendarObjects[i].done=false;\r\n          this.setState({\r\n            calendarObjects: this.state.calendarObjects\r\n          })\r\n        } else {\r\n          this.state.calendarObjects[i].done=true;\r\n          this.setState({\r\n            calendarObjects: this.state.calendarObjects\r\n          })\r\n        }\r\n        return;\r\n      } else {\r\n        continue;\r\n      }\r\n    }\r\n  }\r\n\r\n  updatePin(id){\r\n    for (var i = 0; i < this.state.calendarObjects.length; i++) {\r\n      if(this.state.calendarObjects[i].id === id){\r\n        if(this.state.calendarObjects[i].pin===true){\r\n          this.state.calendarObjects[i].pin=false;\r\n          this.setState({\r\n            calendarObjects: sortPin(this.state.calendarObjects)\r\n          })\r\n        } else {\r\n          this.state.calendarObjects[i].pin=true;\r\n          this.setState({\r\n            calendarObjects: sortPin(this.state.calendarObjects)\r\n          })\r\n        }\r\n        return;\r\n      } else {\r\n        continue;\r\n      }\r\n    }\r\n  }\r\n  \r\n  errorTimeoutOpen(error){\r\n    this.setState({\r\n      errorCode: error,\r\n      errorTimeoutOpen: true,\r\n    })\r\n  }\r\n\r\n  async getEventObjects(calendarIDsPassed){\r\n    global.courses = [];\r\n    this.setState({invalidID: false});\r\n    var calendarObjectsTotal = [];\r\n    for(var z = 0; z < calendarIDsPassed.length; z++){\r\n      var calendarIDPassed = \"\";\r\n      if(z!==0 && calendarIDsPassed[z]===\"\"){\r\n        continue;\r\n      } else if (z===0 && (calendarIDPassed[0]===\"primary\"||calendarIDPassed[0]===\"\")){\r\n        calendarIDPassed = \"primary\";\r\n      } else {\r\n        calendarIDPassed = calendarIDsPassed[z];\r\n      }\r\n      await ApiCalendar.setCalendar(calendarIDPassed);\r\n      await listEvents(getSettingsValue(\"numEvents\"),getSettingsValue(\"hoursBefore\")).then(async ({result}: any) => {\r\n        var calendarObjectsReduced = [];\r\n        var calendarObjects = result.items;\r\n        for (var i = 0; i < calendarObjects.length; i++) {\r\n          //Determine if within the week days range specified in settings\r\n          var dateObj;\r\n          if (displayDate(new Date(calendarObjects[i].start.dateTime))===\"All day\"){\r\n            dateObj = new Date(calendarObjects[i].start.date);\r\n          } else {\r\n            dateObj = new Date(calendarObjects[i].start.dateTime);\r\n          }\r\n          //Fix for all day and hours past\r\n          var allDayPastTest=false;\r\n          if(displayDate(new Date(calendarObjects[i].start.dateTime))===\"All day\"){\r\n            if(new Date(calendarObjects[i].end.date)>new Date().addDays(-1*(getSettingsValue(\"hoursBefore\")+24)/24)){\r\n              allDayPastTest=true;\r\n            }\r\n          } else {\r\n            allDayPastTest=true;\r\n          }\r\n          if(allDayPastTest){\r\n            //Set up attributes of each object\r\n            if(dateObj < new Date().addDays(parseInt(getSettingsValue(\"nextWeekShow\")))){\r\n              calendarObjects[i].weekLimitHide=false;\r\n            } else {\r\n              calendarObjects[i].weekLimitHide=true;\r\n            }\r\n            if(calendarObjects[i].summary !== undefined && calendarObjects[i].summary.length>=2 && calendarObjects[i].summary.substring(0,2)===\"✔️\"){\r\n              calendarObjects[i].done=true;\r\n            } else {\r\n              calendarObjects[i].done=false;\r\n            }\r\n            if(calendarObjects[i].summary !== undefined && calendarObjects[i].summary.length>=2 && calendarObjects[i].summary.substring(0,2)===\"📌\"){\r\n              calendarObjects[i].pin=true;\r\n            } else {\r\n              calendarObjects[i].pin=false;\r\n            }\r\n            if(calendarObjects[i].summary !== undefined && calendarObjects[i].summary.length>=2 && (calendarObjects[i].summary.substring(0,2)===\"✔️\" || calendarObjects[i].summary.substring(0,2)===\"📌\")){\r\n              calendarObjects[i].name=calendarObjects[i].summary.substring(2);\r\n            } else {\r\n              calendarObjects[i].name=calendarObjects[i].summary;\r\n            }\r\n            calendarObjects[i].date = displayDate(new Date(calendarObjects[i].start.dateTime));\r\n            if (calendarObjects[i].date===\"All day\"){\r\n              calendarObjects[i].date = displayDate(new Date(calendarObjects[i].end.date));\r\n              calendarObjects[i].dateObjEnd = new Date(calendarObjects[i].end.date);\r\n            } else {\r\n              calendarObjects[i].dateObjEnd = new Date(calendarObjects[i].end.dateTime);\r\n            }\r\n            calendarObjects[i].timeStart = displayTime(new Date(calendarObjects[i].start.dateTime));\r\n            calendarObjects[i].timeEnd = displayTime(new Date(calendarObjects[i].end.dateTime));\r\n\r\n            var courseRandomCode;\r\n            var currentCourse = determineTaskCourse(calendarObjects[i].summary);\r\n            if (getSettingsValue(\"useEventColours\")===true && calendarObjects[i].colorId!==undefined){\r\n              calendarObjects[i].courseColor = this.googleCalendarColors[calendarObjects[i].colorId];\r\n              calendarObjects[i].courseRandomCode = -1;\r\n              if(currentCourse !== \"\"){\r\n                calendarObjects[i].course=currentCourse;\r\n              } else {\r\n                calendarObjects[i].course=\"\";\r\n              }\r\n            } else if(currentCourse !==\"\"){\r\n              calendarObjects[i].course=currentCourse;\r\n              if(!global.courses.includes(calendarObjects[i].course)){\r\n                global.courses.push(calendarObjects[i].course)\r\n              }\r\n              var selectedColor = await getStorage(\"courseColor\"+calendarObjects[i].course,\"\")\r\n              if(selectedColor!==\"\"){\r\n                calendarObjects[i].courseColor=selectedColor;\r\n              } else {\r\n                if(calendarObjects[i].course.length>6){\r\n                  courseRandomCode=calendarObjects[i].course.charCodeAt(0)+calendarObjects[i].course.charCodeAt(1)+calendarObjects[i].course.charCodeAt(2)+calendarObjects[i].course.charCodeAt(3)+calendarObjects[i].course.charCodeAt(4)+calendarObjects[i].course.charCodeAt(5)+calendarObjects[i].course.charCodeAt(6);\r\n                } else {\r\n                  courseRandomCode=calendarObjects[i].course.charCodeAt(0)+calendarObjects[i].course.charCodeAt(1)+calendarObjects[i].course.charCodeAt(2)+calendarObjects[i].course.charCodeAt(3)+calendarObjects[i].course.charCodeAt(4)+calendarObjects[i].course.charCodeAt(5);\r\n                }\r\n                calendarObjects[i].courseColor=this.courseColors[courseRandomCode%this.courseColors.length];\r\n                calendarObjects[i].name=determineTaskName(calendarObjects[i].summary);\r\n              }\r\n            } else if(getSettingsValue(\"calendarIDColor\"+(z+1).toString())!==undefined) {\r\n              calendarObjects[i].courseColor=getSettingsValue(\"calendarIDColor\"+(z+1).toString());\r\n              calendarObjects[i].course = \"\";\r\n              calendarObjects[i].courseRandomCode = -1;\r\n            } else {\r\n              calendarObjects[i].course = \"\";\r\n              calendarObjects[i].courseRandomCode = -1;\r\n              calendarObjects[i].courseColor=\"\";\r\n            }\r\n            if(getSettingsValue(\"importantEvents\")!==\"\"&&getSettingsValue(\"importantEvents\").split(\",\").length>0){\r\n              try{\r\n                calendarObjects[i].important = false;\r\n                if(calendarObjects[i].name===undefined){\r\n                  calendarObjects[i].name=\"(No title)\"\r\n                }\r\n                for(var x=0; x<getSettingsValue(\"importantEvents\").split(\",\").length;x++){\r\n                  if (calendarObjects[i].name.toLowerCase().includes(getSettingsValue(\"importantEvents\").split(\",\")[x].toLowerCase())||calendarObjects[i].course.toLowerCase().includes(getSettingsValue(\"importantEvents\").split(\",\")[x].toLowerCase())){\r\n                    calendarObjects[i].important = true;\r\n                  }\r\n                }\r\n              }catch(e){\r\n                this.showToast(e);\r\n              }\r\n            } else {\r\n              calendarObjects[i].important = false;\r\n            }\r\n            if(getSettingsValue(\"hideEvents\")!==\"\"&&getSettingsValue(\"hideEvents\").split(\",\").length>0){\r\n              try{\r\n                calendarObjects[i].hide = false;\r\n                for(var y=0; y<getSettingsValue(\"hideEvents\").split(\",\").length;y++){\r\n                  if (calendarObjects[i].name.includes(getSettingsValue(\"hideEvents\").split(\",\")[y])||calendarObjects[i].course.includes(getSettingsValue(\"hideEvents\").split(\",\")[y])){\r\n                    calendarObjects[i].hide = true;\r\n                  }\r\n                }\r\n              }catch(e){\r\n                this.showToast(e);\r\n              }\r\n            } else {\r\n              calendarObjects[i].hide = false;\r\n            }\r\n            \r\n            //else if(this.state.course2.toLowerCase()===calendarObjects[i].course.toLowerCase()){\r\n            //   calendarObjects[i].courseColor=this.state.courseColor2;\r\n            // } else if(this.state.course3.toLowerCase()===calendarObjects[i].course.toLowerCase()){\r\n            //   calendarObjects[i].courseColor=this.state.courseColor3;\r\n            // } else if(this.state.course4.toLowerCase()===calendarObjects[i].course.toLowerCase()){\r\n            //   calendarObjects[i].courseColor=this.state.courseColor4;\r\n            // } else if(this.state.course5.toLowerCase()===calendarObjects[i].course.toLowerCase()){\r\n            //   calendarObjects[i].courseColor=this.state.courseColor5;\r\n            // } else if(this.state.course6.toLowerCase()===calendarObjects[i].course.toLowerCase()){\r\n            //   calendarObjects[i].courseColor=this.state.courseColor6;\r\n            // } else if(this.state.course7.toLowerCase()===calendarObjects[i].course.toLowerCase()){\r\n            //   calendarObjects[i].courseColor=this.state.courseColor7;\r\n            // }\r\n            \r\n            // calendarObjects[i].done = \"\";\r\n            // calendarObjects[i].pin = \"\";\r\n            // calendarObjects[i].name = \"\";\r\n            // calendarObjects[i].course = \"\";\r\n            // calendarObjects[i].date = \"\";\r\n            // calendarObjects[i].timeStart = \"\";\r\n            // calendarObjects[i].timeEnd = \"\";\r\n            // calendarObjects[i].courseColor = \"\";\r\n            // calendarObjects[i].dateObjEnd = \"\";\r\n            // calendarObjects[i].important = \"\";\r\n            // calendarObjects[i].hide = \"\";\r\n            calendarObjects[i].calendarID=calendarIDPassed;\r\n            calendarObjectsReduced.push(calendarObjects[i]);\r\n          }\r\n        }\r\n        Array.prototype.push.apply(calendarObjectsTotal,calendarObjectsReduced); \r\n        var lastSortList = this.state.lastSort.split(\",\");\r\n        lastSortList.map(function(sortElement){\r\n          calendarObjectsTotal = this.sortCalendarObjects(sortElement, calendarObjectsTotal);\r\n        }, this)\r\n      }).catch(error => {\r\n        this.setState({\r\n          invalidID:true,\r\n        });\r\n      });\r\n    }\r\n    this.setState({\r\n      calendarObjects: calendarObjectsTotal,\r\n    });\r\n\r\n    global.settingsColour = settingsOptionsColour();\r\n    for(var i = 0; i<settingsOptionsColour().length; i++){\r\n      global.settingsColour[i][\"currentValue\"] = await getStorage(settingsOptionsColour()[i][\"keyName\"],\"\");\r\n    }\r\n  }\r\n\r\n  async resetCalendarObjects(){\r\n    if(this.resetDisable===false){\r\n      this.resetDisable=true;\r\n      await this.setState({calendarObjects:[]});\r\n      await this.refreshWholeList();\r\n      setTimeout(function () {\r\n          this.resetDisable=false;\r\n      }.bind(this), 1000);\r\n    }\r\n  }\r\n\r\n  async refreshWholeList() {\r\n    await this.loadSyncData();\r\n    await this.darkModeFunction();\r\n    if (ApiCalendar.sign){\r\n      this.getEventObjects(this.state.calendarIDs);\r\n    }\r\n  }\r\n\r\n  toggleEventInfoOpen(open, eventInfoSelected){\r\n    this.setState({\r\n      eventInfoOpen:open,\r\n      eventInfoSelected:eventInfoSelected\r\n    })\r\n  }\r\n\r\n  showToast(showMessage){\r\n    this.setState({showMessage:showMessage, show:true});\r\n  }\r\n  \r\n  render(): ReactNode {\r\n    var signStatusDisplay=\"none\";\r\n    var calendarObjectsLengthDisplay=\"none\";\r\n    var invalidCalendarDisplay=\"none\";\r\n    if(this.state.signStatus){\r\n      signStatusDisplay=\"none\";\r\n    } else {\r\n      signStatusDisplay=\"\";\r\n    }\r\n    if(this.state.calendarObjects.length<=0 && this.state.signStatus){\r\n      calendarObjectsLengthDisplay=\"\";\r\n    } else if (this.state.invalidID===true && this.state.signStatus){\r\n      invalidCalendarDisplay=\"\";\r\n    }\r\n    var today=new Date();\r\n    var currentDisplayDate;\r\n    if(window.innerWidth>767){\r\n      currentDisplayDate=getDisplayDayFull(today)+\" \"+getDisplayMonthFull(today)+\" \"+today.getDate()\r\n    } else {\r\n      currentDisplayDate=getDisplayDay(today)+\" \"+getDisplayMonth(today)+\" \"+today.getDate()\r\n    }\r\n    var welcomeOpen=false;\r\n    if(this.state.lastSignIn!==global.version){\r\n      welcomeOpen=true;\r\n    }\r\n    return (\r\n      <div className=\"screen\">\r\n        {/* <Button variant=\"secondary\" onClick={(e) => this.handleItemClick(e, \"addEvent\")}>\r\n          Add\r\n        </Button>\r\n        <Button variant=\"secondary\" onClick={(e) => this.handleItemClick(e, \"log\")}>\r\n          Log\r\n        </Button>\r\n         <Button variant=\"secondary\" onClick={(e) => this.handleItemClick(e, \"logStored\")}>\r\n          logStored\r\n        </Button>\r\n        <Button variant=\"secondary\" onClick={(e) => this.handleItemClick(e, \"sortName\")}>\r\n          sortName\r\n        </Button>\r\n        <Button variant=\"secondary\" onClick={(e) => this.handleItemClick(e, \"sortCourse\")}>\r\n          sortCourse\r\n        </Button>\r\n        <Button variant=\"secondary\" onClick={(e) => this.handleItemClick(e, \"sortDate\")}>\r\n          sortDate\r\n        </Button>\r\n        <Button variant=\"secondary\" onClick={(e) => this.handleItemClick(e, \"errorTimeoutOpen\")}>\r\n          errorTimeoutOpen\r\n        </Button>\r\n        <Button variant=\"secondary\" onClick={(e) => this.handleItemClick(e, \"sortPin\")}>\r\n          sortPin\r\n        </Button> */}\r\n        <Header1 content={currentDisplayDate}/>\r\n        <Tabs onSelect={(key)=>{AsyncStorage.setItem(\"lastTab\",key.toString()); this.setState({lastTab:key})}} style={{\"marginTop\":\"1.9%\",\"marginBottom\":\"3px\"}} className=\"tabsLabel\" activeKey={this.state.lastTab}>\r\n            <Tab eventKey=\"1\" title=\"Task List\">\r\n              <TaskList toggleEventInfoOpen={this.toggleEventInfoOpen} calendarObjects={this.state.calendarObjects} courseColors={this.courseColors} hoursBefore={getSettingsValue(\"hoursBefore\")} nextWeekShow={getSettingsValue(\"nextWeekShow\")} sortCalendarObjects={this.sortCalendarObjects} updateDone={this.updateDone} errorTimeoutOpen={this.errorTimeoutOpen} updatePin={this.updatePin} darkMode={this.darkMode}/>\r\n            </Tab>\r\n            <Tab eventKey=\"2\" title=\"Day View\">\r\n              <WeekList currentTab={this.state.lastTab} toggleEventInfoOpen={this.toggleEventInfoOpen} calendarObjects={this.state.calendarObjects} nextWeekShow={getSettingsValue(\"nextWeekShow\")} courseColors={this.courseColors} updateDone={this.updateDone} errorTimeoutOpen={this.errorTimeoutOpen} updatePin={this.updatePin} darkMode={this.darkMode}/>\r\n            </Tab>\r\n            <Tab eventKey=\"3\" title=\"Pomodoro\">\r\n              <Pomo calendarObjects={this.state.calendarObjects} loadSettings={this.loadSettings}/>\r\n            </Tab>\r\n            <Tab eventKey=\"4\" title=\"Marks\">\r\n              <Marks/>\r\n            </Tab>\r\n        </Tabs>\r\n        <Settings \r\n          resetCalendarObjects={this.resetCalendarObjects} \r\n          signStatus={this.state.signStatus} \r\n          showToast={this.showToast}\r\n        />\r\n        <Refresh signStatus={this.state.signStatus} resetCalendarObjects={this.resetCalendarObjects}/>\r\n        <Toast onClose={() => this.setState({show: false})} show={this.state.show} delay={1500} autohide style={{\"position\":\"fixed\",\"bottom\":\"0%\",\"left\":\"1%\"}}>\r\n          <Toast.Header>\r\n            <strong className=\"mr-auto\">{this.state.showMessage}</strong>\r\n          </Toast.Header>\r\n        </Toast>\r\n        <div className=\"alert alert-danger fadeIn\" role=\"alert\" onClick={(e) => this.handleItemClick(e, 'signIn')} style={{\"display\":signStatusDisplay, \"animationDelay\":\"600ms\", \"position\":\"fixed\",\"bottom\":\"1%\", \"cursor\":\"pointer\", \"marginRight\":\"2.5%\"}}>\r\n          You are not logged-in. Login <u>here</u> or in the settings.\r\n        </div>\r\n        <div className=\"alert alert-warning fadeIn\" role=\"alert\" style={{\"display\":calendarObjectsLengthDisplay, \"animationDelay\":\"2600ms\", \"position\":\"fixed\",\"bottom\":\"1%\", \"marginRight\":\"2.5%\"}}>\r\n          There are no events for this calendar. Add some and refresh to view.\r\n        </div>\r\n        <div className=\"alert alert-warning fadeIn\" role=\"alert\" style={{\"display\":invalidCalendarDisplay, \"animationDelay\":\"600ms\", \"position\":\"fixed\",\"bottom\":\"1%\", \"marginRight\":\"2.5%\"}}>\r\n          It seems you are using an invalid calendar ID. Open settings and double check.\r\n        </div>\r\n        <TimeOutError errorTimeoutOpen={this.state.errorTimeoutOpen} errorCode={this.state.errorCode}/>\r\n        <WelcomeMessage welcomeOpen={welcomeOpen} errorCode={this.state.errorCode} signStatus={this.state.signStatus}/>\r\n        <EventInfoMessage eventInfoSelected={this.state.eventInfoSelected} toggleEventInfoOpen={this.toggleEventInfoOpen} eventInfoOpen={this.state.eventInfoOpen}/>\r\n        {/* <AddEvent resetCalendarObjects={this.resetCalendarObjects}/> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// const theme = createMuiTheme({\r\n//   palette: {\r\n//     type: 'dark',\r\n//     primary: {\r\n//       main: '#64b5f6',\r\n//     },\r\n//   },\r\n// });\r\n\r\n// class AddEvent extends React.Component{\r\n//   constructor(props) {\r\n//     super(props);\r\n//     this.state ={show: false};\r\n//   }\r\n//   handleItemClick(event: SyntheticEvent<any>, name: string): void {\r\n//     if (name==='openAdd') {\r\n//       this.setState({show: true})\r\n//     } else if (name==='close'){\r\n//       this.setState({show: false})\r\n//     } else if (name==='add'){\r\n//       this.props.resetCalendarObjects();\r\n//       this.setState({show: false})\r\n//     }\r\n//   }\r\n//   handleChange(event,props) {\r\n//     if(event.target.name===\"calendarID\"){\r\n//       AsyncStorage.setItem('calendarIDKey', event.target.value);\r\n//       this.props.setCalendarID(event.target.value)\r\n//     }\r\n//   }\r\n//   render(){\r\n//     return(\r\n//       <div>\r\n//         <div className=\"addButton\" onClick={(e) => this.handleItemClick(e, \"openAdd\")}><div className=\"addButtonOffset\">+</div></div>\r\n//         <Modal className=\"settingsModal\" backdrop=\"static\" show={this.state.show} size=\"lg\">\r\n//           <Modal.Header>\r\n//             <div className=\"header1\" style={{\"marginBottom\":\"0px\"}}>Add Task</div>\r\n//           </Modal.Header>\r\n//           <Modal.Body>\r\n//             <ThemeProvider theme={theme}>\r\n//               <TextField placeholder=\"Task\" color=\"primary\" fullWidth size=\"medium\" label=\"\" inputProps={{style: {fontSize: 40}}} InputLabelProps={{style: {fontSize: 10}}} style={{width:\"50%\"}}/>\r\n//             </ThemeProvider>  \r\n//           </Modal.Body>\r\n//           <Modal.Footer>\r\n//           <Button variant=\"secondary\" onClick={(e) => this.handleItemClick(e, \"close\")} style={{\"position\":\"absolute\", \"left\":\"10px\"}}>\r\n//             Close\r\n//           </Button>\r\n//           <Button variant=\"primary\" onClick={(e) => this.handleItemClick(e, \"add\")}>\r\n//             Add\r\n//           </Button>\r\n//           </Modal.Footer>\r\n//         </Modal>\r\n//       </div>\r\n//     )\r\n//   }\r\n// }\r\n\r\n\r\n\r\n\r\n// class AddTask extends React.Component {\r\n\r\n//   render() {\r\n//     return(\r\n//       <div className=\"tasks\">\r\n//         <Header2 content=\"Add Task\"/>\r\n//       </div>\r\n//     )\r\n//   }\r\n// }\r\n\r\n\r\n\r\n// function Header2(props){\r\n//   return(\r\n//     <div className=\"header2\">\r\n//       {props.content}\r\n//     </div>\r\n//   )\r\n// }\r\n\r\n\r\nconst Input = ({ id, type, label, value, onChange }) => {\r\n  const classes = value.length ? 'Input Input--has-value' : 'Input'\r\n  return (\r\n    <div className={classes}>\r\n      <input id={id}  type={type} value={value} onChange={onChange} />\r\n      <label htmlFor={id} className=\"Input__label\">{label}</label>\r\n    </div>\r\n  )\r\n}\r\n\r\nDate.prototype.addDays = function(days) {\r\n    var date = new Date(this.valueOf());\r\n    date.setDate(date.getDate() + days);\r\n    return date;\r\n}","F:\\Documents\\Websites\\CalendarTasks\\calendar-tasks\\src\\reportWebVitals.js",[],"F:\\Documents\\Websites\\CalendarTasks\\calendar-tasks\\src\\serviceWorker.js",[],"F:\\Documents\\Websites\\CalendarTasks\\calendar-tasks\\src\\components\\Settings.js",[],"F:\\Documents\\Websites\\CalendarTasks\\calendar-tasks\\src\\components\\WelcomeMessage.js",[],"F:\\Documents\\Websites\\CalendarTasks\\calendar-tasks\\src\\components\\EventInfoMessage.js",[],"F:\\Documents\\Websites\\CalendarTasks\\calendar-tasks\\src\\components\\TaskList.js",["90"],"import React from 'react';\r\nimport pinIcon from \"../assets/thumbtack-solid.svg\";\r\nimport checkIcon from \"../assets/check-solid.svg\"\r\nimport FlipMove from 'react-flip-move';\r\nimport ApiCalendar from 'react-google-calendar-api';\r\nimport {eventToday,} from \"../functions/DateFunctions\"\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\r\nimport Tooltip from 'react-bootstrap/Tooltip'\r\nimport infoIcon from \"../assets/info-circle-solid.svg\"\r\nimport '../App.css';\r\nimport {getSettingsValue} from \"./Settings\"\r\n\r\nexport default class TaskList extends React.Component {\r\n  render() {\r\n    return(\r\n      <div className=\"tasks\">\r\n        <TaskTable toggleEventInfoOpen={this.props.toggleEventInfoOpen} calendarObjects={this.props.calendarObjects} courseColors={this.props.courseColors} hoursBefore={this.props.hoursBefore} nextWeekShow={this.props.nextWeekShow} sortCalendarObjects={this.props.sortCalendarObjects} updateDone={this.props.updateDone} errorTimeoutOpen={this.props.errorTimeoutOpen} updatePin={this.props.updatePin} darkMode={this.props.darkMode}/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nclass TaskTable extends React.Component{\r\n  render() {\r\n    return(\r\n      <div className=\"taskTable\">\r\n        <table className=\"taskList\">\r\n          <thead>\r\n            <tr className=\"fadeIn\">\r\n              <th className=\"pin header3\"><div className=\"pinHeader\"><img alt=\"pin pinHeader\" src={pinIcon}/></div></th>\r\n              <th className=\"check header3\" onClick={e => this.props.sortCalendarObjects(\"sortCheck\", this.props.calendarObjects)}><div className=\"hoverSort checkHeader\"><img alt=\"check\" src={checkIcon}/></div></th>\r\n              <th className=\"task header3\" onClick={e => this.props.sortCalendarObjects(\"sortName\", this.props.calendarObjects)}><div className=\"hoverSort\">Task</div></th>\r\n              <th className=\"date header3\" onClick={e => this.props.sortCalendarObjects(\"sortDate\", this.props.calendarObjects)}><div className=\"hoverSort\">Date</div></th>\r\n              <th className=\"time header3\" onClick={e => this.props.sortCalendarObjects(\"sortDate\", this.props.calendarObjects)}><div className=\"hoverSort\">Time</div></th>\r\n              <th className=\"course header3\" onClick={e => this.props.sortCalendarObjects(\"sortCourse\", this.props.calendarObjects)}><div className=\"hoverSort\">Course</div></th>\r\n            </tr>\r\n          </thead>\r\n          <FlipMove staggerDurationBy={getSettingsValue(\"enableAnimations\")===true?25:0} className=\"fadeIn\" typeName=\"tbody\" easing={\"ease\"} duration={700} leaveAnimation=\"none\" staggerDelayBy={0} enterAnimation=\"fade\">\r\n            {this.props.calendarObjects.map(function(task){\r\n              if(task.hide===false && task.weekLimitHide===false){\r\n                return(<TaskEntry\r\n                key={task.id}\r\n                toggleEventInfoOpen={this.props.toggleEventInfoOpen}\r\n                task={task}\r\n                name={task.name}\r\n                date={task.date}\r\n                timeStart={task.timeStart}\r\n                timeEnd={task.timeEnd}\r\n                course={task.course}\r\n                courseColor={task.courseColor}\r\n                done={task.done}\r\n                id={task.id}\r\n                hoursBefore={this.props.hoursBefore}\r\n                nextWeekShow={this.props.nextWeekShow}\r\n                updateDone={this.props.updateDone}\r\n                calendarIDCurrent={task.calendarID}\r\n                description={task.description}\r\n                dateObjEnd={task.dateObjEnd}\r\n                errorTimeoutOpen={this.props.errorTimeoutOpen}\r\n                updatePin={this.props.updatePin}\r\n                pin={task.pin}\r\n                important={task.important}\r\n                darkMode={this.props.darkMode}\r\n                />)\r\n              }\r\n            }, this)}\r\n          </FlipMove>\r\n        </table>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nclass TaskEntry extends React.Component{\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleItemClick = this.handleItemClick.bind(this);\r\n    this.state ={checked: this.props.done};\r\n  }\r\n\r\n  handleItemClick(event: SyntheticEvent<any>, name: string): void {\r\n    if(this.props.calendarIDCurrent===\"\")\r\n      ApiCalendar.setCalendar(\"primary\")\r\n    else \r\n      ApiCalendar.setCalendar(this.props.calendarIDCurrent)\r\n    if (name===\"checkOff\"&&this.props.pin===false) {\r\n      if (ApiCalendar.sign){\r\n        //navigator.vibrate([30]);\r\n        if(this.props.course!==\"\"){\r\n          const event = {\r\n            summary: \"✔️\" + this.props.course + \" \" + this.props.name\r\n          };\r\n          ApiCalendar.updateEvent(event, this.props.id)\r\n          .then(\r\n            this.props.updateDone(this.props.id),\r\n          )\r\n          .catch((error: any) => {\r\n            this.props.errorTimeoutOpen(\"Error 401/404\")\r\n          });\r\n        } else {\r\n          const event = {\r\n            summary: \"✔️\" + this.props.name\r\n          };\r\n          ApiCalendar.updateEvent(event, this.props.id)\r\n          .then(\r\n            this.props.updateDone(this.props.id),\r\n          )\r\n          .catch((error: any) => {\r\n             this.props.errorTimeoutOpen(\"Error 401/404\")\r\n          });\r\n        }\r\n      }\r\n    } else if (name===\"uncheckOff\") {\r\n      if (ApiCalendar.sign){\r\n        //navigator.vibrate([10]);\r\n        if(this.props.course!==\"\"){\r\n          const event = {\r\n            summary: this.props.course + \" \" + this.props.name\r\n          };\r\n          ApiCalendar.updateEvent(event, this.props.id)\r\n          .then(\r\n            this.props.updateDone(this.props.id),\r\n          )\r\n          .catch((error: any) => {\r\n            this.props.errorTimeoutOpen(\"Error 401/404\")\r\n          });\r\n        } else {\r\n          const event = {\r\n            summary: this.props.name //remove the check-mark, because no check-mark is ever passed in\r\n          };\r\n          ApiCalendar.updateEvent(event, this.props.id)\r\n          .then(\r\n            this.props.updateDone(this.props.id),\r\n          )\r\n          .catch((error: any) => {\r\n            this.props.errorTimeoutOpen(\"Error 401/404\")\r\n          });\r\n        }\r\n      }\r\n    }    \r\n    if ((name===\"pin\"||name===\"checkOff\")&&this.props.pin===true) {\r\n      if (ApiCalendar.sign){\r\n        //navigator.vibrate([10]);\r\n        if(name===\"checkOff\"){\r\n          if(this.props.course!==\"\"){\r\n            const event = {\r\n              summary: \"✔️\" + this.props.course + \" \" + this.props.name\r\n            };\r\n            ApiCalendar.updateEvent(event, this.props.id)\r\n            .then(\r\n              this.props.updatePin(this.props.id),\r\n              this.props.updateDone(this.props.id),\r\n            )\r\n            .catch((error: any) => {\r\n              this.props.errorTimeoutOpen(\"Error 401/404\")\r\n            });\r\n          } else {\r\n            const event = {\r\n              summary: \"✔️\" + this.props.name //remove the pin, because no pin is ever passed in\r\n            };\r\n            ApiCalendar.updateEvent(event, this.props.id)\r\n            .then(\r\n              this.props.updatePin(this.props.id),\r\n              this.props.updateDone(this.props.id),\r\n            )\r\n            .catch((error: any) => {\r\n              this.props.errorTimeoutOpen(\"Error 401/404\")\r\n            });\r\n          }\r\n        } else {\r\n          if(this.props.course!==\"\"){\r\n            const event = {\r\n              summary: this.props.course + \" \" + this.props.name\r\n            };\r\n            ApiCalendar.updateEvent(event, this.props.id)\r\n            .then(\r\n              this.props.updatePin(this.props.id),\r\n            )\r\n            .catch((error: any) => {\r\n              this.props.errorTimeoutOpen(\"Error 401/404\")\r\n            });\r\n          } else {\r\n            const event = {\r\n              summary: this.props.name //remove the pin, because no pin is ever passed in\r\n            };\r\n            ApiCalendar.updateEvent(event, this.props.id)\r\n            .then(\r\n              this.props.updatePin(this.props.id),\r\n            )\r\n            .catch((error: any) => {\r\n              this.props.errorTimeoutOpen(\"Error 401/404\")\r\n            });\r\n          }\r\n        }\r\n        \r\n      }\r\n    } else if (name===\"pin\"&&(this.props.pin===false&&this.props.done===false)) {\r\n      if (ApiCalendar.sign){\r\n        //navigator.vibrate([30]);\r\n        if(this.props.course!==\"\"){\r\n          const event = {\r\n            summary: \"📌\" + this.props.course + \" \" + this.props.name\r\n          };\r\n          ApiCalendar.updateEvent(event, this.props.id)\r\n          .then(\r\n            this.props.updatePin(this.props.id),\r\n          )\r\n          .catch((error: any) => {\r\n            this.props.errorTimeoutOpen(\"Error 401/404\")\r\n          });\r\n        } else {\r\n          const event = {\r\n            summary: \"📌\" + this.props.name\r\n          };\r\n          ApiCalendar.updateEvent(event, this.props.id)\r\n          .then(\r\n            this.props.updatePin(this.props.id),\r\n          )\r\n          .catch((error: any) => {\r\n            this.props.errorTimeoutOpen(\"Error 401/404\")\r\n          });\r\n        }\r\n      } \r\n    }\r\n  }\r\n  \r\n  render(){\r\n    var textStyle=\"none\";\r\n    var checkClass=\"checkImg\";\r\n    var pinClass=\"pinImg\";\r\n    var checkColor=\"\";\r\n    var clickActionCheck=\"checkOff\";\r\n    var checkMarkBG=\"#64b5f6\";\r\n    var courseClass=\"course\";\r\n    var pinDisplay=\"pin\";\r\n    if(this.props.done===true){\r\n      textStyle = \"line-through\";\r\n      checkClass+=\" checkIn\";\r\n      checkColor=\"#777777\";\r\n      clickActionCheck=\"uncheckOff\";\r\n      pinDisplay+=\" pinNone\";\r\n    } else {\r\n      checkClass+=\" checkOut\";\r\n    }\r\n\r\n    if(this.props.pin===true){\r\n      pinClass+=\" pinIn\"\r\n    } else {\r\n      pinClass+=\" pinOut\"\r\n    }\r\n\r\n    if(this.props.courseColor!==\"\"){\r\n      checkMarkBG=this.props.courseColor;\r\n      courseClass=\"course\";\r\n    } else {\r\n      checkMarkBG=\"#64b5f6\";\r\n      courseClass+=\" courseNone\"\r\n    }\r\n\r\n    var descriptionDisplay=\"none\";\r\n    var marginNameFix=\"\";\r\n    if(this.props.description!==undefined&&this.props.description!==null){\r\n      descriptionDisplay=\"\";\r\n      marginNameFix=\"marginNameFix\"\r\n    }\r\n    \r\n    var dateColor;\r\n    var dateFontWeight;\r\n    if (this.props.timeEnd===\"All day\" && eventToday(this.props.dateObjEnd)===true){\r\n      dateColor=\"\";\r\n      dateFontWeight=\"unset\";\r\n    } else if(this.props.dateObjEnd < Date.now()){\r\n      dateColor=\"#c53f3f\";\r\n      dateFontWeight=\"bold\";\r\n    } else {\r\n      dateColor=\"\";\r\n      dateFontWeight=\"unset\";\r\n    }\r\n\r\n    var displayTimeEnd;\r\n    if(this.props.timeEnd===\"All day\"){\r\n      displayTimeEnd=\"\";\r\n    } else {\r\n      displayTimeEnd=\" - \"+this.props.timeEnd;\r\n    }\r\n\r\n    if(this.props.important===true&&this.props.darkMode===true&&this.props.done===false){\r\n      checkColor=\"#ff8b8b\"\r\n    } else if (this.props.important===true&&this.props.darkMode===false&&this.props.done===false){\r\n      checkColor=\"#C85000\"\r\n    }\r\n    return(\r\n      <tr className=\"taskEntry\">\r\n        <td className={pinDisplay} onClick={(e) => this.handleItemClick(e, \"pin\")}><div className=\"fadeIn\"><img alt=\"check\" className={pinClass} src={pinIcon}/></div></td>\r\n        <td style={{\"backgroundColor\":checkMarkBG}} className=\"check\" onClick={(e) => this.handleItemClick(e, clickActionCheck)}><div className=\"fadeIn\"><img alt=\"check\" className={checkClass} src={checkIcon}/></div></td>\r\n        <td className=\"task\" style={{\"color\":checkColor, \"transition\":\"all 0.5s\", \"position\":\"relative\"}}>\r\n          <div className={marginNameFix} style={{\"textDecoration\":textStyle}}>{this.props.course+\" \"+this.props.name}</div>\r\n          <OverlayTrigger placement={\"bottom\"} overlay={<Tooltip><div dangerouslySetInnerHTML={{ __html: this.props.description }}></div></Tooltip>}>\r\n            <img onClick={()=>{this.props.toggleEventInfoOpen(true,this.props.task);}} alt=\"descriptions\" className=\"infoIcon\" src={infoIcon} style={{\"display\":descriptionDisplay}}/>\r\n          </OverlayTrigger>\r\n        </td>\r\n        <td className=\"date\" style={{color:dateColor,fontWeight:dateFontWeight}}>{this.props.date}</td>\r\n        <td className=\"time\">{this.props.timeStart}{displayTimeEnd}</td>\r\n        <td className={courseClass}>{this.props.course}</td>\r\n      </tr>\r\n    )\r\n  }\r\n}","F:\\Documents\\Websites\\CalendarTasks\\calendar-tasks\\src\\components\\Pomo.js",[],"F:\\Documents\\Websites\\CalendarTasks\\calendar-tasks\\src\\components\\Refresh.js",[],"F:\\Documents\\Websites\\CalendarTasks\\calendar-tasks\\src\\components\\Header1.js",[],"F:\\Documents\\Websites\\CalendarTasks\\calendar-tasks\\src\\components\\Marks.js",[],"F:\\Documents\\Websites\\CalendarTasks\\calendar-tasks\\src\\functions\\DataFunctions.js",["91"],"import ApiCalendar from 'react-google-calendar-api';\r\nimport { AsyncStorage } from 'AsyncStorage';\r\n\r\n// import {listEvents, sortPin, sortName, sortName, sortCourse, sortDate, sortCheck, determineRawSecondsTime, determineTaskName, determineTaskCourse, appendLastSort} from \"./DataFunctions\"\r\nexport function listEvents(maxResults, hoursPast=0, calendarId=ApiCalendar.calendar) { \r\n  var datePast = new Date();\r\n  datePast.setHours(datePast.getHours()-hoursPast);\r\n  if (ApiCalendar.gapi) {\r\n    return ApiCalendar.gapi.client.calendar.events.list({\r\n            'calendarId': calendarId,\r\n            'timeMin': (datePast).toISOString(),\r\n            'showDeleted': false,\r\n            'singleEvents': true,\r\n            'maxResults': maxResults,\r\n            'orderBy': 'startTime'\r\n    });\r\n  }\r\n  else {\r\n    console.log(\"Error: this.gapi not loaded\");\r\n    return false;\r\n  }\r\n}\r\n\r\nexport function sortPin(calendarObjects){\r\n  var sortedCalendarObjects = calendarObjects;\r\n  var nameA;\r\n  var nameB;\r\n  sortedCalendarObjects.sort(function(a, b) {\r\n    if(a.pin === true){\r\n      nameA=\"0000pin\";\r\n    } else {\r\n      nameA=\"zzzzpin\";\r\n    }\r\n    if(b.pin === true){\r\n      nameB=\"0000pin\";\r\n    } else {\r\n      nameB=\"zzzzpin\";\r\n    }\r\n    return (nameA < nameB) ? -1 : (nameA > nameB) ? 1 : 0;\r\n  });\r\n  return sortedCalendarObjects;\r\n}\r\n\r\nexport function sortName(calendarObjects){\r\n  var sortedCalendarObjects = calendarObjects;\r\n  sortedCalendarObjects.sort(function(a, b) {\r\n    var textA;\r\n    var textB;\r\n    if(determineTaskName(a.summary)===undefined){\r\n      textA = \"undefined\"\r\n    } else {\r\n      textA = determineTaskName(a.summary).toUpperCase();\r\n    }\r\n    if(determineTaskName(b.summary)===undefined){\r\n      textB = \"undefined\"\r\n    } else {\r\n      textB = determineTaskName(b.summary).toUpperCase();\r\n    }\r\n    return (textA < textB) ? -1 : (textA > textB) ? 1 : 0;\r\n  });\r\n  return sortedCalendarObjects;\r\n}\r\n\r\nexport function sortCourse(calendarObjects){\r\n  var sortedCalendarObjects = calendarObjects;\r\n  sortedCalendarObjects.sort(function(a, b) {\r\n    var textA = determineTaskCourse(a.summary).toUpperCase();\r\n    var textB = determineTaskCourse(b.summary).toUpperCase();\r\n    return (textA < textB) ? -1 : (textA > textB) ? 1 : 0;\r\n  });\r\n  return sortedCalendarObjects;\r\n}\r\n\r\nexport function sortDate(calendarObjects){\r\n  var sortedCalendarObjects = calendarObjects;\r\n  sortedCalendarObjects.sort(function(a, b) {\r\n    var textA = determineRawSecondsTime(a.start);\r\n    var textB = determineRawSecondsTime(b.start);\r\n    return (textA < textB) ? -1 : (textA > textB) ? 1 : 0;\r\n  });\r\n  return sortedCalendarObjects;\r\n}\r\n\r\nexport function sortCheck(calendarObjects){\r\n  var sortedCalendarObjects = calendarObjects;\r\n  var nameA;\r\n  var nameB;\r\n  sortedCalendarObjects.sort(function(a, b) {\r\n    if(a.done === true){\r\n      nameA=\"zdone\";\r\n    } else {\r\n      nameA=\"notDone\";\r\n    }\r\n    if(b.done === true){\r\n      nameB=\"zdone\";\r\n    } else {\r\n      nameB=\"notDone\";\r\n    }\r\n    return (nameA < nameB) ? -1 : (nameA > nameB) ? 1 : 0;\r\n  });\r\n  return sortedCalendarObjects;\r\n}\r\n\r\nexport function determineRawSecondsTime(start){\r\n  if(start.dateTime!==undefined){\r\n    return new Date(start.dateTime).valueOf();\r\n  } else if(start.date!==undefined){\r\n    return new Date(start.date).valueOf();\r\n  } else {\r\n    return 0;\r\n  }\r\n}\r\n\r\n//this will determine the task name without the check-mark and course\r\nexport function determineTaskName(summary){\r\n  var name;\r\n  if(summary !== undefined && summary.length>=2 && (summary.substring(0,2)===\"✔️\"||summary.substring(0,2)===\"📌\")){\r\n    name=summary.substring(2);\r\n  } else {\r\n    name=summary;\r\n  }\r\n  if(summary!==undefined&&name.length>7&&/^\\d+$/.test(name.substring(4,7))&&!/\\d/.test(name.substring(0,4))){\r\n    if(name.substring(7,8)!==\" \"){\r\n      name=name.substring(7);\r\n    } else {\r\n      name=name.substring(8);\r\n    }\r\n  } else if(summary!==undefined&&name.length>=8&&/^\\d+$/.test(name.substring(3,6))&&!/\\d/.test(name.substring(0,3))&&name.substring(6,8)===\"H1\"){\r\n    if(name.substring(8,9)!==\" \"){\r\n      name=name.substring(8);\r\n    } else {\r\n      name=name.substring(9);\r\n    }\r\n  } else if(summary!==undefined&&name.length>6&&/^\\d+$/.test(name.substring(3,6))&&!/\\d/.test(name.substring(0,3))){\r\n    if(name.substring(6,7)!==\" \"){\r\n      name=name.substring(6);\r\n    } else {\r\n      name=name.substring(7);\r\n    }\r\n  } \r\n  return name;\r\n}\r\n\r\nexport function determineTaskCourse(summary){\r\n  var course;\r\n  var name;\r\n  if(summary !== undefined && summary.length>=2 && (summary.substring(0,2)===\"✔️\"||summary.substring(0,2)===\"📌\")){\r\n    name=summary.substring(2);\r\n  } else {\r\n    name=summary;\r\n  }\r\n\r\n  if(summary!==undefined&&name.length>7&&/^\\d+$/.test(name.substring(4,7))&&!/\\d/.test(name.substring(0,4))){\r\n    course=name.substring(0,7);\r\n  } else if(summary!==undefined&&name.length>=8&&/^\\d+$/.test(name.substring(3,6))&&!/\\d/.test(name.substring(0,3))&&name.substring(6,8)===\"H1\"){\r\n    course=name.substring(0,8);\r\n  } else if(summary!==undefined&&name.length>6&&/^\\d+$/.test(name.substring(3,6))&&!/\\d/.test(name.substring(0,3))){\r\n    course=name.substring(0,6);\r\n  }  else {\r\n    course=\"\";\r\n  }\r\n  return course;\r\n}\r\n\r\n\r\n\r\nexport function appendLastSort(newSort, lastSort){\r\n  var lastSortList = [];\r\n  lastSortList = lastSort.split(\",\");\r\n  lastSortList = lastSortList.filter(x=>x !== newSort);\r\n  lastSortList = [...lastSortList, newSort];\r\n  var lastSortListStr=\"\";\r\n  lastSortList.map(function(sortElement,i){\r\n    if(i!==lastSortList.length-1){\r\n      lastSortListStr=lastSortListStr+sortElement+\",\";\r\n    } else {\r\n      lastSortListStr=lastSortListStr+sortElement;\r\n    }\r\n  })\r\n  return lastSortListStr;\r\n}\r\n\r\nexport async function getStorage(key, defaultValue){\r\n  var stored = await AsyncStorage.getItem(key);\r\n  if(stored === undefined){\r\n    stored = defaultValue;\r\n  }\r\n  return stored\r\n}\r\n\r\nexport function allStorage() {\r\n  var values = [],\r\n      keys = Object.keys(localStorage),\r\n      i = keys.length;\r\n  while ( i-- ) {\r\n      values.push( localStorage.getItem(keys[i]) );\r\n  }\r\n  return values;\r\n}\r\n\r\nexport async function syncData(data){\r\n  if(data.length>5){\r\n    var loadedData;\r\n    try{\r\n      loadedData = JSON.parse(data);\r\n    } catch {\r\n      return 0;\r\n    }\r\n    var key = \"\";\r\n    var value = \"\";\r\n    for(var i = 0; i < loadedData.length; i++){\r\n      key = loadedData[i][0];\r\n      key = key.replace(\"@AsyncStorage:\",\"\")\r\n      value = loadedData[i][1];\r\n      await AsyncStorage.setItem(key, value);\r\n      console.log(key + value);\r\n    }\r\n    return loadedData.length;\r\n  } else {\r\n    return 0;\r\n  }\r\n}","F:\\Documents\\Websites\\CalendarTasks\\calendar-tasks\\src\\components\\DayView.js",["92"],"import React from 'react';\r\nimport {getDisplayMonth, eventToday, getDisplayDayFull,} from \"../functions/DateFunctions\"\r\nimport ApiCalendar from 'react-google-calendar-api';\r\nimport pinIcon from \"../assets/thumbtack-solid.svg\";\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\r\nimport Tooltip from 'react-bootstrap/Tooltip'\r\nimport infoIcon from \"../assets/info-circle-solid.svg\"\r\nimport FlipMove from 'react-flip-move';\r\nimport {getSettingsValue} from \"./Settings\"\r\n\r\nexport default class WeekList extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.changeStart = this.changeStart.bind(this);\r\n    this.state = {\r\n      dateDisplayStart: this.firstDayOfWeek(new Date(), 0),\r\n    }\r\n  }\r\n\r\n  firstDayOfWeek(dateObject, firstDayOfWeekIndex) {\r\n    const dayOfWeek = dateObject.getDay();\r\n    var firstDayOfWeek = new Date(dateObject);\r\n    var diff = dayOfWeek >= firstDayOfWeekIndex ? dayOfWeek - firstDayOfWeekIndex : 6 - dayOfWeek;\r\n\r\n    firstDayOfWeek.setDate(dateObject.getDate() - diff);\r\n    firstDayOfWeek.setHours(0,0,0,0);\r\n\r\n    return firstDayOfWeek;\r\n  }\r\n\r\n  //-1 decrease week, 1 increase week\r\n  changeStart(difference){\r\n    if(getSettingsValue(\"skipWeeks\")){\r\n      this.setState({dateDisplayStart: this.state.dateDisplayStart.addDays(7*difference)});\r\n    } else {\r\n      this.setState({dateDisplayStart: this.state.dateDisplayStart.addDays(difference)});\r\n    }\r\n  }\r\n\r\n\r\n  componentDidMount(){\r\n    document.addEventListener(\"keydown\", this.handleKeyDown);\r\n  }\r\n  componentWillUnmount() {\r\n    document.removeEventListener(\"keydown\", this.handleKeyDown);\r\n  }\r\n  handleKeyDown = (event) => {\r\n    if(this.props.currentTab===\"2\"){\r\n      if(event.keyCode===37){\r\n        this.changeStart(-1)\r\n      } else if (event.keyCode === 39){\r\n        this.changeStart(1)\r\n      }\r\n    }\r\n  }\r\n  \r\n  render() {\r\n    // var minWidthNum;\r\n    // if(this.props.nextWeekShow<7){\r\n    //   minWidthNum = this.props.nextWeekShow/7*1150;\r\n    // } else {\r\n    //   minWidthNum = 1150;\r\n    // }\r\n    \r\n    \r\n    return(\r\n      <div className=\"week\">\r\n        <div className=\"weekTable\">\r\n        <div className=\"arrowPosition\" style={{left:\"1.5vw\", position:\"absolute\",cursor:\"pointer\"}} onClick={()=>{this.changeStart(-1)}} >\r\n          <div class=\"arrowDay left\" />\r\n        </div>\r\n        <div className=\"arrowPosition\" style={{right: \"1.5vw\", position:\"absolute\",cursor:\"pointer\"}} onClick={()=>{this.changeStart(1)}} >\r\n          <div className=\"arrowDay right\"/>\r\n        </div>\r\n          <table className=\"weekList\">\r\n            <tbody>\r\n              <tr>\r\n                <WeekListHeader dateDisplayStart={this.state.dateDisplayStart}/>\r\n              </tr>\r\n              <tr>\r\n                <DayList toggleEventInfoOpen={this.props.toggleEventInfoOpen} dateDisplayStart={this.state.dateDisplayStart} calendarObjects={this.props.calendarObjects} courseColors={this.props.courseColors} updateDone={this.props.updateDone} errorTimeoutOpen={this.props.errorTimeoutOpen} updatePin={this.props.updatePin} darkMode={this.props.darkMode}/>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nfunction WeekListHeader(props){\r\n  var weekHeaders = [];\r\n  // var numDays;\r\n  // if(props.days>=7){\r\n  //   numDays = 7;\r\n  // } else {\r\n  //   numDays=props.days;\r\n  // }\r\n  var numDays = 7;\r\n  for (var i = 0; i < numDays; i++) {\r\n    if(props.dateDisplayStart.addDays(i).getDate()===(new Date()).getDate() && props.dateDisplayStart.addDays(i).getMonth()===(new Date()).getMonth() && props.dateDisplayStart.addDays(i).getYear()===(new Date()).getYear()){\r\n      weekHeaders.push( <th key={i} className=\"weekday header3 fadeIn\" style={{backgroundColor:\"#5862bd57\"}}>Today</th> )\r\n    } else {\r\n      weekHeaders.push( <th key={i} className=\"weekday header3 fadeIn\">\r\n        <div style={{fontSize: \"17px\", marginBottom: \"-5px\"}}>\r\n          {getDisplayDayFull(props.dateDisplayStart.addDays(i))}\r\n        </div>\r\n        <div style={{fontSize: \"22px\"}}>\r\n          {getDisplayMonth(props.dateDisplayStart.addDays(i)) + \" \" + props.dateDisplayStart.addDays(i).getDate()}\r\n        </div>\r\n      </th> )\r\n    }\r\n    \r\n  }\r\n  return weekHeaders;\r\n}\r\n\r\nfunction DayList(props){\r\n  var dayListEntries = [];\r\n  // var numDays;\r\n  // if(props.days>=7){\r\n  //   numDays = 7;\r\n  // } else {\r\n  //   numDays=props.days;\r\n  // }\r\n  var numDays = 7;\r\n  for (var i = 0; i < numDays; i++) {\r\n    dayListEntries.push( \r\n      <td className=\"fadeIn\">\r\n        <DayListEntry toggleEventInfoOpen={props.toggleEventInfoOpen} dateDisplayStart={props.dateDisplayStart} key={i} calendarObjects={props.calendarObjects} dayOffset={i} courseColors={props.courseColors} errorTimeoutOpen={props.errorTimeoutOpen} updateDone={props.updateDone} updatePin={props.updatePin} darkMode={props.darkMode}/>\r\n      </td> \r\n    )\r\n  }\r\n  return dayListEntries;\r\n}\r\n\r\nclass DayEntry extends React.Component{\r\n  //Note this code is from the checkoff update accordingly ---------------------------------------------------------\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleItemClick = this.handleItemClick.bind(this);\r\n    this.state ={checked: this.props.done};\r\n  }\r\n  handleItemClick(event: SyntheticEvent<any>, name: string): void {\r\n    if(this.props.calendarIDCurrent===\"\")\r\n      ApiCalendar.setCalendar(\"primary\")\r\n    else \r\n      ApiCalendar.setCalendar(this.props.calendarIDCurrent)\r\n    if (name===\"checkOff\"&&this.props.pin===false) {\r\n      if (ApiCalendar.sign){\r\n        //navigator.vibrate([30]);\r\n        if(this.props.course!==\"\"){\r\n          const event = {\r\n            summary: \"✔️\" + this.props.course + \" \" + this.props.name\r\n          };\r\n          ApiCalendar.updateEvent(event, this.props.id)\r\n          .then(\r\n            this.props.updateDone(this.props.id),\r\n          )\r\n          .catch((error: any) => {\r\n            this.props.errorTimeoutOpen(\"Error 401/404\")\r\n          });\r\n        } else {\r\n          const event = {\r\n            summary: \"✔️\" + this.props.name\r\n          };\r\n          ApiCalendar.updateEvent(event, this.props.id)\r\n          .then(\r\n            this.props.updateDone(this.props.id),\r\n          )\r\n          .catch((error: any) => {\r\n             this.props.errorTimeoutOpen(\"Error 401/404\")\r\n          });\r\n        }\r\n      }\r\n    } else if (name===\"uncheckOff\") {\r\n      if (ApiCalendar.sign){\r\n        //navigator.vibrate([10]);\r\n        if(this.props.course!==\"\"){\r\n          const event = {\r\n            summary: this.props.course + \" \" + this.props.name\r\n          };\r\n          ApiCalendar.updateEvent(event, this.props.id)\r\n          .then(\r\n            this.props.updateDone(this.props.id),\r\n          )\r\n          .catch((error: any) => {\r\n            this.props.errorTimeoutOpen(\"Timeout error\")\r\n          });\r\n        } else {\r\n          const event = {\r\n            summary: this.props.name //remove the check-mark, because no check-mark is ever passed in\r\n          };\r\n          ApiCalendar.updateEvent(event, this.props.id)\r\n          .then(\r\n            this.props.updateDone(this.props.id),\r\n          )\r\n          .catch((error: any) => {\r\n            this.props.errorTimeoutOpen(\"Timeout error\")\r\n          });\r\n        }\r\n      }\r\n    }    \r\n    if ((name===\"pin\"||name===\"checkOff\")&&this.props.pin===true) {\r\n      if (ApiCalendar.sign){\r\n        //navigator.vibrate([10]);\r\n        if(name===\"checkOff\"){\r\n          if(this.props.course!==\"\"){\r\n            const event = {\r\n              summary: \"✔️\" + this.props.course + \" \" + this.props.name\r\n            };\r\n            ApiCalendar.updateEvent(event, this.props.id)\r\n            .then(\r\n              this.props.updatePin(this.props.id),\r\n              this.props.updateDone(this.props.id),\r\n            )\r\n            .catch((error: any) => {\r\n              this.props.errorTimeoutOpen(\"Error 401/404\")\r\n            });\r\n          } else {\r\n            const event = {\r\n              summary: \"✔️\" + this.props.name //remove the pin, because no pin is ever passed in\r\n            };\r\n            ApiCalendar.updateEvent(event, this.props.id)\r\n            .then(\r\n              this.props.updatePin(this.props.id),\r\n              this.props.updateDone(this.props.id),\r\n            )\r\n            .catch((error: any) => {\r\n              this.props.errorTimeoutOpen(\"Error 401/404\")\r\n            });\r\n          }\r\n        } else {\r\n          if(this.props.course!==\"\"){\r\n            const event = {\r\n              summary: this.props.course + \" \" + this.props.name\r\n            };\r\n            ApiCalendar.updateEvent(event, this.props.id)\r\n            .then(\r\n              this.props.updatePin(this.props.id),\r\n            )\r\n            .catch((error: any) => {\r\n              this.props.errorTimeoutOpen(\"Error 401/404\")\r\n            });\r\n          } else {\r\n            const event = {\r\n              summary: this.props.name //remove the pin, because no pin is ever passed in\r\n            };\r\n            ApiCalendar.updateEvent(event, this.props.id)\r\n            .then(\r\n              this.props.updatePin(this.props.id),\r\n            )\r\n            .catch((error: any) => {\r\n              this.props.errorTimeoutOpen(\"Error 401/404\")\r\n            });\r\n          }\r\n        }\r\n        \r\n      }\r\n    } else if (name===\"pin\"&&(this.props.pin===false&&this.props.done===false)) {\r\n      if (ApiCalendar.sign){\r\n        //navigator.vibrate([30]);\r\n        if(this.props.course!==\"\"){\r\n          const event = {\r\n            summary: \"📌\" + this.props.course + \" \" + this.props.name\r\n          };\r\n          ApiCalendar.updateEvent(event, this.props.id)\r\n          .then(\r\n            this.props.updatePin(this.props.id),\r\n          )\r\n          .catch((error: any) => {\r\n            this.props.errorTimeoutOpen(\"Error 401/404\")\r\n          });\r\n        } else {\r\n          const event = {\r\n            summary: \"📌\" + this.props.name\r\n          };\r\n          ApiCalendar.updateEvent(event, this.props.id)\r\n          .then(\r\n            this.props.updatePin(this.props.id),\r\n          )\r\n          .catch((error: any) => {\r\n            this.props.errorTimeoutOpen(\"Error 401/404\")\r\n          });\r\n        }\r\n      } \r\n    }\r\n  }\r\n  \r\n  //--------------------------------------------------------------------------------------\r\n  render(){\r\n    var weekTimeLabelMargin=0;\r\n    if((this.props.pinDisplay!==\"none\" && this.props.descriptionDisplay!==\"none\")&&this.props.courseDisplay===\"none\"){\r\n      weekTimeLabelMargin=47;\r\n    } else if(this.props.courseDisplay===\"none\"){\r\n      weekTimeLabelMargin=15;\r\n    }\r\n    var iconBoxWeekRight=\"0px\";\r\n    var iconBoxWeekBottom=\"0px\";\r\n    if(this.props.courseDisplay===\"none\"){\r\n      iconBoxWeekRight=\"-2px\";\r\n      iconBoxWeekBottom=\"-5px\";\r\n    }\r\n    var pinClass = \"pinIconWeek\"\r\n    if(this.props.pin===true){\r\n      pinClass+=\" pinInWeek\"\r\n    } else {\r\n      pinClass+=\" pinOutWeek\"\r\n    }\r\n    var dayStyle;\r\n    if(getSettingsValue(\"useEventColours\")){\r\n      if(!getSettingsValue(\"darkMode\"))\r\n        dayStyle = {backgroundColor:this.props.courseColor+\"90\"};\r\n      else\r\n        dayStyle = {backgroundColor:this.props.courseColor+\"B0\"};\r\n    }\r\n\r\n    var weekEntryClass=\"weekEntry\";\r\n    var weekEntryOpacity=\"1\";\r\n    if(this.props.done===true){\r\n      weekEntryClass=weekEntryClass+\" weekEntryDone\";\r\n      weekEntryOpacity=\"0.5\";\r\n      if(getSettingsValue(\"useEventColours\")){\r\n        if(!getSettingsValue(\"darkMode\"))\r\n          dayStyle = {backgroundColor:this.props.courseColor+\"50\"};\r\n        else\r\n          dayStyle = {backgroundColor:this.props.courseColor+\"50\"};\r\n      }\r\n    }\r\n\r\n    \r\n\r\n    return(\r\n      <div className={weekEntryClass} style={dayStyle}>\r\n        <div onClick={(e) => this.handleItemClick(e, this.props.clickActionCheck)} className=\"weekEventLabel\" style={{\"opacity\":weekEntryOpacity, \"color\":this.props.checkColor, \"textDecoration\":this.props.textStyle, \"transition\":\"all 0.5s\"}}>{this.props.name}</div>\r\n        <div onClick={(e) => this.handleItemClick(e, this.props.clickActionCheck)} className=\"weekTimeLabel\" style={{\"marginRight\":weekTimeLabelMargin+\"px\",\"opacity\":weekEntryOpacity, \"transition\":\"all 0.5s\"}}>{this.props.timeStart+this.props.displayTimeEnd}</div>\r\n        <div className=\"courseBubble\" style={{\"display\":this.props.courseDisplay}}><span style={{\"backgroundColor\":this.props.courseColor}}>{this.props.course}</span></div>\r\n        <div className=\"iconBoxWeek fadeIn\" style={{\"right\":iconBoxWeekRight,\"bottom\":iconBoxWeekBottom}}>\r\n          <img onClick={(e) => this.handleItemClick(e, \"pin\")} alt=\"pin\" className={pinClass} src={pinIcon} style={{\"display\":this.props.pinDisplay}}/>\r\n            <OverlayTrigger placement={\"bottom\"} overlay={<Tooltip><div dangerouslySetInnerHTML={{ __html: this.props.description }}></div></Tooltip>}>\r\n              <img onClick={()=>{this.props.toggleEventInfoOpen(true,this.props.task);}} alt=\"descriptions\" className=\"infoIconWeek\" src={infoIcon} style={{\"display\":this.props.descriptionDisplay, \"opacity\":weekEntryOpacity}}/>\r\n            </OverlayTrigger>\r\n        </div>\r\n      </div> \r\n    )\r\n      \r\n  }\r\n}\r\n\r\nclass DayListEntry extends React.Component{\r\n  \r\n  render(){\r\n    return(\r\n      <FlipMove staggerDurationBy={2} easing={\"ease\"} duration={700} staggerDelayBy={getSettingsValue(\"enableAnimations\")===true?55:0} leaveAnimation=\"none\" enterAnimation={getSettingsValue(\"enableAnimations\")===true?\"elevator\":\"fade\"}>\r\n        {this.props.calendarObjects.map(function(task){\r\n          var displayTimeEnd;\r\n          if(task.timeEnd===\"All day\"){\r\n            displayTimeEnd=\"\";\r\n          } else {\r\n            displayTimeEnd=\" - \"+task.timeEnd;\r\n          }\r\n          var courseDisplay=\"none\";\r\n          if(task.course!==\"\"){\r\n            courseDisplay=\"\";\r\n          }\r\n          \r\n          var descriptionDisplay=\"none\";\r\n          if(task.description!==undefined&&task.description!==null){\r\n            descriptionDisplay=\"\";\r\n          }\r\n          var pinDisplay=\"none\";\r\n          if(task.done===false){\r\n            pinDisplay=\"\";\r\n          }\r\n          var textStyle=\"none\";\r\n          var clickActionCheck=\"checkOff\";\r\n          var checkColor=\"\";\r\n          if(task.done===true){\r\n            textStyle = \"line-through\";\r\n            clickActionCheck=\"uncheckOff\";\r\n            // checkColor=\"#777777\";\r\n          }\r\n          if(task.important===true&&this.props.darkMode===true&&task.done===false){\r\n            checkColor=\"#ff8b8b\"\r\n          } else if (task.important===true&&this.props.darkMode===false&&task.done===false){\r\n            checkColor=\"#C85000\"\r\n          }\r\n          if(task.hide===false&&(eventToday(new Date(task.start.dateTime),this.props.dateDisplayStart.addDays(this.props.dayOffset))||eventToday(new Date(task.end.date),this.props.dateDisplayStart.addDays(this.props.dayOffset)))){\r\n            return(\r\n              <DayEntry\r\n                key={task.id}\r\n                toggleEventInfoOpen={this.props.toggleEventInfoOpen}\r\n                task={task}\r\n                checkColor={checkColor}\r\n                textStyle={textStyle}\r\n                name={task.name}\r\n                timeStart={task.timeStart}\r\n                displayTimeEnd={displayTimeEnd}\r\n                courseDisplay={courseDisplay}\r\n                courseColor={task.courseColor}\r\n                course={task.course}\r\n                descriptionDisplay={descriptionDisplay}\r\n                description={task.description}\r\n                id={task.id}\r\n                updateDone={this.props.updateDone}\r\n                calendarIDCurrent={task.calendarID}\r\n                done={task.done}\r\n                clickActionCheck={clickActionCheck}\r\n                pin={task.pin}\r\n                updatePin={this.props.updatePin}\r\n                pinDisplay={pinDisplay}\r\n                important={task.important}\r\n                darkMode={this.props.darkMode}\r\n              />\r\n            )\r\n          }\r\n        }, this)}\r\n      </FlipMove>\r\n    )\r\n  }\r\n}\r\n","F:\\Documents\\Websites\\CalendarTasks\\calendar-tasks\\src\\components\\TimeOutError.js",[],"F:\\Documents\\Websites\\CalendarTasks\\calendar-tasks\\src\\functions\\DateFunctions.js",[],"F:\\Documents\\Websites\\CalendarTasks\\calendar-tasks\\src\\components\\ButtonStyle.js",[],"F:\\Documents\\Websites\\CalendarTasks\\calendar-tasks\\src\\components\\ColorPicker.js",[],{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":275,"column":11,"nodeType":"99","endLine":275,"endColumn":40},{"ruleId":"97","severity":1,"message":"98","line":280,"column":11,"nodeType":"99","endLine":280,"endColumn":40},{"ruleId":"97","severity":1,"message":"98","line":296,"column":11,"nodeType":"99","endLine":296,"endColumn":40},{"ruleId":"97","severity":1,"message":"98","line":301,"column":11,"nodeType":"99","endLine":301,"endColumn":40},{"ruleId":"100","severity":1,"message":"101","line":334,"column":92,"nodeType":"102","messageId":"103","endLine":488,"endColumn":8},{"ruleId":"104","severity":1,"message":"105","line":485,"column":26,"nodeType":"106","messageId":"107","endLine":485,"endColumn":34},{"ruleId":"108","severity":1,"message":"109","line":711,"column":7,"nodeType":"110","messageId":"111","endLine":711,"endColumn":12},{"ruleId":"112","severity":1,"message":"113","line":721,"column":1,"nodeType":"114","messageId":"115","endLine":725,"endColumn":2},{"ruleId":"104","severity":1,"message":"116","line":39,"column":45,"nodeType":"106","messageId":"117","endLine":39,"endColumn":53},{"ruleId":"104","severity":1,"message":"105","line":173,"column":20,"nodeType":"106","messageId":"107","endLine":173,"endColumn":28},{"ruleId":"104","severity":1,"message":"116","line":354,"column":41,"nodeType":"106","messageId":"117","endLine":354,"endColumn":49},"no-native-reassign",["118"],"no-negated-in-lhs",["119"],"react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'z', 'z', 'calendarIDPassed', 'calendarObjectsTotal', 'calendarObjectsTotal', 'calendarObjectsTotal'.","ArrowFunctionExpression","unsafeRefs","array-callback-return","Array.prototype.map() expects a return value from function.","FunctionExpression","expectedInside","no-unused-vars","'Input' is assigned a value but never used.","Identifier","unusedVar","no-extend-native","Date prototype is read only, properties should not be added.","AssignmentExpression","unexpected","Array.prototype.map() expects a value to be returned at the end of function.","expectedAtEnd","no-global-assign","no-unsafe-negation"]